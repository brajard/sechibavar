
//----------------------------------------------------
// project: sechiba     header generated by YAO version v.9
//----------------------------------------------------

// ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ LES FONCTIONS PREDEFINIES
/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_1(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_1; ++Yws){
			 YG_humr_c_1(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_1; ++Yws){
			 YG_humr_c_1(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_1()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_1; ++Yws){
			 Yhumr_c_1(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_1; ++Yws){
			 Yhumr_c_1(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_1(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_1()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_1(Yw1) = new humr_c_1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_2(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_2; ++Yws){
			 YG_humr_c_2(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_2; ++Yws){
			 YG_humr_c_2(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_2()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_2; ++Yws){
			 Yhumr_c_2(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_2; ++Yws){
			 Yhumr_c_2(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_2(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_2()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_2(Yw1) = new humr_c_2 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_3(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_3; ++Yws){
			 YG_humr_c_3(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_3; ++Yws){
			 YG_humr_c_3(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_3()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_3; ++Yws){
			 Yhumr_c_3(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_3; ++Yws){
			 Yhumr_c_3(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_3(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_3()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_3(Yw1) = new humr_c_3 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_4(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_4; ++Yws){
			 YG_humr_c_4(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_4; ++Yws){
			 YG_humr_c_4(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_4()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_4; ++Yws){
			 Yhumr_c_4(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_4; ++Yws){
			 Yhumr_c_4(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_4(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_4", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_4(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_4()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_4(Yw1) = new humr_c_4 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_5(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_5; ++Yws){
			 YG_humr_c_5(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_5; ++Yws){
			 YG_humr_c_5(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_5()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_5; ++Yws){
			 Yhumr_c_5(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_5; ++Yws){
			 Yhumr_c_5(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_5(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_5", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_5(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_5()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_5(Yw1) = new humr_c_5 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_6(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_6; ++Yws){
			 YG_humr_c_6(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_6; ++Yws){
			 YG_humr_c_6(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_6()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_6; ++Yws){
			 Yhumr_c_6(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_6; ++Yws){
			 Yhumr_c_6(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_6(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_6", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_6(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_6()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_6(Yw1) = new humr_c_6 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_7(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_7; ++Yws){
			 YG_humr_c_7(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_7; ++Yws){
			 YG_humr_c_7(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_7()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_7; ++Yws){
			 Yhumr_c_7(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_7; ++Yws){
			 Yhumr_c_7(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_7(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_7", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_7(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_7()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_7(Yw1) = new humr_c_7 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_8(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_8; ++Yws){
			 YG_humr_c_8(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_8; ++Yws){
			 YG_humr_c_8(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_8()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_8; ++Yws){
			 Yhumr_c_8(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_8; ++Yws){
			 Yhumr_c_8(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_8(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_8", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_8(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_8()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_8(Yw1) = new humr_c_8 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_9(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_9; ++Yws){
			 YG_humr_c_9(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_9; ++Yws){
			 YG_humr_c_9(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_9()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_9; ++Yws){
			 Yhumr_c_9(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_9; ++Yws){
			 Yhumr_c_9(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_9(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_9", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_9(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_9()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_9(Yw1) = new humr_c_9 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_10(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_10; ++Yws){
			 YG_humr_c_10(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_10; ++Yws){
			 YG_humr_c_10(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_10()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_10; ++Yws){
			 Yhumr_c_10(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_10; ++Yws){
			 Yhumr_c_10(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_10(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_10", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_10(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_10()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_10(Yw1) = new humr_c_10 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_11(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_11; ++Yws){
			 YG_humr_c_11(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_11; ++Yws){
			 YG_humr_c_11(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_11()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_11; ++Yws){
			 Yhumr_c_11(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_11; ++Yws){
			 Yhumr_c_11(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_11(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_11", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_11(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_11()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_11(Yw1) = new humr_c_11 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_12(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_12; ++Yws){
			 YG_humr_c_12(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_12; ++Yws){
			 YG_humr_c_12(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_12()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_12; ++Yws){
			 Yhumr_c_12(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_12; ++Yws){
			 Yhumr_c_12(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_12(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_12", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_12(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_12()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_12(Yw1) = new humr_c_12 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_humr_c_13(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_13; ++Yws){
			 YG_humr_c_13(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_humr_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_13; ++Yws){
			 YG_humr_c_13(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_humr_c_13()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_13; ++Yws){
			 Yhumr_c_13(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_humr_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_humr_c_13; ++Yws){
			 Yhumr_c_13(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_humr_c_13(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("humr_c_13", Yws, Yw1, Yw2, Yw3, Ywt, &YS_humr_c_13(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_humr_c_13()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhumr_c_13(Yw1) = new humr_c_13 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_rsol_cste(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_cste; ++Yws){
			 YG_rsol_cste(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_rsol_cste(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_cste; ++Yws){
			 YG_rsol_cste(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_rsol_cste()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_cste; ++Yws){
			 Yrsol_cste(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_rsol_cste(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_cste; ++Yws){
			 Yrsol_cste(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_rsol_cste(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("rsol_cste", Yws, Yw1, Yw2, Yw3, Ywt, &YS_rsol_cste(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_rsol_cste()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yrsol_cste(Yw1) = new rsol_cste ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_capa_wet(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_wet; ++Yws){
			 YG_so_capa_wet(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_capa_wet(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_wet; ++Yws){
			 YG_so_capa_wet(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_capa_wet()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_wet; ++Yws){
			 Yso_capa_wet(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_capa_wet(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_wet; ++Yws){
			 Yso_capa_wet(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_capa_wet(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_capa_wet", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_capa_wet(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_so_capa_wet()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_capa_wet(Yw1) = new so_capa_wet ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_capa_dry(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_dry; ++Yws){
			 YG_so_capa_dry(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_capa_dry(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_dry; ++Yws){
			 YG_so_capa_dry(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_capa_dry()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_dry; ++Yws){
			 Yso_capa_dry(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_capa_dry(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_dry; ++Yws){
			 Yso_capa_dry(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_capa_dry(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_capa_dry", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_capa_dry(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_so_capa_dry()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_capa_dry(Yw1) = new so_capa_dry ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_min_drain(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain; ++Yws){
			 YG_min_drain(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_min_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain; ++Yws){
			 YG_min_drain(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_min_drain()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain; ++Yws){
			 Ymin_drain(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_min_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain; ++Yws){
			 Ymin_drain(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_min_drain(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("min_drain", Yws, Yw1, Yw2, Yw3, Ywt, &YS_min_drain(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_min_drain()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ymin_drain(Yw1) = new min_drain ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_max_drain(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_max_drain; ++Yws){
			 YG_max_drain(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_max_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_max_drain; ++Yws){
			 YG_max_drain(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_max_drain()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_max_drain; ++Yws){
			 Ymax_drain(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_max_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_max_drain; ++Yws){
			 Ymax_drain(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_max_drain(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("max_drain", Yws, Yw1, Yw2, Yw3, Ywt, &YS_max_drain(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_max_drain()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ymax_drain(Yw1) = new max_drain ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_exp_drain(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_exp_drain; ++Yws){
			 YG_exp_drain(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_exp_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_exp_drain; ++Yws){
			 YG_exp_drain(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_exp_drain()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_exp_drain; ++Yws){
			 Yexp_drain(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_exp_drain(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_exp_drain; ++Yws){
			 Yexp_drain(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_exp_drain(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("exp_drain", Yws, Yw1, Yw2, Yw3, Ywt, &YS_exp_drain(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_exp_drain()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yexp_drain(Yw1) = new exp_drain ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_cond(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond; ++Yws){
			 YG_so_cond(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_cond(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond; ++Yws){
			 YG_so_cond(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_cond()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond; ++Yws){
			 Yso_cond(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_cond(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond; ++Yws){
			 Yso_cond(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_cond(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_cond", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_cond(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_so_cond()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_cond(Yw1) = new so_cond ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_capa(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa; ++Yws){
			 YG_so_capa(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_capa(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa; ++Yws){
			 YG_so_capa(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_capa()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa; ++Yws){
			 Yso_capa(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_capa(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa; ++Yws){
			 Yso_capa(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_capa(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_capa", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_capa(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_so_capa()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_capa(Yw1) = new so_capa ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_dpu_cste1(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_cste1; ++Yws){
			 YG_dpu_cste1(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_dpu_cste1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_cste1; ++Yws){
			 YG_dpu_cste1(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_dpu_cste1()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_cste1; ++Yws){
			 Ydpu_cste1(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_dpu_cste1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_cste1; ++Yws){
			 Ydpu_cste1(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_dpu_cste1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("dpu_cste1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_dpu_cste1(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_dpu_cste1()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ydpu_cste1(Yw1) = new dpu_cste1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_mx_eau_eau(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_eau; ++Yws){
			 YG_mx_eau_eau(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_mx_eau_eau(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_eau; ++Yws){
			 YG_mx_eau_eau(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_mx_eau_eau()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_eau; ++Yws){
			 Ymx_eau_eau(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_mx_eau_eau(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_eau; ++Yws){
			 Ymx_eau_eau(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_mx_eau_eau(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("mx_eau_eau", Yws, Yw1, Yw2, Yw3, Ywt, &YS_mx_eau_eau(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_mx_eau_eau()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ymx_eau_eau(Yw1) = new mx_eau_eau ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_rveg_par(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_par; ++Yws){
			 YG_rveg_par(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_rveg_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_par; ++Yws){
			 YG_rveg_par(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_rveg_par()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_par; ++Yws){
			 Yrveg_par(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_rveg_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_par; ++Yws){
			 Yrveg_par(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_rveg_par(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("rveg_par", Yws, Yw1, Yw2, Yw3, Ywt, &YS_rveg_par(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_rveg_par()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yrveg_par(Yw1) = new rveg_par ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_z0_par(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_par; ++Yws){
			 YG_z0_par(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_z0_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_par; ++Yws){
			 YG_z0_par(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_z0_par()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_par; ++Yws){
			 Yz0_par(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_z0_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_par; ++Yws){
			 Yz0_par(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_z0_par(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("z0_par", Yws, Yw1, Yw2, Yw3, Ywt, &YS_z0_par(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_z0_par()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yz0_par(Yw1) = new z0_par ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_z0_over(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over; ++Yws){
			 YG_z0_over(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_z0_over(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over; ++Yws){
			 YG_z0_over(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_z0_over()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over; ++Yws){
			 Yz0_over(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_z0_over(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over; ++Yws){
			 Yz0_over(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_z0_over(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("z0_over", Yws, Yw1, Yw2, Yw3, Ywt, &YS_z0_over(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_z0_over()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yz0_over(Yw1) = new z0_over ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_albedovis(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedovis; ++Yws){
			 YG_albedovis(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_albedovis(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedovis; ++Yws){
			 YG_albedovis(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_albedovis()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedovis; ++Yws){
			 Yalbedovis(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_albedovis(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedovis; ++Yws){
			 Yalbedovis(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_albedovis(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("albedovis", Yws, Yw1, Yw2, Yw3, Ywt, &YS_albedovis(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_albedovis()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yalbedovis(Yw1) = new albedovis ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_albedonir(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedonir; ++Yws){
			 YG_albedonir(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_albedonir(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedonir; ++Yws){
			 YG_albedonir(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_albedonir()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedonir; ++Yws){
			 Yalbedonir(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_albedonir(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albedonir; ++Yws){
			 Yalbedonir(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_albedonir(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("albedonir", Yws, Yw1, Yw2, Yw3, Ywt, &YS_albedonir(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_albedonir()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yalbedonir(Yw1) = new albedonir ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_emis_par(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_par; ++Yws){
			 YG_emis_par(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_emis_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_par; ++Yws){
			 YG_emis_par(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_emis_par()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_par; ++Yws){
			 Yemis_par(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_emis_par(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_par; ++Yws){
			 Yemis_par(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_emis_par(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("emis_par", Yws, Yw1, Yw2, Yw3, Ywt, &YS_emis_par(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_emis_par()  
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yemis_par(Yw1) = new emis_par ())==NULL) Ycreate_errnew();}
}/*M1_ADJUS*/ 
void Yadjust_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_emis_c; ++Yws) 
	 { Ystate_emis_c(Yws, Yw1) -= Yepsi_emis_c(Yws, Yw1) * Ygrad_emis_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_emis_c; ++Yws) 
	 { Ydelta_emis_c(Yws, Yw1, 0) -= Yepsi_emis_c(Yws, Yw1) * Ygrad_emis_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_emis_c; ++Yws) 
	 { Ystate_emis_c(Yws, Yw1) += Ydelta_emis_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_emis_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 tab[Y3windice] += YG_emis_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Y3x[Y3windice] = Yemis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_emis_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Yemis_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_emis_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 g[Y3windice] = Yemis_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Y3xinf[Y3windice] = Yemis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Y3xsup[Y3windice] = Yemis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Y3dxmin[Y3windice] = Yemis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_emis_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Ydelta_emis_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_emis_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_emis_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_emis_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YG_emis_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_emis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YG_emis_c(Yws, Yw1) = YD_emis_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_emis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YD_emis_c(Yws, Yw1, Ywt) = YS_emis_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_emis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YD_emis_c(Yws, Yw1, Ywt) = YG_emis_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_emis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YS_emis_c(Yws, Yw1) = YD_emis_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_emis_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YS_emis_c(Yws, Yw1) = YD_emis_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_emis_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YS_emis_c(Yws, Yw1) = YD_emis_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_emis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 YG_emis_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_emis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Yemis_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_emis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Yemis_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_emis_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("emis_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_emis_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_emis_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("emis_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "emis_c", Yws, Yw1, -1, -1, Ywt, &Ystate_emis_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_emis_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_emis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Yemis_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_emis_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yemis_c(Yw1) = new Yaoemis_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_emis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_emis_c; ++Yws){
			 Ywish_emis_c(Yws, Yw1) = val;}}
}/*M1_ADJUS*/ 
void Yadjust_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_rveg_c; ++Yws) 
	 { Ystate_rveg_c(Yws, Yw1) -= Yepsi_rveg_c(Yws, Yw1) * Ygrad_rveg_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_rveg_c; ++Yws) 
	 { Ydelta_rveg_c(Yws, Yw1, 0) -= Yepsi_rveg_c(Yws, Yw1) * Ygrad_rveg_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_rveg_c; ++Yws) 
	 { Ystate_rveg_c(Yws, Yw1) += Ydelta_rveg_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_rveg_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 tab[Y3windice] += YG_rveg_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Y3x[Y3windice] = Yrveg_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_rveg_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Yrveg_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_rveg_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 g[Y3windice] = Yrveg_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Y3xinf[Y3windice] = Yrveg_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Y3xsup[Y3windice] = Yrveg_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Y3dxmin[Y3windice] = Yrveg_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_rveg_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Ydelta_rveg_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_rveg_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_rveg_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_rveg_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YG_rveg_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_rveg_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YG_rveg_c(Yws, Yw1) = YD_rveg_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_rveg_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YD_rveg_c(Yws, Yw1, Ywt) = YS_rveg_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_rveg_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YD_rveg_c(Yws, Yw1, Ywt) = YG_rveg_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_rveg_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YS_rveg_c(Yws, Yw1) = YD_rveg_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_rveg_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YS_rveg_c(Yws, Yw1) = YD_rveg_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_rveg_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YS_rveg_c(Yws, Yw1) = YD_rveg_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_rveg_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 YG_rveg_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_rveg_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Yrveg_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_rveg_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Yrveg_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_rveg_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("rveg_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_rveg_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_rveg_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("rveg_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "rveg_c", Yws, Yw1, -1, -1, Ywt, &Ystate_rveg_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_rveg_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_rveg_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Yrveg_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_rveg_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yrveg_c(Yw1) = new Yaorveg_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_rveg_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rveg_c; ++Yws){
			 Ywish_rveg_c(Yws, Yw1) = val;}}
}/*M1_ADJUS*/ 
void Yadjust_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_z0_c; ++Yws) 
	 { Ystate_z0_c(Yws, Yw1) -= Yepsi_z0_c(Yws, Yw1) * Ygrad_z0_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_z0_c; ++Yws) 
	 { Ydelta_z0_c(Yws, Yw1, 0) -= Yepsi_z0_c(Yws, Yw1) * Ygrad_z0_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_z0_c; ++Yws) 
	 { Ystate_z0_c(Yws, Yw1) += Ydelta_z0_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_z0_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 tab[Y3windice] += YG_z0_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Y3x[Y3windice] = Yz0_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_z0_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Yz0_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_z0_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 g[Y3windice] = Yz0_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Y3xinf[Y3windice] = Yz0_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Y3xsup[Y3windice] = Yz0_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Y3dxmin[Y3windice] = Yz0_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_z0_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Ydelta_z0_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_z0_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_z0_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_z0_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YG_z0_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_z0_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YG_z0_c(Yws, Yw1) = YD_z0_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_z0_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YD_z0_c(Yws, Yw1, Ywt) = YS_z0_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_z0_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YD_z0_c(Yws, Yw1, Ywt) = YG_z0_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_z0_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YS_z0_c(Yws, Yw1) = YD_z0_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_z0_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YS_z0_c(Yws, Yw1) = YD_z0_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_z0_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YS_z0_c(Yws, Yw1) = YD_z0_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_z0_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 YG_z0_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_z0_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Yz0_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_z0_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Yz0_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_z0_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("z0_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_z0_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_z0_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("z0_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "z0_c", Yws, Yw1, -1, -1, Ywt, &Ystate_z0_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_z0_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_z0_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Yz0_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_z0_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yz0_c(Yw1) = new Yaoz0_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_z0_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_c; ++Yws){
			 Ywish_z0_c(Yws, Yw1) = val;}}
}/*M1_ADJUS*/ 
void Yadjust_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_cond_c; ++Yws) 
	 { Ystate_so_cond_c(Yws, Yw1) -= Yepsi_so_cond_c(Yws, Yw1) * Ygrad_so_cond_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_cond_c; ++Yws) 
	 { Ydelta_so_cond_c(Yws, Yw1, 0) -= Yepsi_so_cond_c(Yws, Yw1) * Ygrad_so_cond_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_cond_c; ++Yws) 
	 { Ystate_so_cond_c(Yws, Yw1) += Ydelta_so_cond_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_so_cond_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 tab[Y3windice] += YG_so_cond_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Y3x[Y3windice] = Yso_cond_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_so_cond_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Yso_cond_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_so_cond_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 g[Y3windice] = Yso_cond_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Y3xinf[Y3windice] = Yso_cond_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Y3xsup[Y3windice] = Yso_cond_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Y3dxmin[Y3windice] = Yso_cond_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_so_cond_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Ydelta_so_cond_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_so_cond_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_so_cond_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_cond_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YG_so_cond_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_so_cond_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YG_so_cond_c(Yws, Yw1) = YD_so_cond_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_so_cond_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YD_so_cond_c(Yws, Yw1, Ywt) = YS_so_cond_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_so_cond_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YD_so_cond_c(Yws, Yw1, Ywt) = YG_so_cond_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_so_cond_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YS_so_cond_c(Yws, Yw1) = YD_so_cond_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_so_cond_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YS_so_cond_c(Yws, Yw1) = YD_so_cond_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_so_cond_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YS_so_cond_c(Yws, Yw1) = YD_so_cond_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_so_cond_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 YG_so_cond_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_cond_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Yso_cond_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_cond_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Yso_cond_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_cond_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_cond_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_cond_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_so_cond_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("so_cond_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "so_cond_c", Yws, Yw1, -1, -1, Ywt, &Ystate_so_cond_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_so_cond_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_so_cond_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Yso_cond_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_so_cond_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_cond_c(Yw1) = new Yaoso_cond_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_so_cond_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_cond_c; ++Yws){
			 Ywish_so_cond_c(Yws, Yw1) = val;}}
}/*M1_ADJUS*/ 
void Yadjust_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_capa_c; ++Yws) 
	 { Ystate_so_capa_c(Yws, Yw1) -= Yepsi_so_capa_c(Yws, Yw1) * Ygrad_so_capa_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_capa_c; ++Yws) 
	 { Ydelta_so_capa_c(Yws, Yw1, 0) -= Yepsi_so_capa_c(Yws, Yw1) * Ygrad_so_capa_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_so_capa_c; ++Yws) 
	 { Ystate_so_capa_c(Yws, Yw1) += Ydelta_so_capa_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_so_capa_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 tab[Y3windice] += YG_so_capa_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Y3x[Y3windice] = Yso_capa_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_so_capa_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Yso_capa_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_so_capa_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 g[Y3windice] = Yso_capa_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Y3xinf[Y3windice] = Yso_capa_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Y3xsup[Y3windice] = Yso_capa_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Y3dxmin[Y3windice] = Yso_capa_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_so_capa_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Ydelta_so_capa_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_so_capa_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_so_capa_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_capa_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YG_so_capa_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_so_capa_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YG_so_capa_c(Yws, Yw1) = YD_so_capa_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_so_capa_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YD_so_capa_c(Yws, Yw1, Ywt) = YS_so_capa_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_so_capa_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YD_so_capa_c(Yws, Yw1, Ywt) = YG_so_capa_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_so_capa_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YS_so_capa_c(Yws, Yw1) = YD_so_capa_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_so_capa_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YS_so_capa_c(Yws, Yw1) = YD_so_capa_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_so_capa_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YS_so_capa_c(Yws, Yw1) = YD_so_capa_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_so_capa_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 YG_so_capa_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_capa_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Yso_capa_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_capa_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Yso_capa_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_capa_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_capa_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_capa_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_so_capa_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("so_capa_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "so_capa_c", Yws, Yw1, -1, -1, Ywt, &Ystate_so_capa_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_so_capa_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_so_capa_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Yso_capa_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_so_capa_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yso_capa_c(Yw1) = new Yaoso_capa_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_so_capa_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_capa_c; ++Yws){
			 Ywish_so_capa_c(Yws, Yw1) = val;}}
}/*M1_ADJUS*/ 
void Yadjust_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_albvis_c; ++Yws) 
	 { Ystate_albvis_c(Yws, Yw1) -= Yepsi_albvis_c(Yws, Yw1) * Ygrad_albvis_c(Yws, Yw1); 
	}
}/*M1_ADJUD*/ 
void Yc_adjustd_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_albvis_c; ++Yws) 
	 { Ydelta_albvis_c(Yws, Yw1, 0) -= Yepsi_albvis_c(Yws, Yw1) * Ygrad_albvis_c(Yws, Yw1); 
	 }
}/*M1_ADJUK*/ 
void Yc_adjustk_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1) 
	 for (int Yws=0;Yws<YNBS_albvis_c; ++Yws) 
	 { Ystate_albvis_c(Yws, Yw1) += Ydelta_albvis_c(Yws, Yw1, 0); 
	 }
}/*M1_GCTOTB  */ 
void YgradCTOtab_albvis_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 tab[Y3windice] += YG_albvis_c(Yws, Yw1); ++Y3windice;}}
}/*M1_VSTA*/ 
void Y3valstate_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Y3x[Y3windice] = Yalbvis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GSTA*/ 
void Y3getstate_albvis_c(float x[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Yalbvis_c(Yw1)->Ystate[Yws] = x[Y3windice]; ++Y3windice;}}
}/*M1_VGRAD*/ 
void Y3valgrad_albvis_c(float g[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 g[Y3windice] = Yalbvis_c(Yw1)->Ygrad[Yws]; ++Y3windice;}}
}/*M1_VXINF*/ 
void Y3valxinf_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Y3xinf[Y3windice] = Yalbvis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VXSUP*/ 
void Y3valxsup_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Y3xsup[Y3windice] = Yalbvis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_VDXMI*/ 
void Y3valdxmin_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Y3dxmin[Y3windice] = Yalbvis_c(Yw1)->Ystate[Yws]; ++Y3windice;}}
}/*M1_GDEL*/ 
void Y3getdelta_albvis_c(float x[])
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Ydelta_albvis_c(Yws, Ywi, 0) = x[Y3windice]; ++Y3windice;}}
}/*M1_VDEL*/ 
void Y3valdelta_albvis_c()
{
	 for (int Ywi=0; Ywi<YA1_SParam; ++Ywi){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Y3x[Y3windice] = Ydelta_albvis_c(Yws, Ywi, 0); ++Y3windice;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_albvis_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YG_albvis_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQPD */ 
void YgradEQPdelta_albvis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YG_albvis_c(Yws, Yw1) = YD_albvis_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_DEQPS */ 
void YdeltaEQPstate_albvis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YD_albvis_c(Yws, Yw1, Ywt) = YS_albvis_c(Yws, Yw1) * pfact;}}}
}/*M1_DEQPG */ 
void YdeltaEQPgrad_albvis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YD_albvis_c(Yws, Yw1, Ywt) = YG_albvis_c(Yws, Yw1) * pfact;}}}
}/*M1_SEQPD */ 
void YstateEQPdelta_albvis_c(int frompdt, int topdt, double pfact)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YS_albvis_c(Yws, Yw1) = YD_albvis_c(Yws, Yw1, Ywt) * pfact;}}}
}/*M1_SEQPOD */ 
void YstateEQPOdelta_albvis_c(int frompdt, int topdt, double pfact, char *codop)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YS_albvis_c(Yws, Yw1) = YD_albvis_c(Yws, Yw1, Ywt) * (pfact*(1+Ygetval(codop)));}}}
}/*M1_SEQAPTD */ 
void YstateEQAPTdelta_albvis_c(int frompdt, int topdt, double pfact, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YS_albvis_c(Yws, Yw1) = YD_albvis_c(Yws, Yw1, Ywt) + pfact * tab[Y3windice++];}}}
}/*M1_GEQV */ 
void YgradEQval_albvis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 YG_albvis_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_albvis_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Yalbvis_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_albvis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Yalbvis_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_albvis_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("albvis_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_albvis_c(Yws, Yw1), val);
}/*M0_OUTOB*/ 
int Youtoobs_albvis_c(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("albvis_c");
	 Yaobs.smod = Yws;/*M1_OUTOB*/ 
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1)
	 {	if(select_io(yiokind, "albvis_c", Yws, Yw1, -1, -1, Ywt, &Ystate_albvis_c(Yws, Yw1)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_albvis_c(Yws, Yw1);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_SEPS*/ 
void Ysetepsi_albvis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Yalbvis_c(Yw1)->Yepsi[Yws] = val;}}
}/*M1_CREY*/ 
void Ycreate_albvis_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yalbvis_c(Yw1) = new Yaoalbvis_c ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_albvis_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albvis_c; ++Yws){
			 Ywish_albvis_c(Yws, Yw1) = val;}}
}/*M1_TBTOG   */ 
void YtabTOgrad_rsol_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_c; ++Yws){
			 YG_rsol_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_rsol_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_c; ++Yws){
			 YG_rsol_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_rsol_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_c; ++Yws){
			 Yrsol_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_rsol_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_rsol_c; ++Yws){
			 Yrsol_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_rsol_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("rsol_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_rsol_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_rsol_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yrsol_c(Yw1) = new Yaorsol_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_dpu_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_c; ++Yws){
			 YG_dpu_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_dpu_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_c; ++Yws){
			 YG_dpu_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_dpu_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_c; ++Yws){
			 Ydpu_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_dpu_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_dpu_c; ++Yws){
			 Ydpu_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_dpu_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("dpu_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_dpu_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_dpu_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ydpu_c(Yw1) = new Yaodpu_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_mx_eau_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_c; ++Yws){
			 YG_mx_eau_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_mx_eau_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_c; ++Yws){
			 YG_mx_eau_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_mx_eau_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_c; ++Yws){
			 Ymx_eau_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_mx_eau_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_eau_c; ++Yws){
			 Ymx_eau_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_mx_eau_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("mx_eau_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_mx_eau_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_mx_eau_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ymx_eau_c(Yw1) = new Yaomx_eau_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_1(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_1; ++Yws){
			 YG_hum_c_1(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_1; ++Yws){
			 YG_hum_c_1(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_1()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_1; ++Yws){
			 Yhum_c_1(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_1; ++Yws){
			 Yhum_c_1(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_1(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_1() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_1(Yw1) = new Yaohum_c_1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_2(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_2; ++Yws){
			 YG_hum_c_2(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_2; ++Yws){
			 YG_hum_c_2(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_2()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_2; ++Yws){
			 Yhum_c_2(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_2; ++Yws){
			 Yhum_c_2(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_2(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_2() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_2(Yw1) = new Yaohum_c_2 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_3(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_3; ++Yws){
			 YG_hum_c_3(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_3; ++Yws){
			 YG_hum_c_3(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_3()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_3; ++Yws){
			 Yhum_c_3(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_3; ++Yws){
			 Yhum_c_3(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_3(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_3() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_3(Yw1) = new Yaohum_c_3 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_4(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_4; ++Yws){
			 YG_hum_c_4(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_4; ++Yws){
			 YG_hum_c_4(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_4()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_4; ++Yws){
			 Yhum_c_4(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_4; ++Yws){
			 Yhum_c_4(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_4(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_4", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_4(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_4() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_4(Yw1) = new Yaohum_c_4 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_5(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_5; ++Yws){
			 YG_hum_c_5(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_5; ++Yws){
			 YG_hum_c_5(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_5()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_5; ++Yws){
			 Yhum_c_5(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_5; ++Yws){
			 Yhum_c_5(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_5(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_5", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_5(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_5() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_5(Yw1) = new Yaohum_c_5 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_6(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_6; ++Yws){
			 YG_hum_c_6(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_6; ++Yws){
			 YG_hum_c_6(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_6()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_6; ++Yws){
			 Yhum_c_6(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_6; ++Yws){
			 Yhum_c_6(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_6(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_6", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_6(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_6() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_6(Yw1) = new Yaohum_c_6 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_7(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_7; ++Yws){
			 YG_hum_c_7(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_7; ++Yws){
			 YG_hum_c_7(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_7()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_7; ++Yws){
			 Yhum_c_7(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_7; ++Yws){
			 Yhum_c_7(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_7(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_7", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_7(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_7() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_7(Yw1) = new Yaohum_c_7 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_8(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_8; ++Yws){
			 YG_hum_c_8(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_8; ++Yws){
			 YG_hum_c_8(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_8()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_8; ++Yws){
			 Yhum_c_8(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_8; ++Yws){
			 Yhum_c_8(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_8(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_8", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_8(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_8() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_8(Yw1) = new Yaohum_c_8 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_9(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_9; ++Yws){
			 YG_hum_c_9(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_9; ++Yws){
			 YG_hum_c_9(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_9()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_9; ++Yws){
			 Yhum_c_9(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_9; ++Yws){
			 Yhum_c_9(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_9(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_9", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_9(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_9() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_9(Yw1) = new Yaohum_c_9 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_10(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_10; ++Yws){
			 YG_hum_c_10(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_10; ++Yws){
			 YG_hum_c_10(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_10()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_10; ++Yws){
			 Yhum_c_10(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_10; ++Yws){
			 Yhum_c_10(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_10(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_10", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_10(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_10() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_10(Yw1) = new Yaohum_c_10 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_11(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_11; ++Yws){
			 YG_hum_c_11(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_11; ++Yws){
			 YG_hum_c_11(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_11()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_11; ++Yws){
			 Yhum_c_11(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_11; ++Yws){
			 Yhum_c_11(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_11(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_11", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_11(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_11() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_11(Yw1) = new Yaohum_c_11 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_12(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_12; ++Yws){
			 YG_hum_c_12(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_12; ++Yws){
			 YG_hum_c_12(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_12()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_12; ++Yws){
			 Yhum_c_12(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_12; ++Yws){
			 Yhum_c_12(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_12(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_12", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_12(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_12() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_12(Yw1) = new Yaohum_c_12 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hum_c_13(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_13; ++Yws){
			 YG_hum_c_13(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hum_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_13; ++Yws){
			 YG_hum_c_13(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hum_c_13()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_13; ++Yws){
			 Yhum_c_13(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hum_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hum_c_13; ++Yws){
			 Yhum_c_13(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hum_c_13(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hum_c_13", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hum_c_13(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hum_c_13() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yhum_c_13(Yw1) = new Yaohum_c_13 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_bqsb_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_bqsb_c; ++Yws){
			 YG_bqsb_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_bqsb_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_bqsb_c; ++Yws){
			 YG_bqsb_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_bqsb_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_bqsb_c; ++Yws){
			 Ybqsb_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_bqsb_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_bqsb_c; ++Yws){
			 Ybqsb_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_bqsb_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("bqsb_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_bqsb_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_bqsb_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ybqsb_c(Yw1) = new Yaobqsb_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_gqsb_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_gqsb_c; ++Yws){
			 YG_gqsb_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_gqsb_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_gqsb_c; ++Yws){
			 YG_gqsb_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_gqsb_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_gqsb_c; ++Yws){
			 Ygqsb_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_gqsb_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_gqsb_c; ++Yws){
			 Ygqsb_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_gqsb_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("gqsb_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_gqsb_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_gqsb_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ygqsb_c(Yw1) = new Yaogqsb_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_z0_over_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over_c; ++Yws){
			 YG_z0_over_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_z0_over_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over_c; ++Yws){
			 YG_z0_over_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_z0_over_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over_c; ++Yws){
			 Yz0_over_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_z0_over_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_z0_over_c; ++Yws){
			 Yz0_over_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_z0_over_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("z0_over_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_z0_over_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_z0_over_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yz0_over_c(Yw1) = new Yaoz0_over_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_wet_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_wet_c; ++Yws){
			 YG_so_wet_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_wet_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_wet_c; ++Yws){
			 YG_so_wet_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_wet_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_wet_c; ++Yws){
			 Yso_wet_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_wet_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_wet_c; ++Yws){
			 Yso_wet_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_wet_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_wet_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_wet_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_so_wet_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yso_wet_c(Yw1) = new Yaoso_wet_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_so_dry_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_dry_c; ++Yws){
			 YG_so_dry_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_so_dry_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_dry_c; ++Yws){
			 YG_so_dry_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_so_dry_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_dry_c; ++Yws){
			 Yso_dry_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_so_dry_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_so_dry_c; ++Yws){
			 Yso_dry_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_so_dry_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("so_dry_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_so_dry_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_so_dry_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yso_dry_c(Yw1) = new Yaoso_dry_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_e_drain_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_e_drain_c; ++Yws){
			 YG_e_drain_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_e_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_e_drain_c; ++Yws){
			 YG_e_drain_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_e_drain_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_e_drain_c; ++Yws){
			 Ye_drain_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_e_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_e_drain_c; ++Yws){
			 Ye_drain_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_e_drain_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("e_drain_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_e_drain_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_e_drain_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ye_drain_c(Yw1) = new Yaoe_drain_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_mx_drain_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_drain_c; ++Yws){
			 YG_mx_drain_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_mx_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_drain_c; ++Yws){
			 YG_mx_drain_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_mx_drain_c()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_drain_c; ++Yws){
			 Ymx_drain_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_mx_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_mx_drain_c; ++Yws){
			 Ymx_drain_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_mx_drain_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("mx_drain_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_mx_drain_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_mx_drain_c() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ymx_drain_c(Yw1) = new Yaomx_drain_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_min_drain_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain_c; ++Yws){
			 YG_min_drain_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_min_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain_c; ++Yws){
			 YG_min_drain_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_min_drain_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain_c; ++Yws){
			 Ymin_drain_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_min_drain_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_min_drain_c; ++Yws){
			 Ymin_drain_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_min_drain_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("min_drain_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_min_drain_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_min_drain_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Ymin_drain_c(Yw1) = new Yaomin_drain_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_albnir_c(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albnir_c; ++Yws){
			 YG_albnir_c(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_albnir_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albnir_c; ++Yws){
			 YG_albnir_c(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_albnir_c()
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albnir_c; ++Yws){
			 Yalbnir_c(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_albnir_c(double val)
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 for (int Yws=0; Yws<YNBS_albnir_c; ++Yws){
			 Yalbnir_c(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_albnir_c(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("albnir_c", Yws, Yw1, Yw2, Yw3, Ywt, &YS_albnir_c(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_albnir_c() 	
{
	 for (int Yw1=0; Yw1<YA1_SParam; ++Yw1){
		 if ((Yalbnir_c(Yw1) = new Yaoalbnir_c ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_eaumax(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumax; ++Yws){
			 YG_eaumax(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_eaumax(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumax; ++Yws){
			 YG_eaumax(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_eaumax()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumax; ++Yws){
			 Yeaumax(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_eaumax(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumax; ++Yws){
			 Yeaumax(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_eaumax(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("eaumax", Yws, Yw1, Yw2, Yw3, Ywt, &YS_eaumax(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_eaumax() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yeaumax(Yw1) = new Yaoeaumax ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_eaumin(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumin; ++Yws){
			 YG_eaumin(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_eaumin(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumin; ++Yws){
			 YG_eaumin(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_eaumin()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumin; ++Yws){
			 Yeaumin(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_eaumin(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_eaumin; ++Yws){
			 Yeaumin(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_eaumin(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("eaumin", Yws, Yw1, Yw2, Yw3, Ywt, &YS_eaumin(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_eaumin() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yeaumin(Yw1) = new Yaoeaumin ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hummax(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummax; ++Yws){
			 YG_hummax(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hummax(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummax; ++Yws){
			 YG_hummax(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hummax()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummax; ++Yws){
			 Yhummax(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hummax(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummax; ++Yws){
			 Yhummax(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hummax(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hummax", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hummax(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hummax() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yhummax(Yw1) = new Yaohummax ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_hummin(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummin; ++Yws){
			 YG_hummin(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_hummin(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummin; ++Yws){
			 YG_hummin(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_hummin()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummin; ++Yws){
			 Yhummin(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_hummin(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_hummin; ++Yws){
			 Yhummin(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_hummin(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("hummin", Yws, Yw1, Yw2, Yw3, Ywt, &YS_hummin(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_hummin() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yhummin(Yw1) = new Yaohummin ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_tempsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_tempsol; ++Yws){
				 YG_E_tempsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_tempsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_tempsol; ++Yws){
				 YG_E_tempsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_tempsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_tempsol; ++Yws){
				 YE_tempsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_tempsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_tempsol; ++Yws){
				 YE_tempsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_tempsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_tempsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_tempsol(Yws, Yw1, Ywt), val);
}/*M0_OUTOB*/ 
int Youtoobs_E_tempsol(YioKind yiokind, int Yws, int Ywt, int arbpdt)
{
	 Yaobs.time = arbpdt;
	 Yaobs.imod = Yimod("E_tempsol");
	 Yaobs.smod = Yws;/*M1_OUTOBT*/
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1)
	 {	if(select_io(yiokind, "E_tempsol", Yws, Yw1, -1, -1, Ywt, &Ystate_E_tempsol(Yws, Yw1, Ywt)))
			{	Yaobs.iaxe = Yw1; Yaobs.jaxe = -1; Yaobs.kaxe = -1;
				Yaobs.vobs = Ystate_E_tempsol(Yws, Yw1, Ywt);
				if(!Yobs_insert (&Yaobs)) return(0);
			}
	 }/*M9_OUTOB*/  
	 return(1);
}/*M1_CREU*/ 
void Ycreate_E_tempsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_tempsol(Yw1) = new E_tempsol ())==NULL) Ycreate_errnew();}
}/*M1_SWISH*/ 
void Ysetwish_E_tempsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Yws=0; Yws<YNBS_E_tempsol; ++Yws){
			 Ywish_E_tempsol(Yws, Yw1) = val;}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_emis_tempsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_tempsol; ++Yws){
				 YG_E_emis_tempsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_emis_tempsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_tempsol; ++Yws){
				 YG_E_emis_tempsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_emis_tempsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_tempsol; ++Yws){
				 YE_emis_tempsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_emis_tempsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_tempsol; ++Yws){
				 YE_emis_tempsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_emis_tempsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_emis_tempsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_emis_tempsol(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_emis_tempsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 if ((YE_emis_tempsol(Yw1) = new E_emis_tempsol ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_watercontent(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_watercontent; ++Yws){
				 YG_H_watercontent(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_watercontent(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_watercontent; ++Yws){
				 YG_H_watercontent(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_watercontent()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_watercontent; ++Yws){
				 YH_watercontent(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_watercontent(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_watercontent; ++Yws){
				 YH_watercontent(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_watercontent(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_watercontent", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_watercontent(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_watercontent()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 if ((YH_watercontent(Yw1) = new H_watercontent ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel1(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel1; ++Yws){
				 YG_H_soil_humrel1(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel1(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel1; ++Yws){
				 YG_H_soil_humrel1(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel1()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel1; ++Yws){
				 YH_soil_humrel1(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel1; ++Yws){
				 YH_soil_humrel1(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel1(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel1()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel1(Yw1) = new H_soil_humrel1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel2; ++Yws){
				 YG_H_soil_humrel2(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel2; ++Yws){
				 YG_H_soil_humrel2(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel2()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel2; ++Yws){
				 YH_soil_humrel2(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel2; ++Yws){
				 YH_soil_humrel2(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel2(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel2()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel2(Yw1) = new H_soil_humrel2 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel3(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel3; ++Yws){
				 YG_H_soil_humrel3(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel3(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel3; ++Yws){
				 YG_H_soil_humrel3(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel3()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel3; ++Yws){
				 YH_soil_humrel3(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel3; ++Yws){
				 YH_soil_humrel3(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel3(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel3()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel3(Yw1) = new H_soil_humrel3 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel4(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel4; ++Yws){
				 YG_H_soil_humrel4(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel4(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel4; ++Yws){
				 YG_H_soil_humrel4(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel4()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel4; ++Yws){
				 YH_soil_humrel4(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel4; ++Yws){
				 YH_soil_humrel4(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel4(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel4", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel4(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel4()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel4(Yw1) = new H_soil_humrel4 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel5(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel5; ++Yws){
				 YG_H_soil_humrel5(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel5(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel5; ++Yws){
				 YG_H_soil_humrel5(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel5()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel5; ++Yws){
				 YH_soil_humrel5(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel5(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel5; ++Yws){
				 YH_soil_humrel5(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel5(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel5", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel5(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel5()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel5(Yw1) = new H_soil_humrel5 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel6(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel6; ++Yws){
				 YG_H_soil_humrel6(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel6(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel6; ++Yws){
				 YG_H_soil_humrel6(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel6()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel6; ++Yws){
				 YH_soil_humrel6(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel6(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel6; ++Yws){
				 YH_soil_humrel6(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel6(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel6", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel6(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel6()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel6(Yw1) = new H_soil_humrel6 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel7(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel7; ++Yws){
				 YG_H_soil_humrel7(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel7(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel7; ++Yws){
				 YG_H_soil_humrel7(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel7()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel7; ++Yws){
				 YH_soil_humrel7(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel7(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel7; ++Yws){
				 YH_soil_humrel7(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel7(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel7", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel7(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel7()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel7(Yw1) = new H_soil_humrel7 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel8(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel8; ++Yws){
				 YG_H_soil_humrel8(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel8(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel8; ++Yws){
				 YG_H_soil_humrel8(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel8()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel8; ++Yws){
				 YH_soil_humrel8(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel8(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel8; ++Yws){
				 YH_soil_humrel8(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel8(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel8", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel8(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel8()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel8(Yw1) = new H_soil_humrel8 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel9(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel9; ++Yws){
				 YG_H_soil_humrel9(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel9(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel9; ++Yws){
				 YG_H_soil_humrel9(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel9()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel9; ++Yws){
				 YH_soil_humrel9(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel9(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel9; ++Yws){
				 YH_soil_humrel9(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel9(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel9", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel9(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel9()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel9(Yw1) = new H_soil_humrel9 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel10(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel10; ++Yws){
				 YG_H_soil_humrel10(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel10(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel10; ++Yws){
				 YG_H_soil_humrel10(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel10()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel10; ++Yws){
				 YH_soil_humrel10(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel10(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel10; ++Yws){
				 YH_soil_humrel10(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel10(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel10", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel10(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel10()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel10(Yw1) = new H_soil_humrel10 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel11(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel11; ++Yws){
				 YG_H_soil_humrel11(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel11(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel11; ++Yws){
				 YG_H_soil_humrel11(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel11()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel11; ++Yws){
				 YH_soil_humrel11(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel11(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel11; ++Yws){
				 YH_soil_humrel11(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel11(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel11", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel11(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel11()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel11(Yw1) = new H_soil_humrel11 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel12(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel12; ++Yws){
				 YG_H_soil_humrel12(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel12(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel12; ++Yws){
				 YG_H_soil_humrel12(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel12()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel12; ++Yws){
				 YH_soil_humrel12(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel12(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel12; ++Yws){
				 YH_soil_humrel12(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel12(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel12", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel12(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel12()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel12(Yw1) = new H_soil_humrel12 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel13(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel13; ++Yws){
				 YG_H_soil_humrel13(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_humrel13(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel13; ++Yws){
				 YG_H_soil_humrel13(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_humrel13()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel13; ++Yws){
				 YH_soil_humrel13(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_humrel13(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_humrel13; ++Yws){
				 YH_soil_humrel13(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_humrel13(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel13", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel13(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_humrel13()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH2i; ++Yw1){
		 if ((YH_soil_humrel13(Yw1) = new H_soil_humrel13 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_netrad(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_netrad; ++Yws){
				 YG_E_netrad(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_netrad(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_netrad; ++Yws){
				 YG_E_netrad(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_netrad()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_netrad; ++Yws){
				 YE_netrad(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_netrad(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_netrad; ++Yws){
				 YE_netrad(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_netrad(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_netrad", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_netrad(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_netrad()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_netrad(Yw1) = new E_netrad ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_fluxsens(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxsens; ++Yws){
				 YG_E_fluxsens(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_fluxsens(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxsens; ++Yws){
				 YG_E_fluxsens(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_fluxsens()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxsens; ++Yws){
				 YE_fluxsens(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_fluxsens(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxsens; ++Yws){
				 YE_fluxsens(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_fluxsens(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_fluxsens", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_fluxsens(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_fluxsens()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_fluxsens(Yw1) = new E_fluxsens ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_fluxlat(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxlat; ++Yws){
				 YG_E_fluxlat(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_fluxlat(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxlat; ++Yws){
				 YG_E_fluxlat(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_fluxlat()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxlat; ++Yws){
				 YE_fluxlat(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_fluxlat(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_fluxlat; ++Yws){
				 YE_fluxlat(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_fluxlat(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_fluxlat", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_fluxlat(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_fluxlat()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_fluxlat(Yw1) = new E_fluxlat ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_evapnu(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evapnu; ++Yws){
				 YG_E_evapnu(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_evapnu(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evapnu; ++Yws){
				 YG_E_evapnu(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_evapnu()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evapnu; ++Yws){
				 YE_evapnu(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_evapnu(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evapnu; ++Yws){
				 YE_evapnu(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_evapnu(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_evapnu", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_evapnu(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_evapnu()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_evapnu(Yw1) = new E_evapnu ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_E_transpir(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_transpir; ++Yws){
					 YG_E_transpir(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_E_transpir(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_transpir; ++Yws){
					 YG_E_transpir(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_E_transpir()
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_transpir; ++Yws){
					 YE_transpir(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_E_transpir(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_transpir; ++Yws){
					 YE_transpir(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_E_transpir(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_transpir", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_transpir(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_E_transpir()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 if ((YE_transpir(Yw1, Yw2)= new E_transpir ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOG   */ 
void YtabTOgrad_fluxsens(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxsens; ++Yws){
			 YG_fluxsens(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_fluxsens(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxsens; ++Yws){
			 YG_fluxsens(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_fluxsens()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxsens; ++Yws){
			 Yfluxsens(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_fluxsens(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxsens; ++Yws){
			 Yfluxsens(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_fluxsens(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("fluxsens", Yws, Yw1, Yw2, Yw3, Ywt, &YS_fluxsens(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_fluxsens() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yfluxsens(Yw1) = new Yaofluxsens ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_fluxlat(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxlat; ++Yws){
			 YG_fluxlat(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_fluxlat(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxlat; ++Yws){
			 YG_fluxlat(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_fluxlat()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxlat; ++Yws){
			 Yfluxlat(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_fluxlat(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_fluxlat; ++Yws){
			 Yfluxlat(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_fluxlat(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("fluxlat", Yws, Yw1, Yw2, Yw3, Ywt, &YS_fluxlat(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_fluxlat() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yfluxlat(Yw1) = new Yaofluxlat ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_temp_sol(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_temp_sol; ++Yws){
			 YG_temp_sol(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_temp_sol(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_temp_sol; ++Yws){
			 YG_temp_sol(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_temp_sol()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_temp_sol; ++Yws){
			 Ytemp_sol(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_temp_sol(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_temp_sol; ++Yws){
			 Ytemp_sol(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_temp_sol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("temp_sol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_temp_sol(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_temp_sol() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ytemp_sol(Yw1) = new Yaotemp_sol ())==NULL) Ycreate_errnew();}
}/*M2_TBTOG   */ 
void YtabTOgrad_qsintveg(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_qsintveg; ++Yws){
				 YG_qsintveg(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_qsintveg(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_qsintveg; ++Yws){
				 YG_qsintveg(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_qsintveg()
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 for (int Yws=0; Yws<YNBS_qsintveg; ++Yws){
				 Yqsintveg(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_qsintveg(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_qsintveg; ++Yws){
				 Yqsintveg(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_qsintveg(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("qsintveg", Yws, Yw1, Yw2, Yw3, Ywt, &YS_qsintveg(Yws, Yw1, Yw2), val);
}/*M2_CREY*/ 
void Ycreate_qsintveg()  
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 if ((Yqsintveg(Yw1, Yw2)= new Yaoqsintveg ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOG   */ 
void YtabTOgrad_ptn(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_ScontrNG; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrNG;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_ptn; ++Yws){
				 YG_ptn(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_ptn(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrNG; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrNG;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_ptn; ++Yws){
				 YG_ptn(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_ptn()
{
	 for (int Yw1=0; Yw1<YA1_ScontrNG; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrNG; ++Yw2){
			 for (int Yws=0; Yws<YNBS_ptn; ++Yws){
				 Yptn(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_ptn(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrNG; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrNG;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_ptn; ++Yws){
				 Yptn(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_ptn(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("ptn", Yws, Yw1, Yw2, Yw3, Ywt, &YS_ptn(Yws, Yw1, Yw2), val);
}/*M2_CREY*/ 
void Ycreate_ptn()  
{
	 for (int Yw1=0; Yw1<YA1_ScontrNG; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrNG; ++Yw2){
			 if ((Yptn(Yw1, Yw2)= new Yaoptn ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOG   */ 
void YtabTOgrad_netrad(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_netrad; ++Yws){
			 YG_netrad(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_netrad(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_netrad; ++Yws){
			 YG_netrad(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_netrad()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_netrad; ++Yws){
			 Ynetrad(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_netrad(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_netrad; ++Yws){
			 Ynetrad(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_netrad(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("netrad", Yws, Yw1, Yw2, Yw3, Ywt, &YS_netrad(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_netrad() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Ynetrad(Yw1) = new Yaonetrad ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_evapnu(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_evapnu; ++Yws){
			 YG_evapnu(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_evapnu(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_evapnu; ++Yws){
			 YG_evapnu(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_evapnu()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_evapnu; ++Yws){
			 Yevapnu(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_evapnu(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_evapnu; ++Yws){
			 Yevapnu(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_evapnu(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("evapnu", Yws, Yw1, Yw2, Yw3, Ywt, &YS_evapnu(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_evapnu() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yevapnu(Yw1) = new Yaoevapnu ())==NULL) Ycreate_errnew();}
}/*M2_TBTOG   */ 
void YtabTOgrad_transpir(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_transpir; ++Yws){
				 YG_transpir(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_transpir(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_transpir; ++Yws){
				 YG_transpir(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_transpir()
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 for (int Yws=0; Yws<YNBS_transpir; ++Yws){
				 Ytranspir(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_transpir(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_transpir; ++Yws){
				 Ytranspir(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_transpir(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("transpir", Yws, Yw1, Yw2, Yw3, Ywt, &YS_transpir(Yws, Yw1, Yw2), val);
}/*M2_CREY*/ 
void Ycreate_transpir()  
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 if ((Ytranspir(Yw1, Yw2)= new Yaotranspir ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOG   */ 
void YtabTOgrad_bqsb_init(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_bqsb_init; ++Yws){
				 YG_bqsb_init(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_bqsb_init(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_bqsb_init; ++Yws){
				 YG_bqsb_init(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_bqsb_init()
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 for (int Yws=0; Yws<YNBS_bqsb_init; ++Yws){
				 Ybqsb_init(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_bqsb_init(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_bqsb_init; ++Yws){
				 Ybqsb_init(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_bqsb_init(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("bqsb_init", Yws, Yw1, Yw2, Yw3, Ywt, &YS_bqsb_init(Yws, Yw1, Yw2), val);
}/*M2_CREY*/ 
void Ycreate_bqsb_init()  
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 if ((Ybqsb_init(Yw1, Yw2)= new Yaobqsb_init ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOG   */ 
void YtabTOgrad_gqsb_init(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_gqsb_init; ++Yws){
				 YG_gqsb_init(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_gqsb_init(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_gqsb_init; ++Yws){
				 YG_gqsb_init(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_gqsb_init()
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 for (int Yws=0; Yws<YNBS_gqsb_init; ++Yws){
				 Ygqsb_init(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_gqsb_init(double val)
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_gqsb_init; ++Yws){
				 Ygqsb_init(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_gqsb_init(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("gqsb_init", Yws, Yw1, Yw2, Yw3, Ywt, &YS_gqsb_init(Yws, Yw1, Yw2), val);
}/*M2_CREY*/ 
void Ycreate_gqsb_init()  
{
	 for (int Yw1=0; Yw1<YA1_ScontrN; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_ScontrN; ++Yw2){
			 if ((Ygqsb_init(Yw1, Yw2)= new Yaogqsb_init ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_1(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_1; ++Yws){
			 YG_h_c_1(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_1; ++Yws){
			 YG_h_c_1(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_1()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_1; ++Yws){
			 Yh_c_1(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_1(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_1; ++Yws){
			 Yh_c_1(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_1(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_1() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_1(Yw1) = new Yaoh_c_1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_2(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_2; ++Yws){
			 YG_h_c_2(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_2; ++Yws){
			 YG_h_c_2(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_2()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_2; ++Yws){
			 Yh_c_2(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_2(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_2; ++Yws){
			 Yh_c_2(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_2(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_2() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_2(Yw1) = new Yaoh_c_2 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_3(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_3; ++Yws){
			 YG_h_c_3(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_3; ++Yws){
			 YG_h_c_3(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_3()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_3; ++Yws){
			 Yh_c_3(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_3(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_3; ++Yws){
			 Yh_c_3(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_3(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_3() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_3(Yw1) = new Yaoh_c_3 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_4(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_4; ++Yws){
			 YG_h_c_4(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_4; ++Yws){
			 YG_h_c_4(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_4()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_4; ++Yws){
			 Yh_c_4(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_4(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_4; ++Yws){
			 Yh_c_4(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_4(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_4", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_4(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_4() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_4(Yw1) = new Yaoh_c_4 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_5(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_5; ++Yws){
			 YG_h_c_5(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_5; ++Yws){
			 YG_h_c_5(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_5()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_5; ++Yws){
			 Yh_c_5(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_5(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_5; ++Yws){
			 Yh_c_5(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_5(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_5", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_5(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_5() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_5(Yw1) = new Yaoh_c_5 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_6(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_6; ++Yws){
			 YG_h_c_6(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_6; ++Yws){
			 YG_h_c_6(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_6()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_6; ++Yws){
			 Yh_c_6(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_6(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_6; ++Yws){
			 Yh_c_6(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_6(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_6", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_6(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_6() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_6(Yw1) = new Yaoh_c_6 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_7(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_7; ++Yws){
			 YG_h_c_7(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_7; ++Yws){
			 YG_h_c_7(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_7()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_7; ++Yws){
			 Yh_c_7(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_7(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_7; ++Yws){
			 Yh_c_7(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_7(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_7", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_7(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_7() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_7(Yw1) = new Yaoh_c_7 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_8(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_8; ++Yws){
			 YG_h_c_8(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_8; ++Yws){
			 YG_h_c_8(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_8()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_8; ++Yws){
			 Yh_c_8(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_8(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_8; ++Yws){
			 Yh_c_8(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_8(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_8", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_8(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_8() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_8(Yw1) = new Yaoh_c_8 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_9(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_9; ++Yws){
			 YG_h_c_9(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_9; ++Yws){
			 YG_h_c_9(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_9()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_9; ++Yws){
			 Yh_c_9(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_9(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_9; ++Yws){
			 Yh_c_9(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_9(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_9", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_9(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_9() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_9(Yw1) = new Yaoh_c_9 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_10(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_10; ++Yws){
			 YG_h_c_10(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_10; ++Yws){
			 YG_h_c_10(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_10()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_10; ++Yws){
			 Yh_c_10(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_10(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_10; ++Yws){
			 Yh_c_10(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_10(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_10", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_10(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_10() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_10(Yw1) = new Yaoh_c_10 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_11(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_11; ++Yws){
			 YG_h_c_11(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_11; ++Yws){
			 YG_h_c_11(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_11()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_11; ++Yws){
			 Yh_c_11(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_11(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_11; ++Yws){
			 Yh_c_11(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_11(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_11", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_11(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_11() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_11(Yw1) = new Yaoh_c_11 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_12(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_12; ++Yws){
			 YG_h_c_12(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_12; ++Yws){
			 YG_h_c_12(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_12()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_12; ++Yws){
			 Yh_c_12(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_12(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_12; ++Yws){
			 Yh_c_12(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_12(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_12", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_12(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_12() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_12(Yw1) = new Yaoh_c_12 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_h_c_13(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_13; ++Yws){
			 YG_h_c_13(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_h_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_13; ++Yws){
			 YG_h_c_13(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_h_c_13()
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_13; ++Yws){
			 Yh_c_13(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_h_c_13(double val)
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 for (int Yws=0; Yws<YNBS_h_c_13; ++Yws){
			 Yh_c_13(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_h_c_13(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("h_c_13", Yws, Yw1, Yw2, Yw3, Ywt, &YS_h_c_13(Yws, Yw1), val);
}/*M1_CREY*/ 
void Ycreate_h_c_13() 	
{
	 for (int Yw1=0; Yw1<YA1_Scontr; ++Yw1){
		 if ((Yh_c_13(Yw1) = new Yaoh_c_13 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_wind(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexW; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_wind; ++Yws){
				 YG_wind(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_wind(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexW; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_wind; ++Yws){
				 YG_wind(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_wind()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexW; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_wind; ++Yws){
				 Ywind(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_wind(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexW; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_wind; ++Yws){
				 Ywind(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_wind(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("wind", Yws, Yw1, Yw2, Yw3, Ywt, &YS_wind(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_wind()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexW; ++Yw1){
		 if ((Ywind(Yw1) = new wind ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_init_hydrolc2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Snvm_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snvm_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_init_hydrolc2; ++Yws){
					 YG_init_hydrolc2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_init_hydrolc2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Snvm_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snvm_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_init_hydrolc2; ++Yws){
					 YG_init_hydrolc2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_init_hydrolc2()
{
	 for (int Yw1=0; Yw1<YA1_Snvm_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snvm_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_init_hydrolc2; ++Yws){
					 Yinit_hydrolc2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_init_hydrolc2(double val)
{
	 for (int Yw1=0; Yw1<YA1_Snvm_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snvm_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_init_hydrolc2; ++Yws){
					 Yinit_hydrolc2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_init_hydrolc2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("init_hydrolc2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_init_hydrolc2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_init_hydrolc2()  
{
	 for (int Yw1=0; Yw1<YA1_Snvm_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snvm_init; ++Yw2){
			 if ((Yinit_hydrolc2(Yw1, Yw2)= new init_hydrolc2 ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_int_lskin(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Skjindexn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_lskin; ++Yws){
				 YG_int_lskin(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_int_lskin(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Skjindexn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_lskin; ++Yws){
				 YG_int_lskin(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_int_lskin()
{
	 for (int Yw1=0; Yw1<YA1_Skjindexn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_lskin; ++Yws){
				 Yint_lskin(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_int_lskin(double val)
{
	 for (int Yw1=0; Yw1<YA1_Skjindexn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_lskin; ++Yws){
				 Yint_lskin(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_int_lskin(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_lskin", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_lskin(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_int_lskin()  
{
	 for (int Yw1=0; Yw1<YA1_Skjindexn; ++Yw1){
		 if ((Yint_lskin(Yw1) = new int_lskin ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_int_thermosoil(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_init; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_thermosoil; ++Yws){
				 YG_int_thermosoil(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_int_thermosoil(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_init; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_thermosoil; ++Yws){
				 YG_int_thermosoil(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_int_thermosoil()
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_init; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_thermosoil; ++Yws){
				 Yint_thermosoil(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_int_thermosoil(double val)
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_init; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_int_thermosoil; ++Yws){
				 Yint_thermosoil(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_int_thermosoil(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_thermosoil", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_thermosoil(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_int_thermosoil()  
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_init; ++Yw1){
		 if ((Yint_thermosoil(Yw1) = new int_thermosoil ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_int_diaglev(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Sn2_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn2_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaglev; ++Yws){
					 YG_int_diaglev(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_int_diaglev(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Sn2_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn2_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaglev; ++Yws){
					 YG_int_diaglev(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_int_diaglev()
{
	 for (int Yw1=0; Yw1<YA1_Sn2_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn2_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaglev; ++Yws){
					 Yint_diaglev(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_int_diaglev(double val)
{
	 for (int Yw1=0; Yw1<YA1_Sn2_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn2_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaglev; ++Yws){
					 Yint_diaglev(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_int_diaglev(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_diaglev", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_diaglev(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_int_diaglev()  
{
	 for (int Yw1=0; Yw1<YA1_Sn2_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn2_init; ++Yw2){
			 if ((Yint_diaglev(Yw1, Yw2)= new int_diaglev ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_int_humlev(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Sn1_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn1_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_humlev; ++Yws){
					 YG_int_humlev(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_int_humlev(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Sn1_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn1_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_humlev; ++Yws){
					 YG_int_humlev(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_int_humlev()
{
	 for (int Yw1=0; Yw1<YA1_Sn1_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn1_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_humlev; ++Yws){
					 Yint_humlev(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_int_humlev(double val)
{
	 for (int Yw1=0; Yw1<YA1_Sn1_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn1_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_humlev; ++Yws){
					 Yint_humlev(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_int_humlev(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_humlev", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_humlev(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_int_humlev()  
{
	 for (int Yw1=0; Yw1<YA1_Sn1_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sn1_init; ++Yw2){
			 if ((Yint_humlev(Yw1, Yw2)= new int_humlev ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_int_dz2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_22; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sngrnd_22; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_dz2; ++Yws){
					 YG_int_dz2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_int_dz2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_22; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sngrnd_22; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_dz2; ++Yws){
					 YG_int_dz2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_int_dz2()
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_22; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sngrnd_22; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_dz2; ++Yws){
					 Yint_dz2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_int_dz2(double val)
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_22; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sngrnd_22; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_dz2; ++Yws){
					 Yint_dz2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_int_dz2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_dz2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_dz2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_int_dz2()  
{
	 for (int Yw1=0; Yw1<YA1_Sngrnd_22; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Sngrnd_22; ++Yw2){
			 if ((Yint_dz2(Yw1, Yw2)= new int_dz2 ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_int_slowproc(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_slowproc; ++Yws){
					 YG_int_slowproc(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_int_slowproc(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_init; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_slowproc; ++Yws){
					 YG_int_slowproc(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_int_slowproc()
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_slowproc; ++Yws){
					 Yint_slowproc(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_int_slowproc(double val)
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_init; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_slowproc; ++Yws){
					 Yint_slowproc(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_int_slowproc(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_slowproc", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_slowproc(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_int_slowproc()  
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_init; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_init; ++Yw2){
			 if ((Yint_slowproc(Yw1, Yw2)= new int_slowproc ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_int_diaghum(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_hum; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_hum; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaghum; ++Yws){
					 YG_int_diaghum(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_int_diaghum(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_hum; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_hum; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaghum; ++Yws){
					 YG_int_diaghum(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_int_diaghum()
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_hum; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_hum; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaghum; ++Yws){
					 Yint_diaghum(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_int_diaghum(double val)
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_hum; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_hum; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_int_diaghum; ++Yws){
					 Yint_diaghum(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_int_diaghum(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("int_diaghum", Yws, Yw1, Yw2, Yw3, Ywt, &YS_int_diaghum(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_int_diaghum()  
{
	 for (int Yw1=0; Yw1<YA1_Snbdl_hum; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Snbdl_hum; ++Yw2){
			 if ((Yint_diaghum(Yw1, Yw2)= new int_diaghum ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_u(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_u; ++Yws){
				 YG_F_u(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_u(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_u; ++Yws){
				 YG_F_u(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_u()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_u; ++Yws){
				 YF_u(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_u(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_u; ++Yws){
				 YF_u(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_u(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_u", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_u(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_u()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_u(Yw1) = new F_u ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_v(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_v; ++Yws){
				 YG_F_v(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_v(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_v; ++Yws){
				 YG_F_v(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_v()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_v; ++Yws){
				 YF_v(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_v(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_v; ++Yws){
				 YF_v(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_v(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_v", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_v(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_v()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_v(Yw1) = new F_v ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_qair(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_qair; ++Yws){
				 YG_F_qair(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_qair(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_qair; ++Yws){
				 YG_F_qair(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_qair()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_qair; ++Yws){
				 YF_qair(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_qair(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_qair; ++Yws){
				 YF_qair(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_qair(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_qair", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_qair(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_qair()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_qair(Yw1) = new F_qair ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_pb(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_pb; ++Yws){
				 YG_F_pb(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_pb(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_pb; ++Yws){
				 YG_F_pb(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_pb()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_pb; ++Yws){
				 YF_pb(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_pb(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_pb; ++Yws){
				 YF_pb(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_pb(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_pb", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_pb(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_pb()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_pb(Yw1) = new F_pb ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_lwdown(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_lwdown; ++Yws){
				 YG_F_lwdown(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_lwdown(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_lwdown; ++Yws){
				 YG_F_lwdown(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_lwdown()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_lwdown; ++Yws){
				 YF_lwdown(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_lwdown(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_lwdown; ++Yws){
				 YF_lwdown(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_lwdown(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_lwdown", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_lwdown(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_lwdown()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_lwdown(Yw1) = new F_lwdown ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_precip(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip; ++Yws){
				 YG_F_precip(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_precip(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip; ++Yws){
				 YG_F_precip(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_precip()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip; ++Yws){
				 YF_precip(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_precip(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip; ++Yws){
				 YF_precip(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_precip(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_precip", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_precip(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_precip()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_precip(Yw1) = new F_precip ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_temp_air(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_temp_air; ++Yws){
				 YG_F_temp_air(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_temp_air(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_temp_air; ++Yws){
				 YG_F_temp_air(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_temp_air()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_temp_air; ++Yws){
				 YF_temp_air(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_temp_air(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_temp_air; ++Yws){
				 YF_temp_air(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_temp_air(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_temp_air", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_temp_air(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_temp_air()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_temp_air(Yw1) = new F_temp_air ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_swdown(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_swdown; ++Yws){
				 YG_F_swdown(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_swdown(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_swdown; ++Yws){
				 YG_F_swdown(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_swdown()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_swdown; ++Yws){
				 YF_swdown(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_swdown(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_swdown; ++Yws){
				 YF_swdown(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_swdown(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_swdown", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_swdown(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_swdown()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_swdown(Yw1) = new F_swdown ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_F_precip_snow(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip_snow; ++Yws){
				 YG_F_precip_snow(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_F_precip_snow(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip_snow; ++Yws){
				 YG_F_precip_snow(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_F_precip_snow()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip_snow; ++Yws){
				 YF_precip_snow(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_F_precip_snow(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_F_precip_snow; ++Yws){
				 YF_precip_snow(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_F_precip_snow(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("F_precip_snow", Yws, Yw1, Yw2, Yw3, Ywt, &YS_F_precip_snow(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_F_precip_snow()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexFn; ++Yw1){
		 if ((YF_precip_snow(Yw1) = new F_precip_snow ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_I_petAcoef(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_petAcoef; ++Yws){
			 YG_I_petAcoef(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_I_petAcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_petAcoef; ++Yws){
			 YG_I_petAcoef(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_I_petAcoef()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_petAcoef; ++Yws){
			 YI_petAcoef(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_I_petAcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_petAcoef; ++Yws){
			 YI_petAcoef(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_I_petAcoef(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_petAcoef", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_petAcoef(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_I_petAcoef()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 if ((YI_petAcoef(Yw1) = new I_petAcoef ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_I_peqAcoef(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_peqAcoef; ++Yws){
			 YG_I_peqAcoef(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_I_peqAcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_peqAcoef; ++Yws){
			 YG_I_peqAcoef(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_I_peqAcoef()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_peqAcoef; ++Yws){
			 YI_peqAcoef(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_I_peqAcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_I_peqAcoef; ++Yws){
			 YI_peqAcoef(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_I_peqAcoef(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_peqAcoef", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_peqAcoef(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_I_peqAcoef()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIn; ++Yw1){
		 if ((YI_peqAcoef(Yw1) = new I_peqAcoef ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_I_swnet(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_swnet; ++Yws){
				 YG_I_swnet(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_I_swnet(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_swnet; ++Yws){
				 YG_I_swnet(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_I_swnet()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_swnet; ++Yws){
				 YI_swnet(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_I_swnet(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_swnet; ++Yws){
				 YI_swnet(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_I_swnet(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_swnet", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_swnet(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_I_swnet()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YI_swnet(Yw1) = new I_swnet ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_I_epot_air(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_epot_air; ++Yws){
				 YG_I_epot_air(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_I_epot_air(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_epot_air; ++Yws){
				 YG_I_epot_air(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_I_epot_air()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_epot_air; ++Yws){
				 YI_epot_air(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_I_epot_air(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_epot_air; ++Yws){
				 YI_epot_air(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_I_epot_air(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_epot_air", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_epot_air(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_I_epot_air()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 if ((YI_epot_air(Yw1) = new I_epot_air ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_I_petBcoef(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_petBcoef; ++Yws){
				 YG_I_petBcoef(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_I_petBcoef(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_petBcoef; ++Yws){
				 YG_I_petBcoef(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_I_petBcoef()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_petBcoef; ++Yws){
				 YI_petBcoef(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_I_petBcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_petBcoef; ++Yws){
				 YI_petBcoef(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_I_petBcoef(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_petBcoef", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_petBcoef(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_I_petBcoef()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 if ((YI_petBcoef(Yw1) = new I_petBcoef ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_I_peqBcoef(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_peqBcoef; ++Yws){
				 YG_I_peqBcoef(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_I_peqBcoef(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_peqBcoef; ++Yws){
				 YG_I_peqBcoef(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_I_peqBcoef()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_peqBcoef; ++Yws){
				 YI_peqBcoef(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_I_peqBcoef(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_I_peqBcoef; ++Yws){
				 YI_peqBcoef(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_I_peqBcoef(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("I_peqBcoef", Yws, Yw1, Yw2, Yw3, Ywt, &YS_I_peqBcoef(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_I_peqBcoef()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexIi; ++Yw1){
		 if ((YI_peqBcoef(Yw1) = new I_peqBcoef ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_SE_rau(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_SE_rau; ++Yws){
				 YG_SE_rau(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_SE_rau(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_SE_rau; ++Yws){
				 YG_SE_rau(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_SE_rau()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_SE_rau; ++Yws){
				 YSE_rau(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_SE_rau(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_SE_rau; ++Yws){
				 YSE_rau(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_SE_rau(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("SE_rau", Yws, Yw1, Yw2, Yw3, Ywt, &YS_SE_rau(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_SE_rau()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEi; ++Yw1){
		 if ((YSE_rau(Yw1) = new SE_rau ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_SE_routing(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_SE_routing; ++Yws){
			 YG_SE_routing(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_SE_routing(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_SE_routing; ++Yws){
			 YG_SE_routing(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_SE_routing()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_SE_routing; ++Yws){
			 YSE_routing(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_SE_routing(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_SE_routing; ++Yws){
			 YSE_routing(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_SE_routing(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("SE_routing", Yws, Yw1, Yw2, Yw3, Ywt, &YS_SE_routing(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_SE_routing()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSEn; ++Yw1){
		 if ((YSE_routing(Yw1) = new SE_routing ())==NULL) Ycreate_errnew();}
}/*M1_TBTOG   */ 
void YtabTOgrad_S_fracnobio(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_S_fracnobio; ++Yws){
			 YG_S_fracnobio(Yws, Yw1) = tab[Y3windice]; ++Y3windice;}}
}/*M1_GEQV */ 
void YgradEQval_S_fracnobio(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_S_fracnobio; ++Yws){
			 YG_S_fracnobio(Yws, Yw1) = val;}}
}/*M1_RGRAD*/ 
void Yrazgrad_S_fracnobio()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_S_fracnobio; ++Yws){
			 YS_fracnobio(Yw1)->Ygrad[Yws] = 0.0;}}
}/*M1_SETA*/ 
void Ysetstate_S_fracnobio(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSn; ++Yw1){
		 for (int Yws=0; Yws<YNBS_S_fracnobio; ++Yws){
			 YS_fracnobio(Yw1)->Ystate[Yws] = val;}}
}/*M1_YIOTU*/ 
void Yio_S_fracnobio(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_fracnobio", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_fracnobio(Yws, Yw1), val);
}/*M1_CREU*/ 
void Ycreate_S_fracnobio()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexSn; ++Yw1){
		 if ((YS_fracnobio(Yw1) = new S_fracnobio ())==NULL) Ycreate_errnew();}
}/*M2_TBTOG   */ 
void YtabTOgrad_S_height(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_height; ++Yws){
				 YG_S_height(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_S_height(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_height; ++Yws){
				 YG_S_height(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_S_height()
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn; ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_height; ++Yws){
				 YS_height(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_S_height(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_height; ++Yws){
				 YS_height(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_S_height(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_height", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_height(Yws, Yw1, Yw2), val);
}/*M2_CREU*/ 
void Ycreate_S_height()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn; ++Yw2){
			 if ((YS_height(Yw1, Yw2)= new S_height ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOG   */ 
void YtabTOgrad_S_vegetmax(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_vegetmax; ++Yws){
				 YG_S_vegetmax(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_S_vegetmax(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_vegetmax; ++Yws){
				 YG_S_vegetmax(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_S_vegetmax()
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn; ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_vegetmax; ++Yws){
				 YS_vegetmax(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_S_vegetmax(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_S_vegetmax; ++Yws){
				 YS_vegetmax(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_S_vegetmax(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_vegetmax", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_vegetmax(Yws, Yw1, Yw2), val);
}/*M2_CREU*/ 
void Ycreate_S_vegetmax()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmSn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSn; ++Yw2){
			 if ((YS_vegetmax(Yw1, Yw2)= new S_vegetmax ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_S_veget(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_veget; ++Yws){
					 YG_S_veget(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_S_veget(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_veget; ++Yws){
					 YG_S_veget(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_S_veget()
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_veget; ++Yws){
					 YS_veget(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_S_veget(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_veget; ++Yws){
					 YS_veget(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_S_veget(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_veget", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_veget(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_S_veget()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 if ((YS_veget(Yw1, Yw2)= new S_veget ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_S_qsintm(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_qsintm; ++Yws){
					 YG_S_qsintm(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_S_qsintm(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_qsintm; ++Yws){
					 YG_S_qsintm(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_S_qsintm()
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_qsintm; ++Yws){
					 YS_qsintm(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_S_qsintm(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_qsintm; ++Yws){
					 YS_qsintm(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_S_qsintm(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_qsintm", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_qsintm(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_S_qsintm()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 if ((YS_qsintm(Yw1, Yw2)= new S_qsintm ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_S_lai(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_lai; ++Yws){
					 YG_S_lai(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_S_lai(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_lai; ++Yws){
					 YG_S_lai(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_S_lai()
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_lai; ++Yws){
					 YS_lai(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_S_lai(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_S_lai; ++Yws){
					 YS_lai(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_S_lai(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("S_lai", Yws, Yw1, Yw2, Yw3, Ywt, &YS_S_lai(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_S_lai()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmSi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmSi; ++Yw2){
			 if ((YS_lai(Yw1, Yw2)= new S_lai ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_pre_aero(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDpre; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_pre_aero; ++Yws){
				 YG_D_pre_aero(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_pre_aero(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDpre; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_pre_aero; ++Yws){
				 YG_D_pre_aero(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_pre_aero()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDpre; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_pre_aero; ++Yws){
				 YD_pre_aero(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_pre_aero(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDpre; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_pre_aero; ++Yws){
				 YD_pre_aero(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_pre_aero(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_pre_aero", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_pre_aero(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_pre_aero()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDpre; ++Yw1){
		 if ((YD_pre_aero(Yw1) = new D_pre_aero ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_aero(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero; ++Yws){
				 YG_D_aero(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_aero(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero; ++Yws){
				 YG_D_aero(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_aero()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero; ++Yws){
				 YD_aero(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_aero(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero; ++Yws){
				 YD_aero(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_aero(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_aero", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_aero(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_aero()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YD_aero(Yw1) = new D_aero ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_aero1(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero1; ++Yws){
				 YG_D_aero1(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_aero1(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero1; ++Yws){
				 YG_D_aero1(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_aero1()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero1; ++Yws){
				 YD_aero1(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_aero1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_aero1; ++Yws){
				 YD_aero1(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_aero1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_aero1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_aero1(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_aero1()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YD_aero1(Yw1) = new D_aero1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_qsatt(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_qsatt; ++Yws){
				 YG_D_qsatt(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_qsatt(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_qsatt; ++Yws){
				 YG_D_qsatt(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_qsatt()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_qsatt; ++Yws){
				 YD_qsatt(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_qsatt(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_qsatt; ++Yws){
				 YD_qsatt(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_qsatt(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_qsatt", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_qsatt(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_qsatt()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YD_qsatt(Yw1) = new D_qsatt ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_snow(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_snow; ++Yws){
				 YG_D_snow(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_snow(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_snow; ++Yws){
				 YG_D_snow(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_snow()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_snow; ++Yws){
				 YD_snow(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_snow(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_snow; ++Yws){
				 YD_snow(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_snow(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_snow", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_snow(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_snow()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YD_snow(Yw1) = new D_snow ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_bare(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_bare; ++Yws){
				 YG_D_bare(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_bare(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_bare; ++Yws){
				 YG_D_bare(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_bare()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_bare; ++Yws){
				 YD_bare(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_bare(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_bare; ++Yws){
				 YD_bare(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_bare(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_bare", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_bare(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_bare()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexDi; ++Yw1){
		 if ((YD_bare(Yw1) = new D_bare ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_inter(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_inter; ++Yws){
					 YG_D_inter(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_inter(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_inter; ++Yws){
					 YG_D_inter(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_inter()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_inter; ++Yws){
					 YD_inter(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_inter(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_inter; ++Yws){
					 YD_inter(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_inter(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_inter", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_inter(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_inter()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 if ((YD_inter(Yw1, Yw2)= new D_inter ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_pre_trans(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans; ++Yws){
					 YG_D_pre_trans(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_pre_trans(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans; ++Yws){
					 YG_D_pre_trans(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_pre_trans()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans; ++Yws){
					 YD_pre_trans(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_pre_trans(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans; ++Yws){
					 YD_pre_trans(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_pre_trans(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_pre_trans", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_pre_trans(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_pre_trans()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 if ((YD_pre_trans(Yw1, Yw2)= new D_pre_trans ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_pre_trans2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans2; ++Yws){
					 YG_D_pre_trans2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_pre_trans2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans2; ++Yws){
					 YG_D_pre_trans2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_pre_trans2()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans2; ++Yws){
					 YD_pre_trans2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_pre_trans2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_pre_trans2; ++Yws){
					 YD_pre_trans2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_pre_trans2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_pre_trans2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_pre_trans2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_pre_trans2()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 if ((YD_pre_trans2(Yw1, Yw2)= new D_pre_trans2 ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_trans(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_trans; ++Yws){
					 YG_D_trans(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_trans(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_trans; ++Yws){
					 YG_D_trans(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_trans()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_trans; ++Yws){
					 YD_trans(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_trans(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_trans; ++Yws){
					 YD_trans(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_trans(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_trans", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_trans(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_trans()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 if ((YD_trans(Yw1, Yw2)= new D_trans ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_comb_vbsum(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_vbsum; ++Yws){
					 YG_D_comb_vbsum(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_comb_vbsum(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_vbsum; ++Yws){
					 YG_D_comb_vbsum(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_comb_vbsum()
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_vbsum; ++Yws){
					 YD_comb_vbsum(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_comb_vbsum(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_vbsum; ++Yws){
					 YD_comb_vbsum(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_comb_vbsum(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_comb_vbsum", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_comb_vbsum(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_comb_vbsum()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmDi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmDi; ++Yw2){
			 if ((YD_comb_vbsum(Yw1, Yw2)= new D_comb_vbsum ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_comb_vb(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_vb; ++Yws){
				 YG_D_comb_vb(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_comb_vb(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_vb; ++Yws){
				 YG_D_comb_vb(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_comb_vb()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_vb; ++Yws){
				 YD_comb_vb(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_comb_vb(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_vb; ++Yws){
				 YD_comb_vb(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_comb_vb(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_comb_vb", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_comb_vb(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_comb_vb()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 if ((YD_comb_vb(Yw1) = new D_comb_vb ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_D_comb_soil(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_soil; ++Yws){
				 YG_D_comb_soil(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_D_comb_soil(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_soil; ++Yws){
				 YG_D_comb_soil(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_D_comb_soil()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_soil; ++Yws){
				 YD_comb_soil(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_D_comb_soil(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_D_comb_soil; ++Yws){
				 YD_comb_soil(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_D_comb_soil(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_comb_soil", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_comb_soil(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_D_comb_soil()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexD1i; ++Yw1){
		 if ((YD_comb_soil(Yw1) = new D_comb_soil ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_comb_veg(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_veg; ++Yws){
					 YG_D_comb_veg(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_comb_veg(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_veg; ++Yws){
					 YG_D_comb_veg(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_comb_veg()
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_veg; ++Yws){
					 YD_comb_veg(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_comb_veg(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_veg; ++Yws){
					 YD_comb_veg(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_comb_veg(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_comb_veg", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_comb_veg(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_comb_veg()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 if ((YD_comb_veg(Yw1, Yw2)= new D_comb_veg ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_D_comb_verif(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_verif; ++Yws){
					 YG_D_comb_verif(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_D_comb_verif(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_verif; ++Yws){
					 YG_D_comb_verif(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_D_comb_verif()
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_verif; ++Yws){
					 YD_comb_verif(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_D_comb_verif(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_D_comb_verif; ++Yws){
					 YD_comb_verif(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_D_comb_verif(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("D_comb_verif", Yws, Yw1, Yw2, Yw3, Ywt, &YS_D_comb_verif(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_D_comb_verif()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmD1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmD1i; ++Yw2){
			 if ((YD_comb_verif(Yw1, Yw2)= new D_comb_verif ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_dev_qsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_dev_qsol; ++Yws){
				 YG_E_dev_qsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_dev_qsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_dev_qsol; ++Yws){
				 YG_E_dev_qsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_dev_qsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_dev_qsol; ++Yws){
				 YE_dev_qsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_dev_qsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_dev_qsol; ++Yws){
				 YE_dev_qsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_dev_qsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_dev_qsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_dev_qsol(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_dev_qsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_dev_qsol(Yw1) = new E_dev_qsol ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_beg_qsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_qsol; ++Yws){
				 YG_E_beg_qsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_beg_qsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_qsol; ++Yws){
				 YG_E_beg_qsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_beg_qsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_qsol; ++Yws){
				 YE_beg_qsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_beg_qsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_qsol; ++Yws){
				 YE_beg_qsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_beg_qsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_beg_qsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_beg_qsol(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_beg_qsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_beg_qsol(Yw1) = new E_beg_qsol ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_beg_netrad(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_netrad; ++Yws){
				 YG_E_beg_netrad(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_beg_netrad(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_netrad; ++Yws){
				 YG_E_beg_netrad(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_beg_netrad()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_netrad; ++Yws){
				 YE_beg_netrad(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_beg_netrad(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_beg_netrad; ++Yws){
				 YE_beg_netrad(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_beg_netrad(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_beg_netrad", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_beg_netrad(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_beg_netrad()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_beg_netrad(Yw1) = new E_beg_netrad ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp1(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp1; ++Yws){
				 YG_E_surftemp1(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp1(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp1; ++Yws){
				 YG_E_surftemp1(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp1()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp1; ++Yws){
				 YE_surftemp1(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp1; ++Yws){
				 YE_surftemp1(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp1(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp1()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp1(Yw1) = new E_surftemp1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp2; ++Yws){
				 YG_E_surftemp2(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp2; ++Yws){
				 YG_E_surftemp2(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp2()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp2; ++Yws){
				 YE_surftemp2(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp2; ++Yws){
				 YE_surftemp2(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp2(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp2()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp2(Yw1) = new E_surftemp2 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp3(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp3; ++Yws){
				 YG_E_surftemp3(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp3(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp3; ++Yws){
				 YG_E_surftemp3(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp3()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp3; ++Yws){
				 YE_surftemp3(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp3(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp3; ++Yws){
				 YE_surftemp3(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp3(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp3()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp3(Yw1) = new E_surftemp3 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp4(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp4; ++Yws){
				 YG_E_surftemp4(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp4(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp4; ++Yws){
				 YG_E_surftemp4(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp4()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp4; ++Yws){
				 YE_surftemp4(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp4(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp4; ++Yws){
				 YE_surftemp4(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp4(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp4", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp4(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp4()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp4(Yw1) = new E_surftemp4 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp_pt(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_pt; ++Yws){
				 YG_E_surftemp_pt(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp_pt(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_pt; ++Yws){
				 YG_E_surftemp_pt(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp_pt()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_pt; ++Yws){
				 YE_surftemp_pt(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp_pt(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_pt; ++Yws){
				 YE_surftemp_pt(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp_pt(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp_pt", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp_pt(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp_pt()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp_pt(Yw1) = new E_surftemp_pt ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp_qsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qsol; ++Yws){
				 YG_E_surftemp_qsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp_qsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qsol; ++Yws){
				 YG_E_surftemp_qsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp_qsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qsol; ++Yws){
				 YE_surftemp_qsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp_qsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qsol; ++Yws){
				 YE_surftemp_qsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp_qsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp_qsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp_qsol(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp_qsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp_qsol(Yw1) = new E_surftemp_qsol ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp_epot(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_epot; ++Yws){
				 YG_E_surftemp_epot(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp_epot(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_epot; ++Yws){
				 YG_E_surftemp_epot(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp_epot()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_epot; ++Yws){
				 YE_surftemp_epot(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp_epot(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_epot; ++Yws){
				 YE_surftemp_epot(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp_epot(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp_epot", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp_epot(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp_epot()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp_epot(Yw1) = new E_surftemp_epot ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_surftemp_qair(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qair; ++Yws){
				 YG_E_surftemp_qair(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_surftemp_qair(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qair; ++Yws){
				 YG_E_surftemp_qair(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_surftemp_qair()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qair; ++Yws){
				 YE_surftemp_qair(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_surftemp_qair(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_surftemp_qair; ++Yws){
				 YE_surftemp_qair(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_surftemp_qair(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_surftemp_qair", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_surftemp_qair(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_surftemp_qair()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_surftemp_qair(Yw1) = new E_surftemp_qair ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux1(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux1; ++Yws){
				 YG_E_flux1(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux1(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux1; ++Yws){
				 YG_E_flux1(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux1()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux1; ++Yws){
				 YE_flux1(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux1; ++Yws){
				 YE_flux1(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux1(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux1()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux1(Yw1) = new E_flux1 ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_tslw(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_tslw; ++Yws){
				 YG_E_flux_tslw(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_tslw(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_tslw; ++Yws){
				 YG_E_flux_tslw(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_tslw()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_tslw; ++Yws){
				 YE_flux_tslw(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_tslw(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_tslw; ++Yws){
				 YE_flux_tslw(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_tslw(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_tslw", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_tslw(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_tslw()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_tslw(Yw1) = new E_flux_tslw ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_qsurf(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_qsurf; ++Yws){
				 YG_E_flux_qsurf(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_qsurf(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_qsurf; ++Yws){
				 YG_E_flux_qsurf(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_qsurf()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_qsurf; ++Yws){
				 YE_flux_qsurf(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_qsurf(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_qsurf; ++Yws){
				 YE_flux_qsurf(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_qsurf(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_qsurf", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_qsurf(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_qsurf()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_qsurf(Yw1) = new E_flux_qsurf ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_net(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_net; ++Yws){
				 YG_E_flux_net(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_net(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_net; ++Yws){
				 YG_E_flux_net(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_net()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_net; ++Yws){
				 YE_flux_net(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_net(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_net; ++Yws){
				 YE_flux_net(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_net(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_net", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_net(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_net()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_net(Yw1) = new E_flux_net ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_vefl(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_vefl; ++Yws){
				 YG_E_flux_vefl(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_vefl(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_vefl; ++Yws){
				 YG_E_flux_vefl(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_vefl()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_vefl; ++Yws){
				 YE_flux_vefl(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_vefl(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_vefl; ++Yws){
				 YE_flux_vefl(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_vefl(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_vefl", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_vefl(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_vefl()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_vefl(Yw1) = new E_flux_vefl ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_flta(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_flta; ++Yws){
				 YG_E_flux_flta(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_flta(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_flta; ++Yws){
				 YG_E_flux_flta(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_flta()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_flta; ++Yws){
				 YE_flux_flta(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_flta(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_flta; ++Yws){
				 YE_flux_flta(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_flta(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_flta", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_flta(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_flta()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_flta(Yw1) = new E_flux_flta ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_evapo(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_evapo; ++Yws){
				 YG_E_flux_evapo(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_evapo(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_evapo; ++Yws){
				 YG_E_flux_evapo(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_evapo()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_evapo; ++Yws){
				 YE_flux_evapo(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_evapo(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_evapo; ++Yws){
				 YE_flux_evapo(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_evapo(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_evapo", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_evapo(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_evapo()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_evapo(Yw1) = new E_flux_evapo ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_flux_corr(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_corr; ++Yws){
				 YG_E_flux_corr(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_flux_corr(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_corr; ++Yws){
				 YG_E_flux_corr(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_flux_corr()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_corr; ++Yws){
				 YE_flux_corr(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_flux_corr(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_flux_corr; ++Yws){
				 YE_flux_corr(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_flux_corr(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_flux_corr", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_flux_corr(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_flux_corr()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_flux_corr(Yw1) = new E_flux_corr ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_grad_qsat(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_grad_qsat; ++Yws){
				 YG_E_grad_qsat(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_grad_qsat(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_grad_qsat; ++Yws){
				 YG_E_grad_qsat(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_grad_qsat()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_grad_qsat; ++Yws){
				 YE_grad_qsat(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_grad_qsat(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_grad_qsat; ++Yws){
				 YE_grad_qsat(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_grad_qsat(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_grad_qsat", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_grad_qsat(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_grad_qsat()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_grad_qsat(Yw1) = new E_grad_qsat ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_evap_veva(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evap_veva; ++Yws){
				 YG_E_evap_veva(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_evap_veva(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evap_veva; ++Yws){
				 YG_E_evap_veva(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_evap_veva()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evap_veva; ++Yws){
				 YE_evap_veva(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_evap_veva(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_evap_veva; ++Yws){
				 YE_evap_veva(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_evap_veva(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_evap_veva", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_evap_veva(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_evap_veva()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexEi; ++Yw1){
		 if ((YE_evap_veva(Yw1) = new E_evap_veva ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_E_evap_trans(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_evap_trans; ++Yws){
					 YG_E_evap_trans(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_E_evap_trans(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_evap_trans; ++Yws){
					 YG_E_evap_trans(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_E_evap_trans()
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_evap_trans; ++Yws){
					 YE_evap_trans(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_E_evap_trans(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_evap_trans; ++Yws){
					 YE_evap_trans(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_E_evap_trans(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_evap_trans", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_evap_trans(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_E_evap_trans()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmEi; ++Yw2){
			 if ((YE_evap_trans(Yw1, Yw2)= new E_evap_trans ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_E_emis_planck(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SdouzeEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SdouzeEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_emis_planck; ++Yws){
					 YG_E_emis_planck(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_E_emis_planck(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SdouzeEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SdouzeEi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_emis_planck; ++Yws){
					 YG_E_emis_planck(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_E_emis_planck()
{
	 for (int Yw1=0; Yw1<YA1_SdouzeEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SdouzeEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_emis_planck; ++Yws){
					 YE_emis_planck(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_E_emis_planck(double val)
{
	 for (int Yw1=0; Yw1<YA1_SdouzeEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SdouzeEi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_E_emis_planck; ++Yws){
					 YE_emis_planck(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_E_emis_planck(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_emis_planck", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_emis_planck(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_E_emis_planck()  
{
	 for (int Yw1=0; Yw1<YA1_SdouzeEi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SdouzeEi; ++Yw2){
			 if ((YE_emis_planck(Yw1, Yw2)= new E_emis_planck ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_E_emis_rad(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_rad; ++Yws){
				 YG_E_emis_rad(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_E_emis_rad(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_rad; ++Yws){
				 YG_E_emis_rad(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_E_emis_rad()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_rad; ++Yws){
				 YE_emis_rad(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_E_emis_rad(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_E_emis_rad; ++Yws){
				 YE_emis_rad(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_E_emis_rad(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("E_emis_rad", Yws, Yw1, Yw2, Yw3, Ywt, &YS_E_emis_rad(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_E_emis_rad()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexE2i; ++Yw1){
		 if ((YE_emis_rad(Yw1) = new E_emis_rad ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_snow_i(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_i; ++Yws){
				 YG_H_snow_i(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_snow_i(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_i; ++Yws){
				 YG_H_snow_i(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_snow_i()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_i; ++Yws){
				 YH_snow_i(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_snow_i(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_i; ++Yws){
				 YH_snow_i(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_snow_i(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_snow_i", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_snow_i(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_snow_i()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 if ((YH_snow_i(Yw1) = new H_snow_i ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_snow(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow; ++Yws){
				 YG_H_snow(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_snow(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow; ++Yws){
				 YG_H_snow(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_snow()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow; ++Yws){
				 YH_snow(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_snow(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow; ++Yws){
				 YH_snow(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_snow(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_snow", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_snow(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_snow()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 if ((YH_snow(Yw1) = new H_snow ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_snow_melt_i(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt_i; ++Yws){
				 YG_H_snow_melt_i(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_snow_melt_i(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt_i; ++Yws){
				 YG_H_snow_melt_i(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_snow_melt_i()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt_i; ++Yws){
				 YH_snow_melt_i(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_snow_melt_i(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt_i; ++Yws){
				 YH_snow_melt_i(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_snow_melt_i(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_snow_melt_i", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_snow_melt_i(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_snow_melt_i()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 if ((YH_snow_melt_i(Yw1) = new H_snow_melt_i ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_snow_melt(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt; ++Yws){
				 YG_H_snow_melt(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_snow_melt(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt; ++Yws){
				 YG_H_snow_melt(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_snow_melt()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt; ++Yws){
				 YH_snow_melt(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_snow_melt(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_melt; ++Yws){
				 YH_snow_melt(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_snow_melt(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_snow_melt", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_snow_melt(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_snow_melt()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 if ((YH_snow_melt(Yw1) = new H_snow_melt ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_snow_age(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_age; ++Yws){
				 YG_H_snow_age(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_snow_age(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_age; ++Yws){
				 YG_H_snow_age(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_snow_age()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_age; ++Yws){
				 YH_snow_age(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_snow_age(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_snow_age; ++Yws){
				 YH_snow_age(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_snow_age(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_snow_age", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_snow_age(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_snow_age()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHis; ++Yw1){
		 if ((YH_snow_age(Yw1) = new H_snow_age ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_var(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_var; ++Yws){
					 YG_H_veg_var(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_var(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_var; ++Yws){
					 YG_H_veg_var(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_var()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_var; ++Yws){
					 YH_veg_var(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_var(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_var; ++Yws){
					 YH_veg_var(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_var(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_var", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_var(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_var()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_var(Yw1, Yw2)= new H_veg_var ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_sum(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_sum; ++Yws){
					 YG_H_veg_sum(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_sum(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_sum; ++Yws){
					 YG_H_veg_sum(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_sum()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_sum; ++Yws){
					 YH_veg_sum(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_sum(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_sum; ++Yws){
					 YH_veg_sum(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_sum(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_sum", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_sum(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_sum()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_sum(Yw1, Yw2)= new H_veg_sum ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_niv(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_niv; ++Yws){
					 YG_H_veg_niv(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_niv(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_niv; ++Yws){
					 YG_H_veg_niv(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_niv()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_niv; ++Yws){
					 YH_veg_niv(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_niv(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_niv; ++Yws){
					 YH_veg_niv(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_niv(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_niv", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_niv(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_niv()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_niv(Yw1, Yw2)= new H_veg_niv ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_water(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water; ++Yws){
					 YG_H_veg_water(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_water(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water; ++Yws){
					 YG_H_veg_water(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_water()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water; ++Yws){
					 YH_veg_water(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_water(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water; ++Yws){
					 YH_veg_water(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_water(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_water", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_water(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_water()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_water(Yw1, Yw2)= new H_veg_water ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_water2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water2; ++Yws){
					 YG_H_veg_water2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_water2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water2; ++Yws){
					 YG_H_veg_water2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_water2()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water2; ++Yws){
					 YH_veg_water2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_water2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_water2; ++Yws){
					 YH_veg_water2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_water2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_water2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_water2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_water2()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_water2(Yw1, Yw2)= new H_veg_water2 ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_upd(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_upd; ++Yws){
					 YG_H_veg_upd(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_upd(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_upd; ++Yws){
					 YG_H_veg_upd(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_upd()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_upd; ++Yws){
					 YH_veg_upd(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_upd(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_upd; ++Yws){
					 YH_veg_upd(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_upd(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_upd", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_upd(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_upd()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_upd(Yw1, Yw2)= new H_veg_upd ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_veg_cond(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_cond; ++Yws){
					 YG_H_veg_cond(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_veg_cond(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_cond; ++Yws){
					 YG_H_veg_cond(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_veg_cond()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_cond; ++Yws){
					 YH_veg_cond(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_veg_cond(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_veg_cond; ++Yws){
					 YH_veg_cond(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_veg_cond(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_veg_cond", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_veg_cond(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_veg_cond()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_veg_cond(Yw1, Yw2)= new H_veg_cond ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_canop_init(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_init; ++Yws){
					 YG_H_canop_init(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_canop_init(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_init; ++Yws){
					 YG_H_canop_init(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_canop_init()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_init; ++Yws){
					 YH_canop_init(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_canop_init(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_init; ++Yws){
					 YH_canop_init(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_canop_init(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_canop_init", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_canop_init(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_canop_init()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_canop_init(Yw1, Yw2)= new H_canop_init ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_canop_interp(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_interp; ++Yws){
					 YG_H_canop_interp(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_canop_interp(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_interp; ++Yws){
					 YG_H_canop_interp(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_canop_interp()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_interp; ++Yws){
					 YH_canop_interp(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_canop_interp(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_canop_interp; ++Yws){
					 YH_canop_interp(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_canop_interp(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_canop_interp", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_canop_interp(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_canop_interp()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_canop_interp(Yw1, Yw2)= new H_canop_interp ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_flx(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flx; ++Yws){
					 YG_H_soil_flx(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_flx(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flx; ++Yws){
					 YG_H_soil_flx(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_flx()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flx; ++Yws){
					 YH_soil_flx(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_flx(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flx; ++Yws){
					 YH_soil_flx(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_flx(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_flx", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_flx(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_flx()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_flx(Yw1, Yw2)= new H_soil_flx ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_flxcorr(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flxcorr; ++Yws){
					 YG_H_soil_flxcorr(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_flxcorr(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flxcorr; ++Yws){
					 YG_H_soil_flxcorr(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_flxcorr()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flxcorr; ++Yws){
					 YH_soil_flxcorr(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_flxcorr(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_flxcorr; ++Yws){
					 YH_soil_flxcorr(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_flxcorr(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_flxcorr", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_flxcorr(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_flxcorr()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_flxcorr(Yw1, Yw2)= new H_soil_flxcorr ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_trans(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_trans; ++Yws){
					 YG_H_soil_trans(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_trans(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_trans; ++Yws){
					 YG_H_soil_trans(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_trans()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_trans; ++Yws){
					 YH_soil_trans(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_trans(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_trans; ++Yws){
					 YH_soil_trans(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_trans(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_trans", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_trans(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_trans()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_trans(Yw1, Yw2)= new H_soil_trans ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_runoff(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runoff; ++Yws){
					 YG_H_soil_runoff(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_runoff(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runoff; ++Yws){
					 YG_H_soil_runoff(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_runoff()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runoff; ++Yws){
					 YH_soil_runoff(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_runoff(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runoff; ++Yws){
					 YH_soil_runoff(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_runoff(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_runoff", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_runoff(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_runoff()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_runoff(Yw1, Yw2)= new H_soil_runoff ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_dlock(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dlock; ++Yws){
					 YG_H_soil_dlock(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_dlock(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dlock; ++Yws){
					 YG_H_soil_dlock(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_dlock()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dlock; ++Yws){
					 YH_soil_dlock(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_dlock(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dlock; ++Yws){
					 YH_soil_dlock(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_dlock(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dlock", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dlock(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_dlock()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_dlock(Yw1, Yw2)= new H_soil_dlock ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_diff(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_diff; ++Yws){
					 YG_H_soil_diff(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_diff(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_diff; ++Yws){
					 YG_H_soil_diff(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_diff()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_diff; ++Yws){
					 YH_soil_diff(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_diff(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_diff; ++Yws){
					 YH_soil_diff(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_diff(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_diff", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_diff(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_diff()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_diff(Yw1, Yw2)= new H_soil_diff ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_dsp(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp; ++Yws){
					 YG_H_soil_dsp(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_dsp(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp; ++Yws){
					 YG_H_soil_dsp(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_dsp()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp; ++Yws){
					 YH_soil_dsp(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_dsp(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp; ++Yws){
					 YH_soil_dsp(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_dsp(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dsp", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dsp(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_dsp()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_dsp(Yw1, Yw2)= new H_soil_dsp ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_verif(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_verif; ++Yws){
					 YG_H_soil_verif(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_verif(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_verif; ++Yws){
					 YG_H_soil_verif(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_verif()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_verif; ++Yws){
					 YH_soil_verif(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_verif(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_verif; ++Yws){
					 YH_soil_verif(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_verif(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_verif", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_verif(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_verif()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_verif(Yw1, Yw2)= new H_soil_verif ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_mean(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_mean; ++Yws){
					 YG_H_soil_mean(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_mean(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_mean; ++Yws){
					 YG_H_soil_mean(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_mean()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_mean; ++Yws){
					 YH_soil_mean(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_mean(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_mean; ++Yws){
					 YH_soil_mean(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_mean(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_mean", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_mean(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_mean()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_mean(Yw1, Yw2)= new H_soil_mean ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_dsp2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp2; ++Yws){
					 YG_H_soil_dsp2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_dsp2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp2; ++Yws){
					 YG_H_soil_dsp2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_dsp2()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp2; ++Yws){
					 YH_soil_dsp2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_dsp2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsp2; ++Yws){
					 YH_soil_dsp2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_dsp2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dsp2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dsp2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_dsp2()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_dsp2(Yw1, Yw2)= new H_soil_dsp2 ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_runofft(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runofft; ++Yws){
					 YG_H_soil_runofft(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_runofft(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runofft; ++Yws){
					 YG_H_soil_runofft(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_runofft()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runofft; ++Yws){
					 YH_soil_runofft(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_runofft(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_runofft; ++Yws){
					 YH_soil_runofft(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_runofft(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_runofft", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_runofft(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_runofft()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_runofft(Yw1, Yw2)= new H_soil_runofft ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_dsg1(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsg1; ++Yws){
					 YG_H_soil_dsg1(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_dsg1(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsg1; ++Yws){
					 YG_H_soil_dsg1(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_dsg1()
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsg1; ++Yws){
					 YH_soil_dsg1(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_dsg1(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_dsg1; ++Yws){
					 YH_soil_dsg1(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_dsg1(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dsg1", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dsg1(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_dsg1()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmHi; ++Yw2){
			 if ((YH_soil_dsg1(Yw1, Yw2)= new H_soil_dsg1 ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_dsg(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dsg; ++Yws){
				 YG_H_soil_dsg(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_dsg(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dsg; ++Yws){
				 YG_H_soil_dsg(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_dsg()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dsg; ++Yws){
				 YH_soil_dsg(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_dsg(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dsg; ++Yws){
				 YH_soil_dsg(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_dsg(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dsg", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dsg(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_dsg()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexHi; ++Yw1){
		 if ((YH_soil_dsg(Yw1) = new H_soil_dsg ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_stress(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmH1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_stress; ++Yws){
					 YG_H_soil_stress(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_stress(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmH1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH1i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_stress; ++Yws){
					 YG_H_soil_stress(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_stress()
{
	 for (int Yw1=0; Yw1<YA1_SnvmH1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_stress; ++Yws){
					 YH_soil_stress(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_stress(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmH1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH1i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_stress; ++Yws){
					 YH_soil_stress(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_stress(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_stress", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_stress(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_stress()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmH1i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH1i; ++Yw2){
			 if ((YH_soil_stress(Yw1, Yw2)= new H_soil_stress ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_humrel(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmH2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH2i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_humrel; ++Yws){
					 YG_H_soil_humrel(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_humrel(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmH2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH2i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_humrel; ++Yws){
					 YG_H_soil_humrel(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_humrel()
{
	 for (int Yw1=0; Yw1<YA1_SnvmH2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH2i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_humrel; ++Yws){
					 YH_soil_humrel(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_humrel(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmH2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH2i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_humrel; ++Yws){
					 YH_soil_humrel(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_humrel(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_humrel", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_humrel(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_humrel()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmH2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmH2i; ++Yw2){
			 if ((YH_soil_humrel(Yw1, Yw2)= new H_soil_humrel ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_H_soil_shum(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnbdlHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_shum; ++Yws){
					 YG_H_soil_shum(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_H_soil_shum(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnbdlHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlHi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_shum; ++Yws){
					 YG_H_soil_shum(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_H_soil_shum()
{
	 for (int Yw1=0; Yw1<YA1_SnbdlHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_shum; ++Yws){
					 YH_soil_shum(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_H_soil_shum(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnbdlHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlHi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_H_soil_shum; ++Yws){
					 YH_soil_shum(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_H_soil_shum(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_shum", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_shum(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_H_soil_shum()  
{
	 for (int Yw1=0; Yw1<YA1_SnbdlHi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlHi; ++Yw2){
			 if ((YH_soil_shum(Yw1, Yw2)= new H_soil_shum ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_dryfrac(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dryfrac; ++Yws){
				 YG_H_soil_dryfrac(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_dryfrac(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dryfrac; ++Yws){
				 YG_H_soil_dryfrac(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_dryfrac()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dryfrac; ++Yws){
				 YH_soil_dryfrac(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_dryfrac(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_dryfrac; ++Yws){
				 YH_soil_dryfrac(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_dryfrac(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_dryfrac", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_dryfrac(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_dryfrac()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 if ((YH_soil_dryfrac(Yw1) = new H_soil_dryfrac ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_hdry(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_hdry; ++Yws){
				 YG_H_soil_hdry(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_hdry(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_hdry; ++Yws){
				 YG_H_soil_hdry(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_hdry()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_hdry; ++Yws){
				 YH_soil_hdry(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_hdry(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_hdry; ++Yws){
				 YH_soil_hdry(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_hdry(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_hdry", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_hdry(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_hdry()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 if ((YH_soil_hdry(Yw1) = new H_soil_hdry ())==NULL) Ycreate_errnew();}
}/*M1_TBTOGT  */ 
void YtabTOgrad_H_soil_rsol(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_rsol; ++Yws){
				 YG_H_soil_rsol(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_H_soil_rsol(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_rsol; ++Yws){
				 YG_H_soil_rsol(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_H_soil_rsol()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_rsol; ++Yws){
				 YH_soil_rsol(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_H_soil_rsol(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_H_soil_rsol; ++Yws){
				 YH_soil_rsol(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_H_soil_rsol(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("H_soil_rsol", Yws, Yw1, Yw2, Yw3, Ywt, &YS_H_soil_rsol(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_H_soil_rsol()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexH1i; ++Yw1){
		 if ((YH_soil_rsol(Yw1) = new H_soil_rsol ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_T_hum_wet(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_hum_wet; ++Yws){
					 YG_T_hum_wet(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_T_hum_wet(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_hum_wet; ++Yws){
					 YG_T_hum_wet(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_T_hum_wet()
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_hum_wet; ++Yws){
					 YT_hum_wet(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_T_hum_wet(double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_hum_wet; ++Yws){
					 YT_hum_wet(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_T_hum_wet(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_hum_wet", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_hum_wet(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_T_hum_wet()  
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 if ((YT_hum_wet(Yw1, Yw2)= new T_hum_wet ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_T_profile(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_profile; ++Yws){
					 YG_T_profile(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_T_profile(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_profile; ++Yws){
					 YG_T_profile(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_T_profile()
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_profile; ++Yws){
					 YT_profile(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_T_profile(double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_profile; ++Yws){
					 YT_profile(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_T_profile(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_profile", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_profile(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_T_profile()  
{
	 for (int Yw1=0; Yw1<YA1_SngrndTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTi; ++Yw2){
			 if ((YT_profile(Yw1, Yw2)= new T_profile ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_T_diag_stemp(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnbdlTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_diag_stemp; ++Yws){
					 YG_T_diag_stemp(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_T_diag_stemp(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnbdlTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlTi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_diag_stemp; ++Yws){
					 YG_T_diag_stemp(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_T_diag_stemp()
{
	 for (int Yw1=0; Yw1<YA1_SnbdlTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_diag_stemp; ++Yws){
					 YT_diag_stemp(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_T_diag_stemp(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnbdlTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlTi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_diag_stemp; ++Yws){
					 YT_diag_stemp(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_T_diag_stemp(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_diag_stemp", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_diag_stemp(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_T_diag_stemp()  
{
	 for (int Yw1=0; Yw1<YA1_SnbdlTi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnbdlTi; ++Yw2){
			 if ((YT_diag_stemp(Yw1, Yw2)= new T_diag_stemp ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_T_energy(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexTi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_energy; ++Yws){
				 YG_T_energy(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_T_energy(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexTi; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_energy; ++Yws){
				 YG_T_energy(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_T_energy()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexTi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_energy; ++Yws){
				 YT_energy(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_T_energy(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexTi; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_energy; ++Yws){
				 YT_energy(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_T_energy(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_energy", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_energy(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_T_energy()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexTi; ++Yw1){
		 if ((YT_energy(Yw1) = new T_energy ())==NULL) Ycreate_errnew();}
}/*M2_TBTOGT  */ 
void YtabTOgrad_T_coef_soil(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SngrndTTT; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTTT; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil; ++Yws){
					 YG_T_coef_soil(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_T_coef_soil(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTTT; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTTT; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil; ++Yws){
					 YG_T_coef_soil(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_T_coef_soil()
{
	 for (int Yw1=0; Yw1<YA1_SngrndTTT; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTTT; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil; ++Yws){
					 YT_coef_soil(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_T_coef_soil(double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndTTT; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTTT; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil; ++Yws){
					 YT_coef_soil(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_T_coef_soil(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_coef_soil", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_coef_soil(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_T_coef_soil()  
{
	 for (int Yw1=0; Yw1<YA1_SngrndTTT; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndTTT; ++Yw2){
			 if ((YT_coef_soil(Yw1, Yw2)= new T_coef_soil ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_T_coef_soil2(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SngrndT2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndT2i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil2; ++Yws){
					 YG_T_coef_soil2(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_T_coef_soil2(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndT2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndT2i; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil2; ++Yws){
					 YG_T_coef_soil2(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_T_coef_soil2()
{
	 for (int Yw1=0; Yw1<YA1_SngrndT2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndT2i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil2; ++Yws){
					 YT_coef_soil2(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_T_coef_soil2(double val)
{
	 for (int Yw1=0; Yw1<YA1_SngrndT2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndT2i; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_T_coef_soil2; ++Yws){
					 YT_coef_soil2(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_T_coef_soil2(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_coef_soil2", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_coef_soil2(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_T_coef_soil2()  
{
	 for (int Yw1=0; Yw1<YA1_SngrndT2i; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SngrndT2i; ++Yw2){
			 if ((YT_coef_soil2(Yw1, Yw2)= new T_coef_soil2 ())==NULL) Ycreate_errnew();}}
}/*M1_TBTOGT  */ 
void YtabTOgrad_T_coef_diff(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SkjindexT1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_coef_diff; ++Yws){
				 YG_T_coef_diff(Yws, Yw1, Ywt) = tab[Y3windice]; ++Y3windice;}}}
}/*M1_GEQVT*/ 
void YgradEQval_T_coef_diff(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexT1i; ++Yw1){
		 for (int Ywt=frompdt; Ywt<topdt;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_coef_diff; ++Yws){
				 YG_T_coef_diff(Yws, Yw1, Ywt) = val;}}}
}/*M1_RGRADT*/ 
void Yrazgrad_T_coef_diff()
{
	 for (int Yw1=0; Yw1<YA1_SkjindexT1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_coef_diff; ++Yws){
				 YT_coef_diff(Yw1)->Ygrad[Ywt][Yws] = 0.0;}}}
}/*M1_SETAT*/ 
void Ysetstate_T_coef_diff(double val)
{
	 for (int Yw1=0; Yw1<YA1_SkjindexT1i; ++Yw1){
		 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;  ++Ywt){
			 for (int Yws=0; Yws<YNBS_T_coef_diff; ++Yws){
				 YT_coef_diff(Yw1)->Ystate[Ywt][Yws] = val;}}}
}/*M1_YIOUT*/ 
void Yio_T_coef_diff(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("T_coef_diff", Yws, Yw1, Yw2, Yw3, Ywt, &YS_T_coef_diff(Yws, Yw1, Ywt), val);
}/*M1_CREU*/ 
void Ycreate_T_coef_diff()  
{
	 for (int Yw1=0; Yw1<YA1_SkjindexT1i; ++Yw1){
		 if ((YT_coef_diff(Yw1) = new T_coef_diff ())==NULL) Ycreate_errnew();}
}/*M2_TBTOG   */ 
void YtabTOgrad_C_albcalc3(YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_Skjindex2Cn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Skjindex2Cn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_C_albcalc3; ++Yws){
				 YG_C_albcalc3(Yws, Yw1, Yw2) = tab[Y3windice]; ++Y3windice;}}}
}/*M2_GEQV */ 
void YgradEQval_C_albcalc3(double val)
{
	 for (int Yw1=0; Yw1<YA1_Skjindex2Cn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Skjindex2Cn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_C_albcalc3; ++Yws){
				 YG_C_albcalc3(Yws, Yw1, Yw2) = val;}}}
}/*M2_RGRAD*/ 
void Yrazgrad_C_albcalc3()
{
	 for (int Yw1=0; Yw1<YA1_Skjindex2Cn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Skjindex2Cn; ++Yw2){
			 for (int Yws=0; Yws<YNBS_C_albcalc3; ++Yws){
				 YC_albcalc3(Yw1, Yw2)->Ygrad[Yws] = 0.0;}}}
}/*M2_SETA*/ 
void Ysetstate_C_albcalc3(double val)
{
	 for (int Yw1=0; Yw1<YA1_Skjindex2Cn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Skjindex2Cn;  ++Yw2){
			 for (int Yws=0; Yws<YNBS_C_albcalc3; ++Yws){
				 YC_albcalc3(Yw1, Yw2)->Ystate[Yws] = val;}}}
}/*M2_YIOTU*/ 
void Yio_C_albcalc3(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("C_albcalc3", Yws, Yw1, Yw2, Yw3, Ywt, &YS_C_albcalc3(Yws, Yw1, Yw2), val);
}/*M2_CREU*/ 
void Ycreate_C_albcalc3()  
{
	 for (int Yw1=0; Yw1<YA1_Skjindex2Cn; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_Skjindex2Cn; ++Yw2){
			 if ((YC_albcalc3(Yw1, Yw2)= new C_albcalc3 ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_C_z0_rug(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmCi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmCi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_z0_rug; ++Yws){
					 YG_C_z0_rug(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_C_z0_rug(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmCi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmCi; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_z0_rug; ++Yws){
					 YG_C_z0_rug(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_C_z0_rug()
{
	 for (int Yw1=0; Yw1<YA1_SnvmCi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmCi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_z0_rug; ++Yws){
					 YC_z0_rug(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_C_z0_rug(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmCi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmCi; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_z0_rug; ++Yws){
					 YC_z0_rug(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_C_z0_rug(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("C_z0_rug", Yws, Yw1, Yw2, Yw3, Ywt, &YS_C_z0_rug(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_C_z0_rug()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmCi; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmCi; ++Yw2){
			 if ((YC_z0_rug(Yw1, Yw2)= new C_z0_rug ())==NULL) Ycreate_errnew();}}
}/*M2_TBTOGT  */ 
void YtabTOgrad_C_albedo(int frompdt, int topdt, YREAL tab[])
{
	 for (int Yw1=0; Yw1<YA1_SnvmC2; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmC2; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_albedo; ++Yws){
					 YG_C_albedo(Yws, Yw1, Yw2, Ywt) = tab[Y3windice]; ++Y3windice;}}}}
}/*M2_GEQVT*/ 
void YgradEQval_C_albedo(int frompdt, int topdt, double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmC2; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmC2; ++Yw2){
			 for (int Ywt=frompdt; Ywt<topdt; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_albedo; ++Yws){
					 YG_C_albedo(Yws, Yw1, Yw2, Ywt) = val;}}}}
}/*M2_RGRADT*/ 
void Yrazgrad_C_albedo()
{
	 for (int Yw1=0; Yw1<YA1_SnvmC2; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmC2; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul; ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_albedo; ++Yws){
					 YC_albedo(Yw1, Yw2)->Ygrad[Ywt][Yws] = 0.0;}}}}
}/*M2_SETAT*/ 
void Ysetstate_C_albedo(double val)
{
	 for (int Yw1=0; Yw1<YA1_SnvmC2; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmC2; ++Yw2){
			 for (int Ywt=0; Ywt<YNBALLTIME_Tmodul;    ++Ywt){
				 for (int Yws=0; Yws<YNBS_C_albedo; ++Yws){
					 YC_albedo(Yw1, Yw2)->Ystate[Ywt][Yws] = val;}}}}
}/*M2_YIOUT*/ 
void Yio_C_albedo(int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)	
{  Yiorwf ("C_albedo", Yws, Yw1, Yw2, Yw3, Ywt, &YS_C_albedo(Yws, Yw1, Yw2, Ywt), val);
}/*M2_CREU*/ 
void Ycreate_C_albedo()  
{
	 for (int Yw1=0; Yw1<YA1_SnvmC2; ++Yw1){
		 for (int Yw2=0; Yw2<YA2_SnvmC2; ++Yw2){
			 if ((YC_albedo(Yw1, Yw2)= new C_albedo ())==NULL) Ycreate_errnew();}}
}
void Ycreate_all () 
{
	 Ycreate_humr_c_1 ();
	 Ycreate_humr_c_2 ();
	 Ycreate_humr_c_3 ();
	 Ycreate_humr_c_4 ();
	 Ycreate_humr_c_5 ();
	 Ycreate_humr_c_6 ();
	 Ycreate_humr_c_7 ();
	 Ycreate_humr_c_8 ();
	 Ycreate_humr_c_9 ();
	 Ycreate_humr_c_10 ();
	 Ycreate_humr_c_11 ();
	 Ycreate_humr_c_12 ();
	 Ycreate_humr_c_13 ();
	 Ycreate_rsol_cste ();
	 Ycreate_so_capa_wet ();
	 Ycreate_so_capa_dry ();
	 Ycreate_min_drain ();
	 Ycreate_max_drain ();
	 Ycreate_exp_drain ();
	 Ycreate_so_cond ();
	 Ycreate_so_capa ();
	 Ycreate_dpu_cste1 ();
	 Ycreate_mx_eau_eau ();
	 Ycreate_rveg_par ();
	 Ycreate_z0_par ();
	 Ycreate_z0_over ();
	 Ycreate_albedovis ();
	 Ycreate_albedonir ();
	 Ycreate_emis_par ();
	 Ycreate_emis_c ();
	 Ycreate_rveg_c ();
	 Ycreate_z0_c ();
	 Ycreate_so_cond_c ();
	 Ycreate_so_capa_c ();
	 Ycreate_albvis_c ();
	 Ycreate_rsol_c ();
	 Ycreate_dpu_c ();
	 Ycreate_mx_eau_c ();
	 Ycreate_hum_c_1 ();
	 Ycreate_hum_c_2 ();
	 Ycreate_hum_c_3 ();
	 Ycreate_hum_c_4 ();
	 Ycreate_hum_c_5 ();
	 Ycreate_hum_c_6 ();
	 Ycreate_hum_c_7 ();
	 Ycreate_hum_c_8 ();
	 Ycreate_hum_c_9 ();
	 Ycreate_hum_c_10 ();
	 Ycreate_hum_c_11 ();
	 Ycreate_hum_c_12 ();
	 Ycreate_hum_c_13 ();
	 Ycreate_bqsb_c ();
	 Ycreate_gqsb_c ();
	 Ycreate_z0_over_c ();
	 Ycreate_so_wet_c ();
	 Ycreate_so_dry_c ();
	 Ycreate_e_drain_c ();
	 Ycreate_mx_drain_c ();
	 Ycreate_min_drain_c ();
	 Ycreate_albnir_c ();
	 Ycreate_eaumax ();
	 Ycreate_eaumin ();
	 Ycreate_hummax ();
	 Ycreate_hummin ();
	 Ycreate_E_tempsol ();
	 Ycreate_E_emis_tempsol ();
	 Ycreate_H_watercontent ();
	 Ycreate_H_soil_humrel1 ();
	 Ycreate_H_soil_humrel2 ();
	 Ycreate_H_soil_humrel3 ();
	 Ycreate_H_soil_humrel4 ();
	 Ycreate_H_soil_humrel5 ();
	 Ycreate_H_soil_humrel6 ();
	 Ycreate_H_soil_humrel7 ();
	 Ycreate_H_soil_humrel8 ();
	 Ycreate_H_soil_humrel9 ();
	 Ycreate_H_soil_humrel10 ();
	 Ycreate_H_soil_humrel11 ();
	 Ycreate_H_soil_humrel12 ();
	 Ycreate_H_soil_humrel13 ();
	 Ycreate_E_netrad ();
	 Ycreate_E_fluxsens ();
	 Ycreate_E_fluxlat ();
	 Ycreate_E_evapnu ();
	 Ycreate_E_transpir ();
	 Ycreate_fluxsens ();
	 Ycreate_fluxlat ();
	 Ycreate_temp_sol ();
	 Ycreate_qsintveg ();
	 Ycreate_ptn ();
	 Ycreate_netrad ();
	 Ycreate_evapnu ();
	 Ycreate_transpir ();
	 Ycreate_bqsb_init ();
	 Ycreate_gqsb_init ();
	 Ycreate_h_c_1 ();
	 Ycreate_h_c_2 ();
	 Ycreate_h_c_3 ();
	 Ycreate_h_c_4 ();
	 Ycreate_h_c_5 ();
	 Ycreate_h_c_6 ();
	 Ycreate_h_c_7 ();
	 Ycreate_h_c_8 ();
	 Ycreate_h_c_9 ();
	 Ycreate_h_c_10 ();
	 Ycreate_h_c_11 ();
	 Ycreate_h_c_12 ();
	 Ycreate_h_c_13 ();
	 Ycreate_wind ();
	 Ycreate_init_hydrolc2 ();
	 Ycreate_int_lskin ();
	 Ycreate_int_thermosoil ();
	 Ycreate_int_diaglev ();
	 Ycreate_int_humlev ();
	 Ycreate_int_dz2 ();
	 Ycreate_int_slowproc ();
	 Ycreate_int_diaghum ();
	 Ycreate_F_u ();
	 Ycreate_F_v ();
	 Ycreate_F_qair ();
	 Ycreate_F_pb ();
	 Ycreate_F_lwdown ();
	 Ycreate_F_precip ();
	 Ycreate_F_temp_air ();
	 Ycreate_F_swdown ();
	 Ycreate_F_precip_snow ();
	 Ycreate_I_petAcoef ();
	 Ycreate_I_peqAcoef ();
	 Ycreate_I_swnet ();
	 Ycreate_I_epot_air ();
	 Ycreate_I_petBcoef ();
	 Ycreate_I_peqBcoef ();
	 Ycreate_SE_rau ();
	 Ycreate_SE_routing ();
	 Ycreate_S_fracnobio ();
	 Ycreate_S_height ();
	 Ycreate_S_vegetmax ();
	 Ycreate_S_veget ();
	 Ycreate_S_qsintm ();
	 Ycreate_S_lai ();
	 Ycreate_D_pre_aero ();
	 Ycreate_D_aero ();
	 Ycreate_D_aero1 ();
	 Ycreate_D_qsatt ();
	 Ycreate_D_snow ();
	 Ycreate_D_bare ();
	 Ycreate_D_inter ();
	 Ycreate_D_pre_trans ();
	 Ycreate_D_pre_trans2 ();
	 Ycreate_D_trans ();
	 Ycreate_D_comb_vbsum ();
	 Ycreate_D_comb_vb ();
	 Ycreate_D_comb_soil ();
	 Ycreate_D_comb_veg ();
	 Ycreate_D_comb_verif ();
	 Ycreate_E_dev_qsol ();
	 Ycreate_E_beg_qsol ();
	 Ycreate_E_beg_netrad ();
	 Ycreate_E_surftemp1 ();
	 Ycreate_E_surftemp2 ();
	 Ycreate_E_surftemp3 ();
	 Ycreate_E_surftemp4 ();
	 Ycreate_E_surftemp_pt ();
	 Ycreate_E_surftemp_qsol ();
	 Ycreate_E_surftemp_epot ();
	 Ycreate_E_surftemp_qair ();
	 Ycreate_E_flux1 ();
	 Ycreate_E_flux_tslw ();
	 Ycreate_E_flux_qsurf ();
	 Ycreate_E_flux_net ();
	 Ycreate_E_flux_vefl ();
	 Ycreate_E_flux_flta ();
	 Ycreate_E_flux_evapo ();
	 Ycreate_E_flux_corr ();
	 Ycreate_E_grad_qsat ();
	 Ycreate_E_evap_veva ();
	 Ycreate_E_evap_trans ();
	 Ycreate_E_emis_planck ();
	 Ycreate_E_emis_rad ();
	 Ycreate_H_snow_i ();
	 Ycreate_H_snow ();
	 Ycreate_H_snow_melt_i ();
	 Ycreate_H_snow_melt ();
	 Ycreate_H_snow_age ();
	 Ycreate_H_veg_var ();
	 Ycreate_H_veg_sum ();
	 Ycreate_H_veg_niv ();
	 Ycreate_H_veg_water ();
	 Ycreate_H_veg_water2 ();
	 Ycreate_H_veg_upd ();
	 Ycreate_H_veg_cond ();
	 Ycreate_H_canop_init ();
	 Ycreate_H_canop_interp ();
	 Ycreate_H_soil_flx ();
	 Ycreate_H_soil_flxcorr ();
	 Ycreate_H_soil_trans ();
	 Ycreate_H_soil_runoff ();
	 Ycreate_H_soil_dlock ();
	 Ycreate_H_soil_diff ();
	 Ycreate_H_soil_dsp ();
	 Ycreate_H_soil_verif ();
	 Ycreate_H_soil_mean ();
	 Ycreate_H_soil_dsp2 ();
	 Ycreate_H_soil_runofft ();
	 Ycreate_H_soil_dsg1 ();
	 Ycreate_H_soil_dsg ();
	 Ycreate_H_soil_stress ();
	 Ycreate_H_soil_humrel ();
	 Ycreate_H_soil_shum ();
	 Ycreate_H_soil_dryfrac ();
	 Ycreate_H_soil_hdry ();
	 Ycreate_H_soil_rsol ();
	 Ycreate_T_hum_wet ();
	 Ycreate_T_profile ();
	 Ycreate_T_diag_stemp ();
	 Ycreate_T_energy ();
	 Ycreate_T_coef_soil ();
	 Ycreate_T_coef_soil2 ();
	 Ycreate_T_coef_diff ();
	 Ycreate_C_albcalc3 ();
	 Ycreate_C_z0_rug ();
	 Ycreate_C_albedo ();
}
void Ywishdiff_all (char *nmmod, int Yws, int Yw1, int Yw2, int Yw3, int Ywt, YREAL vobs) 
{	
	 if(1==0);
	 else if (strcmp(nmmod, "emis_c") == 0)
				 YW_emis_c(Yws, Yw1) = YS_emis_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "rveg_c") == 0)
				 YW_rveg_c(Yws, Yw1) = YS_rveg_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "z0_c") == 0)
				 YW_z0_c(Yws, Yw1) = YS_z0_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "so_cond_c") == 0)
				 YW_so_cond_c(Yws, Yw1) = YS_so_cond_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "so_capa_c") == 0)
				 YW_so_capa_c(Yws, Yw1) = YS_so_capa_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "albvis_c") == 0)
				 YW_albvis_c(Yws, Yw1) = YS_albvis_c(Yws, Yw1) - vobs;
	 else if (strcmp(nmmod, "E_tempsol") == 0)
				 YW_E_tempsol(Yws, Yw1) = YS_E_tempsol(Yws, Yw1, Ywt) - vobs;
}
void Ycostwishdiff_all (char *nmmod, int Yws, int Yw1, int Yw2, int Yw3, int Ywt) 
{	
	 if(1==0);
	 else if (strcmp(nmmod, "emis_c") == 0)
				 YG_emis_c(Yws, Yw1) += Ycostdiff(YW_emis_c(Yws, Yw1), YW_emis_c(Yws, Yw1));
	 else if (strcmp(nmmod, "rveg_c") == 0)
				 YG_rveg_c(Yws, Yw1) += Ycostdiff(YW_rveg_c(Yws, Yw1), YW_rveg_c(Yws, Yw1));
	 else if (strcmp(nmmod, "z0_c") == 0)
				 YG_z0_c(Yws, Yw1) += Ycostdiff(YW_z0_c(Yws, Yw1), YW_z0_c(Yws, Yw1));
	 else if (strcmp(nmmod, "so_cond_c") == 0)
				 YG_so_cond_c(Yws, Yw1) += Ycostdiff(YW_so_cond_c(Yws, Yw1), YW_so_cond_c(Yws, Yw1));
	 else if (strcmp(nmmod, "so_capa_c") == 0)
				 YG_so_capa_c(Yws, Yw1) += Ycostdiff(YW_so_capa_c(Yws, Yw1), YW_so_capa_c(Yws, Yw1));
	 else if (strcmp(nmmod, "albvis_c") == 0)
				 YG_albvis_c(Yws, Yw1) += Ycostdiff(YW_albvis_c(Yws, Yw1), YW_albvis_c(Yws, Yw1));
	 else if (strcmp(nmmod, "E_tempsol") == 0)
				 YG_E_tempsol(Yws, Yw1, Ywt) += Ycostdiff(YW_E_tempsol(Yws, Yw1), YW_E_tempsol(Yws, Yw1));
}
void Yc_dstar_all (int indic, char *nmmod, int nout, int iaxe, int jaxe, int kaxe, int apdt, int pdt, YREAL *vobs, YREAL *qtea) 
{	
	 if(1==0);
	 else if (strcmp(nmmod, "emis_c") == 0)
				 *qtea = YG_emis_c(nout, iaxe) - (*vobs - YS_emis_c(nout, iaxe));
	 else if (strcmp(nmmod, "rveg_c") == 0)
				 *qtea = YG_rveg_c(nout, iaxe) - (*vobs - YS_rveg_c(nout, iaxe));
	 else if (strcmp(nmmod, "z0_c") == 0)
				 *qtea = YG_z0_c(nout, iaxe) - (*vobs - YS_z0_c(nout, iaxe));
	 else if (strcmp(nmmod, "so_cond_c") == 0)
				 *qtea = YG_so_cond_c(nout, iaxe) - (*vobs - YS_so_cond_c(nout, iaxe));
	 else if (strcmp(nmmod, "so_capa_c") == 0)
				 *qtea = YG_so_capa_c(nout, iaxe) - (*vobs - YS_so_capa_c(nout, iaxe));
	 else if (strcmp(nmmod, "albvis_c") == 0)
				 *qtea = YG_albvis_c(nout, iaxe) - (*vobs - YS_albvis_c(nout, iaxe));
	 else if (strcmp(nmmod, "E_tempsol") == 0)
				 *qtea = YG_E_tempsol(nout, iaxe, pdt) - (*vobs - YS_E_tempsol(nout, iaxe, pdt));
}
void Ywishqtea_all (char *nmmod, int Yws, int Yw1, int Yw2, int Yw3, YREAL qtea) 
{	
	 if(1==0);
	 else if (strcmp(nmmod, "emis_c") == 0)
				 YW_emis_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "rveg_c") == 0)
				 YW_rveg_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "z0_c") == 0)
				 YW_z0_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "so_cond_c") == 0)
				 YW_so_cond_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "so_capa_c") == 0)
				 YW_so_capa_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "albvis_c") == 0)
				 YW_albvis_c(Yws, Yw1) = qtea;
	 else if (strcmp(nmmod, "E_tempsol") == 0)
				 YW_E_tempsol(Yws, Yw1) = qtea;
}
void Ycostwishqtea_all (char *nmmod, int Yws, int Yw1, int Yw2, int Yw3, int Ywt, YREAL qtea) 
{	
	 if(1==0);
	 else if (strcmp(nmmod, "emis_c") == 0)
				 YG_emis_c(Yws, Yw1) += Ycostdiff(qtea, YW_emis_c(Yws, Yw1));
	 else if (strcmp(nmmod, "rveg_c") == 0)
				 YG_rveg_c(Yws, Yw1) += Ycostdiff(qtea, YW_rveg_c(Yws, Yw1));
	 else if (strcmp(nmmod, "z0_c") == 0)
				 YG_z0_c(Yws, Yw1) += Ycostdiff(qtea, YW_z0_c(Yws, Yw1));
	 else if (strcmp(nmmod, "so_cond_c") == 0)
				 YG_so_cond_c(Yws, Yw1) += Ycostdiff(qtea, YW_so_cond_c(Yws, Yw1));
	 else if (strcmp(nmmod, "so_capa_c") == 0)
				 YG_so_capa_c(Yws, Yw1) += Ycostdiff(qtea, YW_so_capa_c(Yws, Yw1));
	 else if (strcmp(nmmod, "albvis_c") == 0)
				 YG_albvis_c(Yws, Yw1) += Ycostdiff(qtea, YW_albvis_c(Yws, Yw1));
	 else if (strcmp(nmmod, "E_tempsol") == 0)
				 YG_E_tempsol(Yws, Yw1, Ywt) += Ycostdiff(qtea, YW_E_tempsol(Yws, Yw1));
}
void Youtoobs_mod(YioKind yiokind, char *nmmod, int numout, int pdt, int arbpdt)
{
 	 if(1==0);
 	 else if (strcmp(nmmod, "emis_c") == 0) Youtoobs_emis_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "rveg_c") == 0) Youtoobs_rveg_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "z0_c") == 0) Youtoobs_z0_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "so_cond_c") == 0) Youtoobs_so_cond_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "so_capa_c") == 0) Youtoobs_so_capa_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "albvis_c") == 0) Youtoobs_albvis_c(yiokind, numout, pdt, arbpdt);
 	 else if (strcmp(nmmod, "E_tempsol") == 0) Youtoobs_E_tempsol(yiokind, numout, pdt, arbpdt);
}
void Yadjust_all () 
{
	 Yadjust_emis_c ();
	 Yadjust_rveg_c ();
	 Yadjust_z0_c ();
	 Yadjust_so_cond_c ();
	 Yadjust_so_capa_c ();
	 Yadjust_albvis_c ();
}
void Yc_adjustd_all () 
{
	 Yc_adjustd_emis_c ();
	 Yc_adjustd_rveg_c ();
	 Yc_adjustd_z0_c ();
	 Yc_adjustd_so_cond_c ();
	 Yc_adjustd_so_capa_c ();
	 Yc_adjustd_albvis_c ();
}
void Yc_adjustk_all () 
{
	 Yc_adjustk_emis_c ();
	 Yc_adjustk_rveg_c ();
	 Yc_adjustk_z0_c ();
	 Yc_adjustk_so_cond_c ();
	 Yc_adjustk_so_capa_c ();
	 Yc_adjustk_albvis_c ();
}
void Yrazgrad_all () 
{
	 Yrazgrad_humr_c_1 ();
	 Yrazgrad_humr_c_2 ();
	 Yrazgrad_humr_c_3 ();
	 Yrazgrad_humr_c_4 ();
	 Yrazgrad_humr_c_5 ();
	 Yrazgrad_humr_c_6 ();
	 Yrazgrad_humr_c_7 ();
	 Yrazgrad_humr_c_8 ();
	 Yrazgrad_humr_c_9 ();
	 Yrazgrad_humr_c_10 ();
	 Yrazgrad_humr_c_11 ();
	 Yrazgrad_humr_c_12 ();
	 Yrazgrad_humr_c_13 ();
	 Yrazgrad_rsol_cste ();
	 Yrazgrad_so_capa_wet ();
	 Yrazgrad_so_capa_dry ();
	 Yrazgrad_min_drain ();
	 Yrazgrad_max_drain ();
	 Yrazgrad_exp_drain ();
	 Yrazgrad_so_cond ();
	 Yrazgrad_so_capa ();
	 Yrazgrad_dpu_cste1 ();
	 Yrazgrad_mx_eau_eau ();
	 Yrazgrad_rveg_par ();
	 Yrazgrad_z0_par ();
	 Yrazgrad_z0_over ();
	 Yrazgrad_albedovis ();
	 Yrazgrad_albedonir ();
	 Yrazgrad_emis_par ();
	 Yrazgrad_emis_c ();
	 Yrazgrad_rveg_c ();
	 Yrazgrad_z0_c ();
	 Yrazgrad_so_cond_c ();
	 Yrazgrad_so_capa_c ();
	 Yrazgrad_albvis_c ();
	 Yrazgrad_rsol_c ();
	 Yrazgrad_dpu_c ();
	 Yrazgrad_mx_eau_c ();
	 Yrazgrad_hum_c_1 ();
	 Yrazgrad_hum_c_2 ();
	 Yrazgrad_hum_c_3 ();
	 Yrazgrad_hum_c_4 ();
	 Yrazgrad_hum_c_5 ();
	 Yrazgrad_hum_c_6 ();
	 Yrazgrad_hum_c_7 ();
	 Yrazgrad_hum_c_8 ();
	 Yrazgrad_hum_c_9 ();
	 Yrazgrad_hum_c_10 ();
	 Yrazgrad_hum_c_11 ();
	 Yrazgrad_hum_c_12 ();
	 Yrazgrad_hum_c_13 ();
	 Yrazgrad_bqsb_c ();
	 Yrazgrad_gqsb_c ();
	 Yrazgrad_z0_over_c ();
	 Yrazgrad_so_wet_c ();
	 Yrazgrad_so_dry_c ();
	 Yrazgrad_e_drain_c ();
	 Yrazgrad_mx_drain_c ();
	 Yrazgrad_min_drain_c ();
	 Yrazgrad_albnir_c ();
	 Yrazgrad_eaumax ();
	 Yrazgrad_eaumin ();
	 Yrazgrad_hummax ();
	 Yrazgrad_hummin ();
	 Yrazgrad_E_tempsol ();
	 Yrazgrad_E_emis_tempsol ();
	 Yrazgrad_H_watercontent ();
	 Yrazgrad_H_soil_humrel1 ();
	 Yrazgrad_H_soil_humrel2 ();
	 Yrazgrad_H_soil_humrel3 ();
	 Yrazgrad_H_soil_humrel4 ();
	 Yrazgrad_H_soil_humrel5 ();
	 Yrazgrad_H_soil_humrel6 ();
	 Yrazgrad_H_soil_humrel7 ();
	 Yrazgrad_H_soil_humrel8 ();
	 Yrazgrad_H_soil_humrel9 ();
	 Yrazgrad_H_soil_humrel10 ();
	 Yrazgrad_H_soil_humrel11 ();
	 Yrazgrad_H_soil_humrel12 ();
	 Yrazgrad_H_soil_humrel13 ();
	 Yrazgrad_E_netrad ();
	 Yrazgrad_E_fluxsens ();
	 Yrazgrad_E_fluxlat ();
	 Yrazgrad_E_evapnu ();
	 Yrazgrad_E_transpir ();
	 Yrazgrad_fluxsens ();
	 Yrazgrad_fluxlat ();
	 Yrazgrad_temp_sol ();
	 Yrazgrad_qsintveg ();
	 Yrazgrad_ptn ();
	 Yrazgrad_netrad ();
	 Yrazgrad_evapnu ();
	 Yrazgrad_transpir ();
	 Yrazgrad_bqsb_init ();
	 Yrazgrad_gqsb_init ();
	 Yrazgrad_h_c_1 ();
	 Yrazgrad_h_c_2 ();
	 Yrazgrad_h_c_3 ();
	 Yrazgrad_h_c_4 ();
	 Yrazgrad_h_c_5 ();
	 Yrazgrad_h_c_6 ();
	 Yrazgrad_h_c_7 ();
	 Yrazgrad_h_c_8 ();
	 Yrazgrad_h_c_9 ();
	 Yrazgrad_h_c_10 ();
	 Yrazgrad_h_c_11 ();
	 Yrazgrad_h_c_12 ();
	 Yrazgrad_h_c_13 ();
	 Yrazgrad_wind ();
	 Yrazgrad_init_hydrolc2 ();
	 Yrazgrad_int_lskin ();
	 Yrazgrad_int_thermosoil ();
	 Yrazgrad_int_diaglev ();
	 Yrazgrad_int_humlev ();
	 Yrazgrad_int_dz2 ();
	 Yrazgrad_int_slowproc ();
	 Yrazgrad_int_diaghum ();
	 Yrazgrad_F_u ();
	 Yrazgrad_F_v ();
	 Yrazgrad_F_qair ();
	 Yrazgrad_F_pb ();
	 Yrazgrad_F_lwdown ();
	 Yrazgrad_F_precip ();
	 Yrazgrad_F_temp_air ();
	 Yrazgrad_F_swdown ();
	 Yrazgrad_F_precip_snow ();
	 Yrazgrad_I_petAcoef ();
	 Yrazgrad_I_peqAcoef ();
	 Yrazgrad_I_swnet ();
	 Yrazgrad_I_epot_air ();
	 Yrazgrad_I_petBcoef ();
	 Yrazgrad_I_peqBcoef ();
	 Yrazgrad_SE_rau ();
	 Yrazgrad_SE_routing ();
	 Yrazgrad_S_fracnobio ();
	 Yrazgrad_S_height ();
	 Yrazgrad_S_vegetmax ();
	 Yrazgrad_S_veget ();
	 Yrazgrad_S_qsintm ();
	 Yrazgrad_S_lai ();
	 Yrazgrad_D_pre_aero ();
	 Yrazgrad_D_aero ();
	 Yrazgrad_D_aero1 ();
	 Yrazgrad_D_qsatt ();
	 Yrazgrad_D_snow ();
	 Yrazgrad_D_bare ();
	 Yrazgrad_D_inter ();
	 Yrazgrad_D_pre_trans ();
	 Yrazgrad_D_pre_trans2 ();
	 Yrazgrad_D_trans ();
	 Yrazgrad_D_comb_vbsum ();
	 Yrazgrad_D_comb_vb ();
	 Yrazgrad_D_comb_soil ();
	 Yrazgrad_D_comb_veg ();
	 Yrazgrad_D_comb_verif ();
	 Yrazgrad_E_dev_qsol ();
	 Yrazgrad_E_beg_qsol ();
	 Yrazgrad_E_beg_netrad ();
	 Yrazgrad_E_surftemp1 ();
	 Yrazgrad_E_surftemp2 ();
	 Yrazgrad_E_surftemp3 ();
	 Yrazgrad_E_surftemp4 ();
	 Yrazgrad_E_surftemp_pt ();
	 Yrazgrad_E_surftemp_qsol ();
	 Yrazgrad_E_surftemp_epot ();
	 Yrazgrad_E_surftemp_qair ();
	 Yrazgrad_E_flux1 ();
	 Yrazgrad_E_flux_tslw ();
	 Yrazgrad_E_flux_qsurf ();
	 Yrazgrad_E_flux_net ();
	 Yrazgrad_E_flux_vefl ();
	 Yrazgrad_E_flux_flta ();
	 Yrazgrad_E_flux_evapo ();
	 Yrazgrad_E_flux_corr ();
	 Yrazgrad_E_grad_qsat ();
	 Yrazgrad_E_evap_veva ();
	 Yrazgrad_E_evap_trans ();
	 Yrazgrad_E_emis_planck ();
	 Yrazgrad_E_emis_rad ();
	 Yrazgrad_H_snow_i ();
	 Yrazgrad_H_snow ();
	 Yrazgrad_H_snow_melt_i ();
	 Yrazgrad_H_snow_melt ();
	 Yrazgrad_H_snow_age ();
	 Yrazgrad_H_veg_var ();
	 Yrazgrad_H_veg_sum ();
	 Yrazgrad_H_veg_niv ();
	 Yrazgrad_H_veg_water ();
	 Yrazgrad_H_veg_water2 ();
	 Yrazgrad_H_veg_upd ();
	 Yrazgrad_H_veg_cond ();
	 Yrazgrad_H_canop_init ();
	 Yrazgrad_H_canop_interp ();
	 Yrazgrad_H_soil_flx ();
	 Yrazgrad_H_soil_flxcorr ();
	 Yrazgrad_H_soil_trans ();
	 Yrazgrad_H_soil_runoff ();
	 Yrazgrad_H_soil_dlock ();
	 Yrazgrad_H_soil_diff ();
	 Yrazgrad_H_soil_dsp ();
	 Yrazgrad_H_soil_verif ();
	 Yrazgrad_H_soil_mean ();
	 Yrazgrad_H_soil_dsp2 ();
	 Yrazgrad_H_soil_runofft ();
	 Yrazgrad_H_soil_dsg1 ();
	 Yrazgrad_H_soil_dsg ();
	 Yrazgrad_H_soil_stress ();
	 Yrazgrad_H_soil_humrel ();
	 Yrazgrad_H_soil_shum ();
	 Yrazgrad_H_soil_dryfrac ();
	 Yrazgrad_H_soil_hdry ();
	 Yrazgrad_H_soil_rsol ();
	 Yrazgrad_T_hum_wet ();
	 Yrazgrad_T_profile ();
	 Yrazgrad_T_diag_stemp ();
	 Yrazgrad_T_energy ();
	 Yrazgrad_T_coef_soil ();
	 Yrazgrad_T_coef_soil2 ();
	 Yrazgrad_T_coef_diff ();
	 Yrazgrad_C_albcalc3 ();
	 Yrazgrad_C_z0_rug ();
	 Yrazgrad_C_albedo ();
}
void Yrazgrad_only (int itraj) 
{
	if (itraj==Yid_Tcontr)
	{  Yrazgrad_humr_c_1 ();
	   Yrazgrad_humr_c_2 ();
	   Yrazgrad_humr_c_3 ();
	   Yrazgrad_humr_c_4 ();
	   Yrazgrad_humr_c_5 ();
	   Yrazgrad_humr_c_6 ();
	   Yrazgrad_humr_c_7 ();
	   Yrazgrad_humr_c_8 ();
	   Yrazgrad_humr_c_9 ();
	   Yrazgrad_humr_c_10 ();
	   Yrazgrad_humr_c_11 ();
	   Yrazgrad_humr_c_12 ();
	   Yrazgrad_humr_c_13 ();
	   Yrazgrad_rsol_cste ();
	   Yrazgrad_so_capa_wet ();
	   Yrazgrad_so_capa_dry ();
	   Yrazgrad_min_drain ();
	   Yrazgrad_max_drain ();
	   Yrazgrad_exp_drain ();
	   Yrazgrad_so_cond ();
	   Yrazgrad_so_capa ();
	   Yrazgrad_dpu_cste1 ();
	   Yrazgrad_mx_eau_eau ();
	   Yrazgrad_rveg_par ();
	   Yrazgrad_z0_par ();
	   Yrazgrad_z0_over ();
	   Yrazgrad_albedovis ();
	   Yrazgrad_albedonir ();
	   Yrazgrad_emis_par ();
	   Yrazgrad_I_petAcoef ();
	   Yrazgrad_I_peqAcoef ();
	   Yrazgrad_SE_routing ();
	   Yrazgrad_S_fracnobio ();
	   Yrazgrad_S_height ();
	   Yrazgrad_S_vegetmax ();
	   Yrazgrad_C_albcalc3 ();
	 }
	if (itraj==Yid_Tmodul)
	{}
}
int Ysetstate_mod (char *nmmod, YREAL val) 
{	int codret=0; int all=0;
	if (!strcmp(nmmod, "Y#A")) all=1;
	if (!strcmp(nmmod, "humr_c_1") || all)
	{  Ysetstate_humr_c_1(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_2") || all)
	{  Ysetstate_humr_c_2(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_3") || all)
	{  Ysetstate_humr_c_3(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_4") || all)
	{  Ysetstate_humr_c_4(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_5") || all)
	{  Ysetstate_humr_c_5(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_6") || all)
	{  Ysetstate_humr_c_6(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_7") || all)
	{  Ysetstate_humr_c_7(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_8") || all)
	{  Ysetstate_humr_c_8(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_9") || all)
	{  Ysetstate_humr_c_9(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_10") || all)
	{  Ysetstate_humr_c_10(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_11") || all)
	{  Ysetstate_humr_c_11(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_12") || all)
	{  Ysetstate_humr_c_12(val);codret=1;}
	if (!strcmp(nmmod, "humr_c_13") || all)
	{  Ysetstate_humr_c_13(val);codret=1;}
	if (!strcmp(nmmod, "rsol_cste") || all)
	{  Ysetstate_rsol_cste(val);codret=1;}
	if (!strcmp(nmmod, "so_capa_wet") || all)
	{  Ysetstate_so_capa_wet(val);codret=1;}
	if (!strcmp(nmmod, "so_capa_dry") || all)
	{  Ysetstate_so_capa_dry(val);codret=1;}
	if (!strcmp(nmmod, "min_drain") || all)
	{  Ysetstate_min_drain(val);codret=1;}
	if (!strcmp(nmmod, "max_drain") || all)
	{  Ysetstate_max_drain(val);codret=1;}
	if (!strcmp(nmmod, "exp_drain") || all)
	{  Ysetstate_exp_drain(val);codret=1;}
	if (!strcmp(nmmod, "so_cond") || all)
	{  Ysetstate_so_cond(val);codret=1;}
	if (!strcmp(nmmod, "so_capa") || all)
	{  Ysetstate_so_capa(val);codret=1;}
	if (!strcmp(nmmod, "dpu_cste1") || all)
	{  Ysetstate_dpu_cste1(val);codret=1;}
	if (!strcmp(nmmod, "mx_eau_eau") || all)
	{  Ysetstate_mx_eau_eau(val);codret=1;}
	if (!strcmp(nmmod, "rveg_par") || all)
	{  Ysetstate_rveg_par(val);codret=1;}
	if (!strcmp(nmmod, "z0_par") || all)
	{  Ysetstate_z0_par(val);codret=1;}
	if (!strcmp(nmmod, "z0_over") || all)
	{  Ysetstate_z0_over(val);codret=1;}
	if (!strcmp(nmmod, "albedovis") || all)
	{  Ysetstate_albedovis(val);codret=1;}
	if (!strcmp(nmmod, "albedonir") || all)
	{  Ysetstate_albedonir(val);codret=1;}
	if (!strcmp(nmmod, "emis_par") || all)
	{  Ysetstate_emis_par(val);codret=1;}
	if (!strcmp(nmmod, "emis_c") || all)
	{  Ysetstate_emis_c(val);codret=1;}
	if (!strcmp(nmmod, "rveg_c") || all)
	{  Ysetstate_rveg_c(val);codret=1;}
	if (!strcmp(nmmod, "z0_c") || all)
	{  Ysetstate_z0_c(val);codret=1;}
	if (!strcmp(nmmod, "so_cond_c") || all)
	{  Ysetstate_so_cond_c(val);codret=1;}
	if (!strcmp(nmmod, "so_capa_c") || all)
	{  Ysetstate_so_capa_c(val);codret=1;}
	if (!strcmp(nmmod, "albvis_c") || all)
	{  Ysetstate_albvis_c(val);codret=1;}
	if (!strcmp(nmmod, "rsol_c") || all)
	{  Ysetstate_rsol_c(val);codret=1;}
	if (!strcmp(nmmod, "dpu_c") || all)
	{  Ysetstate_dpu_c(val);codret=1;}
	if (!strcmp(nmmod, "mx_eau_c") || all)
	{  Ysetstate_mx_eau_c(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_1") || all)
	{  Ysetstate_hum_c_1(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_2") || all)
	{  Ysetstate_hum_c_2(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_3") || all)
	{  Ysetstate_hum_c_3(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_4") || all)
	{  Ysetstate_hum_c_4(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_5") || all)
	{  Ysetstate_hum_c_5(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_6") || all)
	{  Ysetstate_hum_c_6(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_7") || all)
	{  Ysetstate_hum_c_7(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_8") || all)
	{  Ysetstate_hum_c_8(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_9") || all)
	{  Ysetstate_hum_c_9(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_10") || all)
	{  Ysetstate_hum_c_10(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_11") || all)
	{  Ysetstate_hum_c_11(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_12") || all)
	{  Ysetstate_hum_c_12(val);codret=1;}
	if (!strcmp(nmmod, "hum_c_13") || all)
	{  Ysetstate_hum_c_13(val);codret=1;}
	if (!strcmp(nmmod, "bqsb_c") || all)
	{  Ysetstate_bqsb_c(val);codret=1;}
	if (!strcmp(nmmod, "gqsb_c") || all)
	{  Ysetstate_gqsb_c(val);codret=1;}
	if (!strcmp(nmmod, "z0_over_c") || all)
	{  Ysetstate_z0_over_c(val);codret=1;}
	if (!strcmp(nmmod, "so_wet_c") || all)
	{  Ysetstate_so_wet_c(val);codret=1;}
	if (!strcmp(nmmod, "so_dry_c") || all)
	{  Ysetstate_so_dry_c(val);codret=1;}
	if (!strcmp(nmmod, "e_drain_c") || all)
	{  Ysetstate_e_drain_c(val);codret=1;}
	if (!strcmp(nmmod, "mx_drain_c") || all)
	{  Ysetstate_mx_drain_c(val);codret=1;}
	if (!strcmp(nmmod, "min_drain_c") || all)
	{  Ysetstate_min_drain_c(val);codret=1;}
	if (!strcmp(nmmod, "albnir_c") || all)
	{  Ysetstate_albnir_c(val);codret=1;}
	if (!strcmp(nmmod, "eaumax") || all)
	{  Ysetstate_eaumax(val);codret=1;}
	if (!strcmp(nmmod, "eaumin") || all)
	{  Ysetstate_eaumin(val);codret=1;}
	if (!strcmp(nmmod, "hummax") || all)
	{  Ysetstate_hummax(val);codret=1;}
	if (!strcmp(nmmod, "hummin") || all)
	{  Ysetstate_hummin(val);codret=1;}
	if (!strcmp(nmmod, "E_tempsol") || all)
	{  Ysetstate_E_tempsol(val);codret=1;}
	if (!strcmp(nmmod, "E_emis_tempsol") || all)
	{  Ysetstate_E_emis_tempsol(val);codret=1;}
	if (!strcmp(nmmod, "H_watercontent") || all)
	{  Ysetstate_H_watercontent(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel1") || all)
	{  Ysetstate_H_soil_humrel1(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel2") || all)
	{  Ysetstate_H_soil_humrel2(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel3") || all)
	{  Ysetstate_H_soil_humrel3(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel4") || all)
	{  Ysetstate_H_soil_humrel4(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel5") || all)
	{  Ysetstate_H_soil_humrel5(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel6") || all)
	{  Ysetstate_H_soil_humrel6(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel7") || all)
	{  Ysetstate_H_soil_humrel7(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel8") || all)
	{  Ysetstate_H_soil_humrel8(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel9") || all)
	{  Ysetstate_H_soil_humrel9(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel10") || all)
	{  Ysetstate_H_soil_humrel10(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel11") || all)
	{  Ysetstate_H_soil_humrel11(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel12") || all)
	{  Ysetstate_H_soil_humrel12(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel13") || all)
	{  Ysetstate_H_soil_humrel13(val);codret=1;}
	if (!strcmp(nmmod, "E_netrad") || all)
	{  Ysetstate_E_netrad(val);codret=1;}
	if (!strcmp(nmmod, "E_fluxsens") || all)
	{  Ysetstate_E_fluxsens(val);codret=1;}
	if (!strcmp(nmmod, "E_fluxlat") || all)
	{  Ysetstate_E_fluxlat(val);codret=1;}
	if (!strcmp(nmmod, "E_evapnu") || all)
	{  Ysetstate_E_evapnu(val);codret=1;}
	if (!strcmp(nmmod, "E_transpir") || all)
	{  Ysetstate_E_transpir(val);codret=1;}
	if (!strcmp(nmmod, "fluxsens") || all)
	{  Ysetstate_fluxsens(val);codret=1;}
	if (!strcmp(nmmod, "fluxlat") || all)
	{  Ysetstate_fluxlat(val);codret=1;}
	if (!strcmp(nmmod, "temp_sol") || all)
	{  Ysetstate_temp_sol(val);codret=1;}
	if (!strcmp(nmmod, "qsintveg") || all)
	{  Ysetstate_qsintveg(val);codret=1;}
	if (!strcmp(nmmod, "ptn") || all)
	{  Ysetstate_ptn(val);codret=1;}
	if (!strcmp(nmmod, "netrad") || all)
	{  Ysetstate_netrad(val);codret=1;}
	if (!strcmp(nmmod, "evapnu") || all)
	{  Ysetstate_evapnu(val);codret=1;}
	if (!strcmp(nmmod, "transpir") || all)
	{  Ysetstate_transpir(val);codret=1;}
	if (!strcmp(nmmod, "bqsb_init") || all)
	{  Ysetstate_bqsb_init(val);codret=1;}
	if (!strcmp(nmmod, "gqsb_init") || all)
	{  Ysetstate_gqsb_init(val);codret=1;}
	if (!strcmp(nmmod, "h_c_1") || all)
	{  Ysetstate_h_c_1(val);codret=1;}
	if (!strcmp(nmmod, "h_c_2") || all)
	{  Ysetstate_h_c_2(val);codret=1;}
	if (!strcmp(nmmod, "h_c_3") || all)
	{  Ysetstate_h_c_3(val);codret=1;}
	if (!strcmp(nmmod, "h_c_4") || all)
	{  Ysetstate_h_c_4(val);codret=1;}
	if (!strcmp(nmmod, "h_c_5") || all)
	{  Ysetstate_h_c_5(val);codret=1;}
	if (!strcmp(nmmod, "h_c_6") || all)
	{  Ysetstate_h_c_6(val);codret=1;}
	if (!strcmp(nmmod, "h_c_7") || all)
	{  Ysetstate_h_c_7(val);codret=1;}
	if (!strcmp(nmmod, "h_c_8") || all)
	{  Ysetstate_h_c_8(val);codret=1;}
	if (!strcmp(nmmod, "h_c_9") || all)
	{  Ysetstate_h_c_9(val);codret=1;}
	if (!strcmp(nmmod, "h_c_10") || all)
	{  Ysetstate_h_c_10(val);codret=1;}
	if (!strcmp(nmmod, "h_c_11") || all)
	{  Ysetstate_h_c_11(val);codret=1;}
	if (!strcmp(nmmod, "h_c_12") || all)
	{  Ysetstate_h_c_12(val);codret=1;}
	if (!strcmp(nmmod, "h_c_13") || all)
	{  Ysetstate_h_c_13(val);codret=1;}
	if (!strcmp(nmmod, "wind") || all)
	{  Ysetstate_wind(val);codret=1;}
	if (!strcmp(nmmod, "init_hydrolc2") || all)
	{  Ysetstate_init_hydrolc2(val);codret=1;}
	if (!strcmp(nmmod, "int_lskin") || all)
	{  Ysetstate_int_lskin(val);codret=1;}
	if (!strcmp(nmmod, "int_thermosoil") || all)
	{  Ysetstate_int_thermosoil(val);codret=1;}
	if (!strcmp(nmmod, "int_diaglev") || all)
	{  Ysetstate_int_diaglev(val);codret=1;}
	if (!strcmp(nmmod, "int_humlev") || all)
	{  Ysetstate_int_humlev(val);codret=1;}
	if (!strcmp(nmmod, "int_dz2") || all)
	{  Ysetstate_int_dz2(val);codret=1;}
	if (!strcmp(nmmod, "int_slowproc") || all)
	{  Ysetstate_int_slowproc(val);codret=1;}
	if (!strcmp(nmmod, "int_diaghum") || all)
	{  Ysetstate_int_diaghum(val);codret=1;}
	if (!strcmp(nmmod, "F_u") || all)
	{  Ysetstate_F_u(val);codret=1;}
	if (!strcmp(nmmod, "F_v") || all)
	{  Ysetstate_F_v(val);codret=1;}
	if (!strcmp(nmmod, "F_qair") || all)
	{  Ysetstate_F_qair(val);codret=1;}
	if (!strcmp(nmmod, "F_pb") || all)
	{  Ysetstate_F_pb(val);codret=1;}
	if (!strcmp(nmmod, "F_lwdown") || all)
	{  Ysetstate_F_lwdown(val);codret=1;}
	if (!strcmp(nmmod, "F_precip") || all)
	{  Ysetstate_F_precip(val);codret=1;}
	if (!strcmp(nmmod, "F_temp_air") || all)
	{  Ysetstate_F_temp_air(val);codret=1;}
	if (!strcmp(nmmod, "F_swdown") || all)
	{  Ysetstate_F_swdown(val);codret=1;}
	if (!strcmp(nmmod, "F_precip_snow") || all)
	{  Ysetstate_F_precip_snow(val);codret=1;}
	if (!strcmp(nmmod, "I_petAcoef") || all)
	{  Ysetstate_I_petAcoef(val);codret=1;}
	if (!strcmp(nmmod, "I_peqAcoef") || all)
	{  Ysetstate_I_peqAcoef(val);codret=1;}
	if (!strcmp(nmmod, "I_swnet") || all)
	{  Ysetstate_I_swnet(val);codret=1;}
	if (!strcmp(nmmod, "I_epot_air") || all)
	{  Ysetstate_I_epot_air(val);codret=1;}
	if (!strcmp(nmmod, "I_petBcoef") || all)
	{  Ysetstate_I_petBcoef(val);codret=1;}
	if (!strcmp(nmmod, "I_peqBcoef") || all)
	{  Ysetstate_I_peqBcoef(val);codret=1;}
	if (!strcmp(nmmod, "SE_rau") || all)
	{  Ysetstate_SE_rau(val);codret=1;}
	if (!strcmp(nmmod, "SE_routing") || all)
	{  Ysetstate_SE_routing(val);codret=1;}
	if (!strcmp(nmmod, "S_fracnobio") || all)
	{  Ysetstate_S_fracnobio(val);codret=1;}
	if (!strcmp(nmmod, "S_height") || all)
	{  Ysetstate_S_height(val);codret=1;}
	if (!strcmp(nmmod, "S_vegetmax") || all)
	{  Ysetstate_S_vegetmax(val);codret=1;}
	if (!strcmp(nmmod, "S_veget") || all)
	{  Ysetstate_S_veget(val);codret=1;}
	if (!strcmp(nmmod, "S_qsintm") || all)
	{  Ysetstate_S_qsintm(val);codret=1;}
	if (!strcmp(nmmod, "S_lai") || all)
	{  Ysetstate_S_lai(val);codret=1;}
	if (!strcmp(nmmod, "D_pre_aero") || all)
	{  Ysetstate_D_pre_aero(val);codret=1;}
	if (!strcmp(nmmod, "D_aero") || all)
	{  Ysetstate_D_aero(val);codret=1;}
	if (!strcmp(nmmod, "D_aero1") || all)
	{  Ysetstate_D_aero1(val);codret=1;}
	if (!strcmp(nmmod, "D_qsatt") || all)
	{  Ysetstate_D_qsatt(val);codret=1;}
	if (!strcmp(nmmod, "D_snow") || all)
	{  Ysetstate_D_snow(val);codret=1;}
	if (!strcmp(nmmod, "D_bare") || all)
	{  Ysetstate_D_bare(val);codret=1;}
	if (!strcmp(nmmod, "D_inter") || all)
	{  Ysetstate_D_inter(val);codret=1;}
	if (!strcmp(nmmod, "D_pre_trans") || all)
	{  Ysetstate_D_pre_trans(val);codret=1;}
	if (!strcmp(nmmod, "D_pre_trans2") || all)
	{  Ysetstate_D_pre_trans2(val);codret=1;}
	if (!strcmp(nmmod, "D_trans") || all)
	{  Ysetstate_D_trans(val);codret=1;}
	if (!strcmp(nmmod, "D_comb_vbsum") || all)
	{  Ysetstate_D_comb_vbsum(val);codret=1;}
	if (!strcmp(nmmod, "D_comb_vb") || all)
	{  Ysetstate_D_comb_vb(val);codret=1;}
	if (!strcmp(nmmod, "D_comb_soil") || all)
	{  Ysetstate_D_comb_soil(val);codret=1;}
	if (!strcmp(nmmod, "D_comb_veg") || all)
	{  Ysetstate_D_comb_veg(val);codret=1;}
	if (!strcmp(nmmod, "D_comb_verif") || all)
	{  Ysetstate_D_comb_verif(val);codret=1;}
	if (!strcmp(nmmod, "E_dev_qsol") || all)
	{  Ysetstate_E_dev_qsol(val);codret=1;}
	if (!strcmp(nmmod, "E_beg_qsol") || all)
	{  Ysetstate_E_beg_qsol(val);codret=1;}
	if (!strcmp(nmmod, "E_beg_netrad") || all)
	{  Ysetstate_E_beg_netrad(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp1") || all)
	{  Ysetstate_E_surftemp1(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp2") || all)
	{  Ysetstate_E_surftemp2(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp3") || all)
	{  Ysetstate_E_surftemp3(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp4") || all)
	{  Ysetstate_E_surftemp4(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp_pt") || all)
	{  Ysetstate_E_surftemp_pt(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp_qsol") || all)
	{  Ysetstate_E_surftemp_qsol(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp_epot") || all)
	{  Ysetstate_E_surftemp_epot(val);codret=1;}
	if (!strcmp(nmmod, "E_surftemp_qair") || all)
	{  Ysetstate_E_surftemp_qair(val);codret=1;}
	if (!strcmp(nmmod, "E_flux1") || all)
	{  Ysetstate_E_flux1(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_tslw") || all)
	{  Ysetstate_E_flux_tslw(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_qsurf") || all)
	{  Ysetstate_E_flux_qsurf(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_net") || all)
	{  Ysetstate_E_flux_net(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_vefl") || all)
	{  Ysetstate_E_flux_vefl(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_flta") || all)
	{  Ysetstate_E_flux_flta(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_evapo") || all)
	{  Ysetstate_E_flux_evapo(val);codret=1;}
	if (!strcmp(nmmod, "E_flux_corr") || all)
	{  Ysetstate_E_flux_corr(val);codret=1;}
	if (!strcmp(nmmod, "E_grad_qsat") || all)
	{  Ysetstate_E_grad_qsat(val);codret=1;}
	if (!strcmp(nmmod, "E_evap_veva") || all)
	{  Ysetstate_E_evap_veva(val);codret=1;}
	if (!strcmp(nmmod, "E_evap_trans") || all)
	{  Ysetstate_E_evap_trans(val);codret=1;}
	if (!strcmp(nmmod, "E_emis_planck") || all)
	{  Ysetstate_E_emis_planck(val);codret=1;}
	if (!strcmp(nmmod, "E_emis_rad") || all)
	{  Ysetstate_E_emis_rad(val);codret=1;}
	if (!strcmp(nmmod, "H_snow_i") || all)
	{  Ysetstate_H_snow_i(val);codret=1;}
	if (!strcmp(nmmod, "H_snow") || all)
	{  Ysetstate_H_snow(val);codret=1;}
	if (!strcmp(nmmod, "H_snow_melt_i") || all)
	{  Ysetstate_H_snow_melt_i(val);codret=1;}
	if (!strcmp(nmmod, "H_snow_melt") || all)
	{  Ysetstate_H_snow_melt(val);codret=1;}
	if (!strcmp(nmmod, "H_snow_age") || all)
	{  Ysetstate_H_snow_age(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_var") || all)
	{  Ysetstate_H_veg_var(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_sum") || all)
	{  Ysetstate_H_veg_sum(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_niv") || all)
	{  Ysetstate_H_veg_niv(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_water") || all)
	{  Ysetstate_H_veg_water(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_water2") || all)
	{  Ysetstate_H_veg_water2(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_upd") || all)
	{  Ysetstate_H_veg_upd(val);codret=1;}
	if (!strcmp(nmmod, "H_veg_cond") || all)
	{  Ysetstate_H_veg_cond(val);codret=1;}
	if (!strcmp(nmmod, "H_canop_init") || all)
	{  Ysetstate_H_canop_init(val);codret=1;}
	if (!strcmp(nmmod, "H_canop_interp") || all)
	{  Ysetstate_H_canop_interp(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_flx") || all)
	{  Ysetstate_H_soil_flx(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_flxcorr") || all)
	{  Ysetstate_H_soil_flxcorr(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_trans") || all)
	{  Ysetstate_H_soil_trans(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_runoff") || all)
	{  Ysetstate_H_soil_runoff(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dlock") || all)
	{  Ysetstate_H_soil_dlock(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_diff") || all)
	{  Ysetstate_H_soil_diff(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dsp") || all)
	{  Ysetstate_H_soil_dsp(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_verif") || all)
	{  Ysetstate_H_soil_verif(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_mean") || all)
	{  Ysetstate_H_soil_mean(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dsp2") || all)
	{  Ysetstate_H_soil_dsp2(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_runofft") || all)
	{  Ysetstate_H_soil_runofft(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dsg1") || all)
	{  Ysetstate_H_soil_dsg1(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dsg") || all)
	{  Ysetstate_H_soil_dsg(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_stress") || all)
	{  Ysetstate_H_soil_stress(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_humrel") || all)
	{  Ysetstate_H_soil_humrel(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_shum") || all)
	{  Ysetstate_H_soil_shum(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_dryfrac") || all)
	{  Ysetstate_H_soil_dryfrac(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_hdry") || all)
	{  Ysetstate_H_soil_hdry(val);codret=1;}
	if (!strcmp(nmmod, "H_soil_rsol") || all)
	{  Ysetstate_H_soil_rsol(val);codret=1;}
	if (!strcmp(nmmod, "T_hum_wet") || all)
	{  Ysetstate_T_hum_wet(val);codret=1;}
	if (!strcmp(nmmod, "T_profile") || all)
	{  Ysetstate_T_profile(val);codret=1;}
	if (!strcmp(nmmod, "T_diag_stemp") || all)
	{  Ysetstate_T_diag_stemp(val);codret=1;}
	if (!strcmp(nmmod, "T_energy") || all)
	{  Ysetstate_T_energy(val);codret=1;}
	if (!strcmp(nmmod, "T_coef_soil") || all)
	{  Ysetstate_T_coef_soil(val);codret=1;}
	if (!strcmp(nmmod, "T_coef_soil2") || all)
	{  Ysetstate_T_coef_soil2(val);codret=1;}
	if (!strcmp(nmmod, "T_coef_diff") || all)
	{  Ysetstate_T_coef_diff(val);codret=1;}
	if (!strcmp(nmmod, "C_albcalc3") || all)
	{  Ysetstate_C_albcalc3(val);codret=1;}
	if (!strcmp(nmmod, "C_z0_rug") || all)
	{  Ysetstate_C_z0_rug(val);codret=1;}
	if (!strcmp(nmmod, "C_albedo") || all)
	{  Ysetstate_C_albedo(val);codret=1;}
	return(codret);
}
void Ysetwish_mod (int imod, YREAL val) 
{	if(1==0);
	else if (imod==29) Ysetwish_emis_c(val);
	else if (imod==30) Ysetwish_rveg_c(val);
	else if (imod==31) Ysetwish_z0_c(val);
	else if (imod==32) Ysetwish_so_cond_c(val);
	else if (imod==33) Ysetwish_so_capa_c(val);
	else if (imod==34) Ysetwish_albvis_c(val);
	else if (imod==64) Ysetwish_E_tempsol(val);
}
void  Yio_mod (char *nmmod, int Yws, int Yw1, int Yw2, int Yw3, int Ywt, double val)
{
	 if(1==0);
	 else if (strcmp(nmmod, "humr_c_1") == 0) Yio_humr_c_1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_2") == 0) Yio_humr_c_2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_3") == 0) Yio_humr_c_3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_4") == 0) Yio_humr_c_4(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_5") == 0) Yio_humr_c_5(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_6") == 0) Yio_humr_c_6(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_7") == 0) Yio_humr_c_7(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_8") == 0) Yio_humr_c_8(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_9") == 0) Yio_humr_c_9(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_10") == 0) Yio_humr_c_10(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_11") == 0) Yio_humr_c_11(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_12") == 0) Yio_humr_c_12(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "humr_c_13") == 0) Yio_humr_c_13(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "rsol_cste") == 0) Yio_rsol_cste(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_capa_wet") == 0) Yio_so_capa_wet(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_capa_dry") == 0) Yio_so_capa_dry(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "min_drain") == 0) Yio_min_drain(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "max_drain") == 0) Yio_max_drain(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "exp_drain") == 0) Yio_exp_drain(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_cond") == 0) Yio_so_cond(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_capa") == 0) Yio_so_capa(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "dpu_cste1") == 0) Yio_dpu_cste1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "mx_eau_eau") == 0) Yio_mx_eau_eau(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "rveg_par") == 0) Yio_rveg_par(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "z0_par") == 0) Yio_z0_par(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "z0_over") == 0) Yio_z0_over(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "albedovis") == 0) Yio_albedovis(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "albedonir") == 0) Yio_albedonir(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "emis_par") == 0) Yio_emis_par(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "emis_c") == 0) Yio_emis_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "rveg_c") == 0) Yio_rveg_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "z0_c") == 0) Yio_z0_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_cond_c") == 0) Yio_so_cond_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_capa_c") == 0) Yio_so_capa_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "albvis_c") == 0) Yio_albvis_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "rsol_c") == 0) Yio_rsol_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "dpu_c") == 0) Yio_dpu_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "mx_eau_c") == 0) Yio_mx_eau_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_1") == 0) Yio_hum_c_1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_2") == 0) Yio_hum_c_2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_3") == 0) Yio_hum_c_3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_4") == 0) Yio_hum_c_4(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_5") == 0) Yio_hum_c_5(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_6") == 0) Yio_hum_c_6(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_7") == 0) Yio_hum_c_7(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_8") == 0) Yio_hum_c_8(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_9") == 0) Yio_hum_c_9(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_10") == 0) Yio_hum_c_10(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_11") == 0) Yio_hum_c_11(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_12") == 0) Yio_hum_c_12(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hum_c_13") == 0) Yio_hum_c_13(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "bqsb_c") == 0) Yio_bqsb_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "gqsb_c") == 0) Yio_gqsb_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "z0_over_c") == 0) Yio_z0_over_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_wet_c") == 0) Yio_so_wet_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "so_dry_c") == 0) Yio_so_dry_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "e_drain_c") == 0) Yio_e_drain_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "mx_drain_c") == 0) Yio_mx_drain_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "min_drain_c") == 0) Yio_min_drain_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "albnir_c") == 0) Yio_albnir_c(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "eaumax") == 0) Yio_eaumax(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "eaumin") == 0) Yio_eaumin(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hummax") == 0) Yio_hummax(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "hummin") == 0) Yio_hummin(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_tempsol") == 0) Yio_E_tempsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_emis_tempsol") == 0) Yio_E_emis_tempsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_watercontent") == 0) Yio_H_watercontent(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel1") == 0) Yio_H_soil_humrel1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel2") == 0) Yio_H_soil_humrel2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel3") == 0) Yio_H_soil_humrel3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel4") == 0) Yio_H_soil_humrel4(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel5") == 0) Yio_H_soil_humrel5(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel6") == 0) Yio_H_soil_humrel6(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel7") == 0) Yio_H_soil_humrel7(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel8") == 0) Yio_H_soil_humrel8(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel9") == 0) Yio_H_soil_humrel9(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel10") == 0) Yio_H_soil_humrel10(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel11") == 0) Yio_H_soil_humrel11(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel12") == 0) Yio_H_soil_humrel12(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel13") == 0) Yio_H_soil_humrel13(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_netrad") == 0) Yio_E_netrad(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_fluxsens") == 0) Yio_E_fluxsens(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_fluxlat") == 0) Yio_E_fluxlat(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_evapnu") == 0) Yio_E_evapnu(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_transpir") == 0) Yio_E_transpir(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "fluxsens") == 0) Yio_fluxsens(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "fluxlat") == 0) Yio_fluxlat(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "temp_sol") == 0) Yio_temp_sol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "qsintveg") == 0) Yio_qsintveg(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "ptn") == 0) Yio_ptn(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "netrad") == 0) Yio_netrad(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "evapnu") == 0) Yio_evapnu(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "transpir") == 0) Yio_transpir(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "bqsb_init") == 0) Yio_bqsb_init(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "gqsb_init") == 0) Yio_gqsb_init(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_1") == 0) Yio_h_c_1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_2") == 0) Yio_h_c_2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_3") == 0) Yio_h_c_3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_4") == 0) Yio_h_c_4(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_5") == 0) Yio_h_c_5(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_6") == 0) Yio_h_c_6(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_7") == 0) Yio_h_c_7(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_8") == 0) Yio_h_c_8(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_9") == 0) Yio_h_c_9(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_10") == 0) Yio_h_c_10(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_11") == 0) Yio_h_c_11(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_12") == 0) Yio_h_c_12(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "h_c_13") == 0) Yio_h_c_13(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "wind") == 0) Yio_wind(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "init_hydrolc2") == 0) Yio_init_hydrolc2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_lskin") == 0) Yio_int_lskin(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_thermosoil") == 0) Yio_int_thermosoil(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_diaglev") == 0) Yio_int_diaglev(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_humlev") == 0) Yio_int_humlev(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_dz2") == 0) Yio_int_dz2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_slowproc") == 0) Yio_int_slowproc(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "int_diaghum") == 0) Yio_int_diaghum(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_u") == 0) Yio_F_u(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_v") == 0) Yio_F_v(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_qair") == 0) Yio_F_qair(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_pb") == 0) Yio_F_pb(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_lwdown") == 0) Yio_F_lwdown(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_precip") == 0) Yio_F_precip(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_temp_air") == 0) Yio_F_temp_air(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_swdown") == 0) Yio_F_swdown(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "F_precip_snow") == 0) Yio_F_precip_snow(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_petAcoef") == 0) Yio_I_petAcoef(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_peqAcoef") == 0) Yio_I_peqAcoef(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_swnet") == 0) Yio_I_swnet(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_epot_air") == 0) Yio_I_epot_air(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_petBcoef") == 0) Yio_I_petBcoef(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "I_peqBcoef") == 0) Yio_I_peqBcoef(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "SE_rau") == 0) Yio_SE_rau(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "SE_routing") == 0) Yio_SE_routing(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_fracnobio") == 0) Yio_S_fracnobio(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_height") == 0) Yio_S_height(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_vegetmax") == 0) Yio_S_vegetmax(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_veget") == 0) Yio_S_veget(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_qsintm") == 0) Yio_S_qsintm(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "S_lai") == 0) Yio_S_lai(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_pre_aero") == 0) Yio_D_pre_aero(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_aero") == 0) Yio_D_aero(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_aero1") == 0) Yio_D_aero1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_qsatt") == 0) Yio_D_qsatt(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_snow") == 0) Yio_D_snow(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_bare") == 0) Yio_D_bare(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_inter") == 0) Yio_D_inter(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_pre_trans") == 0) Yio_D_pre_trans(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_pre_trans2") == 0) Yio_D_pre_trans2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_trans") == 0) Yio_D_trans(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_comb_vbsum") == 0) Yio_D_comb_vbsum(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_comb_vb") == 0) Yio_D_comb_vb(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_comb_soil") == 0) Yio_D_comb_soil(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_comb_veg") == 0) Yio_D_comb_veg(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "D_comb_verif") == 0) Yio_D_comb_verif(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_dev_qsol") == 0) Yio_E_dev_qsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_beg_qsol") == 0) Yio_E_beg_qsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_beg_netrad") == 0) Yio_E_beg_netrad(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp1") == 0) Yio_E_surftemp1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp2") == 0) Yio_E_surftemp2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp3") == 0) Yio_E_surftemp3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp4") == 0) Yio_E_surftemp4(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp_pt") == 0) Yio_E_surftemp_pt(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp_qsol") == 0) Yio_E_surftemp_qsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp_epot") == 0) Yio_E_surftemp_epot(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_surftemp_qair") == 0) Yio_E_surftemp_qair(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux1") == 0) Yio_E_flux1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_tslw") == 0) Yio_E_flux_tslw(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_qsurf") == 0) Yio_E_flux_qsurf(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_net") == 0) Yio_E_flux_net(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_vefl") == 0) Yio_E_flux_vefl(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_flta") == 0) Yio_E_flux_flta(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_evapo") == 0) Yio_E_flux_evapo(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_flux_corr") == 0) Yio_E_flux_corr(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_grad_qsat") == 0) Yio_E_grad_qsat(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_evap_veva") == 0) Yio_E_evap_veva(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_evap_trans") == 0) Yio_E_evap_trans(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_emis_planck") == 0) Yio_E_emis_planck(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "E_emis_rad") == 0) Yio_E_emis_rad(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_snow_i") == 0) Yio_H_snow_i(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_snow") == 0) Yio_H_snow(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_snow_melt_i") == 0) Yio_H_snow_melt_i(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_snow_melt") == 0) Yio_H_snow_melt(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_snow_age") == 0) Yio_H_snow_age(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_var") == 0) Yio_H_veg_var(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_sum") == 0) Yio_H_veg_sum(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_niv") == 0) Yio_H_veg_niv(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_water") == 0) Yio_H_veg_water(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_water2") == 0) Yio_H_veg_water2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_upd") == 0) Yio_H_veg_upd(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_veg_cond") == 0) Yio_H_veg_cond(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_canop_init") == 0) Yio_H_canop_init(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_canop_interp") == 0) Yio_H_canop_interp(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_flx") == 0) Yio_H_soil_flx(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_flxcorr") == 0) Yio_H_soil_flxcorr(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_trans") == 0) Yio_H_soil_trans(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_runoff") == 0) Yio_H_soil_runoff(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dlock") == 0) Yio_H_soil_dlock(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_diff") == 0) Yio_H_soil_diff(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dsp") == 0) Yio_H_soil_dsp(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_verif") == 0) Yio_H_soil_verif(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_mean") == 0) Yio_H_soil_mean(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dsp2") == 0) Yio_H_soil_dsp2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_runofft") == 0) Yio_H_soil_runofft(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dsg1") == 0) Yio_H_soil_dsg1(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dsg") == 0) Yio_H_soil_dsg(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_stress") == 0) Yio_H_soil_stress(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_humrel") == 0) Yio_H_soil_humrel(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_shum") == 0) Yio_H_soil_shum(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_dryfrac") == 0) Yio_H_soil_dryfrac(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_hdry") == 0) Yio_H_soil_hdry(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "H_soil_rsol") == 0) Yio_H_soil_rsol(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_hum_wet") == 0) Yio_T_hum_wet(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_profile") == 0) Yio_T_profile(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_diag_stemp") == 0) Yio_T_diag_stemp(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_energy") == 0) Yio_T_energy(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_coef_soil") == 0) Yio_T_coef_soil(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_coef_soil2") == 0) Yio_T_coef_soil2(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "T_coef_diff") == 0) Yio_T_coef_diff(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "C_albcalc3") == 0) Yio_C_albcalc3(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "C_z0_rug") == 0) Yio_C_z0_rug(Yws, Yw1, Yw2, Yw3, Ywt, val);
	 else if (strcmp(nmmod, "C_albedo") == 0) Yio_C_albedo(Yws, Yw1, Yw2, Yw3, Ywt, val);
}
void YgradCTOtab_target (YREAL tab[]) 
{	//Y3windice = 0;
	 YgradCTOtab_emis_c (tab);
	 YgradCTOtab_rveg_c (tab);
	 YgradCTOtab_z0_c (tab);
	 YgradCTOtab_so_cond_c (tab);
	 YgradCTOtab_so_capa_c (tab);
	 YgradCTOtab_albvis_c (tab);
}
void YtabTOgrad_target (YREAL tab[]) 
{	//Y3windice = 0;
	 YtabTOgrad_emis_c (tab);
	 YtabTOgrad_rveg_c (tab);
	 YtabTOgrad_z0_c (tab);
	 YtabTOgrad_so_cond_c (tab);
	 YtabTOgrad_so_capa_c (tab);
	 YtabTOgrad_albvis_c (tab);
}
void Y3getstate_all (float x[]) 
{	 Y3windice = 0;
	 Y3getstate_emis_c (x);
	 Y3getstate_rveg_c (x);
	 Y3getstate_z0_c (x);
	 Y3getstate_so_cond_c (x);
	 Y3getstate_so_capa_c (x);
	 Y3getstate_albvis_c (x);
}
void Y3valstate_all () 
{	 Y3windice = 0;
	 Y3valstate_emis_c ();
	 Y3valstate_rveg_c ();
	 Y3valstate_z0_c ();
	 Y3valstate_so_cond_c ();
	 Y3valstate_so_capa_c ();
	 Y3valstate_albvis_c ();
}
void Y3valgrad_all (float g[]) 
{	 Y3windice = 0;
	 Y3valgrad_emis_c (g);
	 Y3valgrad_rveg_c (g);
	 Y3valgrad_z0_c (g);
	 Y3valgrad_so_cond_c (g);
	 Y3valgrad_so_capa_c (g);
	 Y3valgrad_albvis_c (g);
}
void Y3valxinf_all () 
{	 Y3windice = 0;
	 Y3valxinf_emis_c ();
	 Y3valxinf_rveg_c ();
	 Y3valxinf_z0_c ();
	 Y3valxinf_so_cond_c ();
	 Y3valxinf_so_capa_c ();
	 Y3valxinf_albvis_c ();
}
void Y3valxsup_all () 
{	 Y3windice = 0;
	 Y3valxsup_emis_c ();
	 Y3valxsup_rveg_c ();
	 Y3valxsup_z0_c ();
	 Y3valxsup_so_cond_c ();
	 Y3valxsup_so_capa_c ();
	 Y3valxsup_albvis_c ();
}
void Y3valdxmin_all () 
{	 Y3windice = 0;
	 Y3valdxmin_emis_c ();
	 Y3valdxmin_rveg_c ();
	 Y3valdxmin_z0_c ();
	 Y3valdxmin_so_cond_c ();
	 Y3valdxmin_so_capa_c ();
	 Y3valdxmin_albvis_c ();
}
void Y3getdelta_all (float x[]) 
{	 Y3windice = 0;
	 Y3getdelta_emis_c (x);
	 Y3getdelta_rveg_c (x);
	 Y3getdelta_z0_c (x);
	 Y3getdelta_so_cond_c (x);
	 Y3getdelta_so_capa_c (x);
	 Y3getdelta_albvis_c (x);
}
void Y3valdelta_all () 
{	 Y3windice = 0;
	 Y3valdelta_emis_c ();
	 Y3valdelta_rveg_c ();
	 Y3valdelta_z0_c ();
	 Y3valdelta_so_cond_c ();
	 Y3valdelta_so_capa_c ();
	 Y3valdelta_albvis_c ();
}
void YdeltaEQPCstate_traj(int itraj, char *norkmod, int frompdt, int topdt) 
{
	if (1==0){}
	else if (itraj==Yid_Tcontr)
	{
		if ( !strcmp(norkmod, "emis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_emis_c (0, 1, YTabMod[Yid_emis_c].pcoef);
		if ( !strcmp(norkmod, "rveg_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_rveg_c (0, 1, YTabMod[Yid_rveg_c].pcoef);
		if ( !strcmp(norkmod, "z0_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_z0_c (0, 1, YTabMod[Yid_z0_c].pcoef);
		if ( !strcmp(norkmod, "so_cond_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_so_cond_c (0, 1, YTabMod[Yid_so_cond_c].pcoef);
		if ( !strcmp(norkmod, "so_capa_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_so_capa_c (0, 1, YTabMod[Yid_so_capa_c].pcoef);
		if ( !strcmp(norkmod, "albvis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YdeltaEQPstate_albvis_c (0, 1, YTabMod[Yid_albvis_c].pcoef);
	}
	else if (itraj==Yid_Tmodul)
	{
	}
}
void YdeltaEQPCstate_target() 
{
	 YdeltaEQPstate_emis_c (0, 1, YTabMod[Yid_emis_c].pcoef);
	 YdeltaEQPstate_rveg_c (0, 1, YTabMod[Yid_rveg_c].pcoef);
	 YdeltaEQPstate_z0_c (0, 1, YTabMod[Yid_z0_c].pcoef);
	 YdeltaEQPstate_so_cond_c (0, 1, YTabMod[Yid_so_cond_c].pcoef);
	 YdeltaEQPstate_so_capa_c (0, 1, YTabMod[Yid_so_capa_c].pcoef);
	 YdeltaEQPstate_albvis_c (0, 1, YTabMod[Yid_albvis_c].pcoef);
}
void YgradEQPdelta_traj(int itraj, char *norkmod, int frompdt, int topdt, double pfact) 
{
	if (1==0){}
	else if (itraj==Yid_Tcontr)
	{
		if ( !strcmp(norkmod, "emis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_emis_c (0, 1, pfact);
		if ( !strcmp(norkmod, "rveg_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_rveg_c (0, 1, pfact);
		if ( !strcmp(norkmod, "z0_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_z0_c (0, 1, pfact);
		if ( !strcmp(norkmod, "so_cond_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_so_cond_c (0, 1, pfact);
		if ( !strcmp(norkmod, "so_capa_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_so_capa_c (0, 1, pfact);
		if ( !strcmp(norkmod, "albvis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
	 YgradEQPdelta_albvis_c (0, 1, pfact);
	}
	else if (itraj==Yid_Tmodul)
	{
	}
}
void YgradEQPdelta_target(double pfact) 
{
	 YgradEQPdelta_emis_c (0, 1, pfact);
	 YgradEQPdelta_rveg_c (0, 1, pfact);
	 YgradEQPdelta_z0_c (0, 1, pfact);
	 YgradEQPdelta_so_cond_c (0, 1, pfact);
	 YgradEQPdelta_so_capa_c (0, 1, pfact);
	 YgradEQPdelta_albvis_c (0, 1, pfact);
}
void YgradEQval_traj(int itraj, char *norkmod, int frompdt, int topdt, double val) 
{
	if (1==0){}
	else if (itraj==Yid_Tcontr)
	{
		if ( !strcmp(norkmod, "humr_c_1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_1 (val);
		if ( !strcmp(norkmod, "humr_c_2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_2 (val);
		if ( !strcmp(norkmod, "humr_c_3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_3 (val);
		if ( !strcmp(norkmod, "humr_c_4") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_4 (val);
		if ( !strcmp(norkmod, "humr_c_5") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_5 (val);
		if ( !strcmp(norkmod, "humr_c_6") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_6 (val);
		if ( !strcmp(norkmod, "humr_c_7") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_7 (val);
		if ( !strcmp(norkmod, "humr_c_8") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_8 (val);
		if ( !strcmp(norkmod, "humr_c_9") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_9 (val);
		if ( !strcmp(norkmod, "humr_c_10") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_10 (val);
		if ( !strcmp(norkmod, "humr_c_11") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_11 (val);
		if ( !strcmp(norkmod, "humr_c_12") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_12 (val);
		if ( !strcmp(norkmod, "humr_c_13") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_humr_c_13 (val);
		if ( !strcmp(norkmod, "rsol_cste") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_rsol_cste (val);
		if ( !strcmp(norkmod, "so_capa_wet") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_capa_wet (val);
		if ( !strcmp(norkmod, "so_capa_dry") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_capa_dry (val);
		if ( !strcmp(norkmod, "min_drain") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_min_drain (val);
		if ( !strcmp(norkmod, "max_drain") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_max_drain (val);
		if ( !strcmp(norkmod, "exp_drain") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_exp_drain (val);
		if ( !strcmp(norkmod, "so_cond") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_cond (val);
		if ( !strcmp(norkmod, "so_capa") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_capa (val);
		if ( !strcmp(norkmod, "dpu_cste1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_dpu_cste1 (val);
		if ( !strcmp(norkmod, "mx_eau_eau") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_mx_eau_eau (val);
		if ( !strcmp(norkmod, "rveg_par") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_rveg_par (val);
		if ( !strcmp(norkmod, "z0_par") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_z0_par (val);
		if ( !strcmp(norkmod, "z0_over") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_z0_over (val);
		if ( !strcmp(norkmod, "albedovis") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_albedovis (val);
		if ( !strcmp(norkmod, "albedonir") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_albedonir (val);
		if ( !strcmp(norkmod, "emis_par") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_emis_par (val);
		if ( !strcmp(norkmod, "emis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_emis_c (val);
		if ( !strcmp(norkmod, "rveg_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_rveg_c (val);
		if ( !strcmp(norkmod, "z0_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_z0_c (val);
		if ( !strcmp(norkmod, "so_cond_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_so_cond_c (val);
		if ( !strcmp(norkmod, "so_capa_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_so_capa_c (val);
		if ( !strcmp(norkmod, "albvis_c") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#T") )
		 YgradEQval_albvis_c (val);
		if ( !strcmp(norkmod, "rsol_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_rsol_c (val);
		if ( !strcmp(norkmod, "dpu_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_dpu_c (val);
		if ( !strcmp(norkmod, "mx_eau_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_mx_eau_c (val);
		if ( !strcmp(norkmod, "hum_c_1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_1 (val);
		if ( !strcmp(norkmod, "hum_c_2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_2 (val);
		if ( !strcmp(norkmod, "hum_c_3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_3 (val);
		if ( !strcmp(norkmod, "hum_c_4") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_4 (val);
		if ( !strcmp(norkmod, "hum_c_5") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_5 (val);
		if ( !strcmp(norkmod, "hum_c_6") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_6 (val);
		if ( !strcmp(norkmod, "hum_c_7") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_7 (val);
		if ( !strcmp(norkmod, "hum_c_8") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_8 (val);
		if ( !strcmp(norkmod, "hum_c_9") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_9 (val);
		if ( !strcmp(norkmod, "hum_c_10") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_10 (val);
		if ( !strcmp(norkmod, "hum_c_11") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_11 (val);
		if ( !strcmp(norkmod, "hum_c_12") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_12 (val);
		if ( !strcmp(norkmod, "hum_c_13") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hum_c_13 (val);
		if ( !strcmp(norkmod, "bqsb_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_bqsb_c (val);
		if ( !strcmp(norkmod, "gqsb_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_gqsb_c (val);
		if ( !strcmp(norkmod, "z0_over_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_z0_over_c (val);
		if ( !strcmp(norkmod, "so_wet_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_wet_c (val);
		if ( !strcmp(norkmod, "so_dry_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_so_dry_c (val);
		if ( !strcmp(norkmod, "e_drain_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_e_drain_c (val);
		if ( !strcmp(norkmod, "mx_drain_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_mx_drain_c (val);
		if ( !strcmp(norkmod, "min_drain_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_min_drain_c (val);
		if ( !strcmp(norkmod, "albnir_c") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_albnir_c (val);
		if ( !strcmp(norkmod, "eaumax") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_eaumax (val);
		if ( !strcmp(norkmod, "eaumin") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_eaumin (val);
		if ( !strcmp(norkmod, "hummax") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hummax (val);
		if ( !strcmp(norkmod, "hummin") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_hummin (val);
		if ( !strcmp(norkmod, "fluxsens") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_fluxsens (val);
		if ( !strcmp(norkmod, "fluxlat") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_fluxlat (val);
		if ( !strcmp(norkmod, "temp_sol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_temp_sol (val);
		if ( !strcmp(norkmod, "qsintveg") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_qsintveg (val);
		if ( !strcmp(norkmod, "ptn") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_ptn (val);
		if ( !strcmp(norkmod, "netrad") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_netrad (val);
		if ( !strcmp(norkmod, "evapnu") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_evapnu (val);
		if ( !strcmp(norkmod, "transpir") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_transpir (val);
		if ( !strcmp(norkmod, "bqsb_init") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_bqsb_init (val);
		if ( !strcmp(norkmod, "gqsb_init") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_gqsb_init (val);
		if ( !strcmp(norkmod, "h_c_1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_1 (val);
		if ( !strcmp(norkmod, "h_c_2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_2 (val);
		if ( !strcmp(norkmod, "h_c_3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_3 (val);
		if ( !strcmp(norkmod, "h_c_4") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_4 (val);
		if ( !strcmp(norkmod, "h_c_5") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_5 (val);
		if ( !strcmp(norkmod, "h_c_6") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_6 (val);
		if ( !strcmp(norkmod, "h_c_7") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_7 (val);
		if ( !strcmp(norkmod, "h_c_8") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_8 (val);
		if ( !strcmp(norkmod, "h_c_9") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_9 (val);
		if ( !strcmp(norkmod, "h_c_10") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_10 (val);
		if ( !strcmp(norkmod, "h_c_11") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_11 (val);
		if ( !strcmp(norkmod, "h_c_12") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_12 (val);
		if ( !strcmp(norkmod, "h_c_13") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_h_c_13 (val);
		if ( !strcmp(norkmod, "I_petAcoef") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_petAcoef (val);
		if ( !strcmp(norkmod, "I_peqAcoef") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_peqAcoef (val);
		if ( !strcmp(norkmod, "SE_routing") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_SE_routing (val);
		if ( !strcmp(norkmod, "S_fracnobio") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_fracnobio (val);
		if ( !strcmp(norkmod, "S_height") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_height (val);
		if ( !strcmp(norkmod, "S_vegetmax") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_vegetmax (val);
		if ( !strcmp(norkmod, "C_albcalc3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_C_albcalc3 (val);
	}
	else if (itraj==Yid_Tmodul)
	{
		if ( !strcmp(norkmod, "E_tempsol") || !strcmp(norkmod, "Y#A") || !strcmp(norkmod, "Y#C") )
		 YgradEQval_E_tempsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_emis_tempsol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_emis_tempsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_watercontent") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_watercontent (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel1 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel3 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel4") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel4 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel5") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel5 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel6") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel6 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel7") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel7 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel8") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel8 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel9") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel9 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel10") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel10 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel11") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel11 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel12") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel12 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel13") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel13 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_netrad") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_netrad (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_fluxsens") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_fluxsens (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_fluxlat") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_fluxlat (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_evapnu") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_evapnu (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_transpir") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_transpir (frompdt, topdt, val);
		if ( !strcmp(norkmod, "wind") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_wind (frompdt, topdt, val);
		if ( !strcmp(norkmod, "init_hydrolc2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_init_hydrolc2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_lskin") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_lskin (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_thermosoil") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_thermosoil (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_diaglev") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_diaglev (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_humlev") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_humlev (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_dz2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_dz2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_slowproc") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_slowproc (frompdt, topdt, val);
		if ( !strcmp(norkmod, "int_diaghum") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_int_diaghum (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_u") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_u (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_v") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_v (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_qair") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_qair (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_pb") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_pb (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_lwdown") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_lwdown (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_precip") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_precip (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_temp_air") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_temp_air (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_swdown") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_swdown (frompdt, topdt, val);
		if ( !strcmp(norkmod, "F_precip_snow") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_F_precip_snow (frompdt, topdt, val);
		if ( !strcmp(norkmod, "I_swnet") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_swnet (frompdt, topdt, val);
		if ( !strcmp(norkmod, "I_epot_air") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_epot_air (frompdt, topdt, val);
		if ( !strcmp(norkmod, "I_petBcoef") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_petBcoef (frompdt, topdt, val);
		if ( !strcmp(norkmod, "I_peqBcoef") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_I_peqBcoef (frompdt, topdt, val);
		if ( !strcmp(norkmod, "SE_rau") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_SE_rau (frompdt, topdt, val);
		if ( !strcmp(norkmod, "S_veget") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_veget (frompdt, topdt, val);
		if ( !strcmp(norkmod, "S_qsintm") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_qsintm (frompdt, topdt, val);
		if ( !strcmp(norkmod, "S_lai") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_S_lai (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_pre_aero") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_pre_aero (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_aero") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_aero (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_aero1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_aero1 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_qsatt") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_qsatt (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_snow") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_snow (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_bare") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_bare (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_inter") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_inter (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_pre_trans") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_pre_trans (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_pre_trans2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_pre_trans2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_trans") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_trans (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_comb_vbsum") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_comb_vbsum (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_comb_vb") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_comb_vb (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_comb_soil") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_comb_soil (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_comb_veg") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_comb_veg (frompdt, topdt, val);
		if ( !strcmp(norkmod, "D_comb_verif") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_D_comb_verif (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_dev_qsol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_dev_qsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_beg_qsol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_beg_qsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_beg_netrad") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_beg_netrad (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp1 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp3") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp3 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp4") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp4 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp_pt") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp_pt (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp_qsol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp_qsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp_epot") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp_epot (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_surftemp_qair") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_surftemp_qair (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux1 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_tslw") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_tslw (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_qsurf") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_qsurf (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_net") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_net (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_vefl") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_vefl (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_flta") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_flta (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_evapo") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_evapo (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_flux_corr") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_flux_corr (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_grad_qsat") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_grad_qsat (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_evap_veva") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_evap_veva (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_evap_trans") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_evap_trans (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_emis_planck") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_emis_planck (frompdt, topdt, val);
		if ( !strcmp(norkmod, "E_emis_rad") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_E_emis_rad (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_snow_i") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_snow_i (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_snow") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_snow (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_snow_melt_i") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_snow_melt_i (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_snow_melt") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_snow_melt (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_snow_age") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_snow_age (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_var") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_var (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_sum") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_sum (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_niv") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_niv (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_water") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_water (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_water2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_water2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_upd") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_upd (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_veg_cond") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_veg_cond (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_canop_init") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_canop_init (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_canop_interp") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_canop_interp (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_flx") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_flx (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_flxcorr") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_flxcorr (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_trans") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_trans (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_runoff") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_runoff (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dlock") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dlock (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_diff") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_diff (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dsp") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dsp (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_verif") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_verif (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_mean") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_mean (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dsp2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dsp2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_runofft") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_runofft (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dsg1") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dsg1 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dsg") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dsg (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_stress") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_stress (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_humrel") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_humrel (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_shum") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_shum (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_dryfrac") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_dryfrac (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_hdry") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_hdry (frompdt, topdt, val);
		if ( !strcmp(norkmod, "H_soil_rsol") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_H_soil_rsol (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_hum_wet") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_hum_wet (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_profile") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_profile (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_diag_stemp") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_diag_stemp (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_energy") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_energy (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_coef_soil") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_coef_soil (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_coef_soil2") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_coef_soil2 (frompdt, topdt, val);
		if ( !strcmp(norkmod, "T_coef_diff") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_T_coef_diff (frompdt, topdt, val);
		if ( !strcmp(norkmod, "C_z0_rug") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_C_z0_rug (frompdt, topdt, val);
		if ( !strcmp(norkmod, "C_albedo") || !strcmp(norkmod, "Y#A") )
		 YgradEQval_C_albedo (frompdt, topdt, val);
	}
}
int Yauto_call (int argc, char *argv[]) 
{
	 int codret=0; int all=0; double val;
	 if (1==0);
	 else if ( !strcmp(argv[0], "setepsi") || !strcmp(argv[0], "SETEPSI") 
					 ||!strcmp(argv[0], "setepsi_all") || !strcmp(argv[0], "SETEPSI_ALL"))
	 {
			 if (!strcmp(argv[0], "setepsi_all") || !strcmp(argv[0], "SETEPSI_ALL")){all=1; val=atof(argv[1]);} else val=atof(argv[2]);
			 if (!strcmp(argv[1], "emis_c") || all)
					 {Ysetepsi_emis_c(val);codret=1;}
			 if (!strcmp(argv[1], "rveg_c") || all)
					 {Ysetepsi_rveg_c(val);codret=1;}
			 if (!strcmp(argv[1], "z0_c") || all)
					 {Ysetepsi_z0_c(val);codret=1;}
			 if (!strcmp(argv[1], "so_cond_c") || all)
					 {Ysetepsi_so_cond_c(val);codret=1;}
			 if (!strcmp(argv[1], "so_capa_c") || all)
					 {Ysetepsi_so_capa_c(val);codret=1;}
			 if (!strcmp(argv[1], "albvis_c") || all)
					 {Ysetepsi_albvis_c(val);codret=1;}
	 }
	 else codret=0;
	 return(codret);
}

 int Yforward_space_SkjindexSEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSEi; ++Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 YSE_rau(Yi)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SkjindexSEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSEi; ++Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Ytbeta[0]=YG1_F_temp_air( Yi, YTemps-1);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YSE_rau(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_SE_rau, YNBI_SE_rau, YMAX_JAC_NBI, &YG1Y_SE_rau, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexSEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexSEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YSE_rau(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_SE_rau, YNBI_SE_rau, YMAX_JAC_NBI, &YG1Y_SE_rau, Yjac[0], Ytbeta);
	 YG1_F_temp_air( Yi, YTemps-1) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_SkjindexSEn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSEn; ++Yi)
{
	 YSE_routing(Yi)->forward();

}

	 return(0);
}

 int Ylinward_space_SkjindexSEn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSEn; ++Yi)
{
	 YSE_routing(Yi)->backward();

}

	 return(0);
}

 int Ybackward_space_SkjindexSEn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexSEn-1; Yi>=0; --Yi)
{
	 YSE_routing(Yi)->backward();

}

	 return(0);
}

 int Yforward_space_SkjindexIi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps);
	 YI_epot_air(Yi)->forward( Yting[0] );

}
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_I_epot_air( Yi, YTemps);
	 YI_petBcoef(Yi)->forward( Yting[0] );

}
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps);
	 YI_peqBcoef(Yi)->forward( Yting[0] );

}

	 return(0);
}

 int Ylinward_space_SkjindexIi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps);
	 Ytbeta[0]=YG1_F_temp_air( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_epot_air(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_I_epot_air, YNBI_I_epot_air, YMAX_JAC_NBI, &YG1Y_I_epot_air, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_I_epot_air( Yi, YTemps);
	 Ytbeta[0]=YG1_I_epot_air( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_petBcoef(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_I_petBcoef, YNBI_I_petBcoef, YMAX_JAC_NBI, &YG1Y_I_petBcoef, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexIi; ++Yi)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps);
	 Ytbeta[0]=YG1_F_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_peqBcoef(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_I_peqBcoef, YNBI_I_peqBcoef, YMAX_JAC_NBI, &YG1Y_I_peqBcoef, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexIi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexIi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_peqBcoef(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_I_peqBcoef, YNBI_I_peqBcoef, YMAX_JAC_NBI, &YG1Y_I_peqBcoef, Yjac[0], Ytbeta);
	 YG1_F_qair( Yi, YTemps) += Ytbeta[0];

}
for(Yi=YA1_SkjindexIi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_I_epot_air( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_petBcoef(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_I_petBcoef, YNBI_I_petBcoef, YMAX_JAC_NBI, &YG1Y_I_petBcoef, Yjac[0], Ytbeta);
	 YG1_I_epot_air( Yi, YTemps) += Ytbeta[0];

}
for(Yi=YA1_SkjindexIi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_epot_air(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_I_epot_air, YNBI_I_epot_air, YMAX_JAC_NBI, &YG1Y_I_epot_air, Yjac[0], Ytbeta);
	 YG1_F_temp_air( Yi, YTemps) += Ytbeta[0];

}

	 return(0);
}

 int Yforward_space_SkjindexIn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexIn; ++Yi)
{
	 YI_petAcoef(Yi)->forward();

}
for(Yi=0; Yi<YA1_SkjindexIn; ++Yi)
{
	 YI_peqAcoef(Yi)->forward();

}

	 return(0);
}

 int Ylinward_space_SkjindexIn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexIn; ++Yi)
{
	 YI_petAcoef(Yi)->backward();

}
for(Yi=0; Yi<YA1_SkjindexIn; ++Yi)
{
	 YI_peqAcoef(Yi)->backward();

}

	 return(0);
}

 int Ybackward_space_SkjindexIn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexIn-1; Yi>=0; --Yi)
{
	 YI_peqAcoef(Yi)->backward();

}
for(Yi=YA1_SkjindexIn-1; Yi>=0; --Yi)
{
	 YI_petAcoef(Yi)->backward();

}

	 return(0);
}

 int Yforward_space_SParam()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SParam; ++Yi)
{
	 Yting[0]=YS1_rsol_c( 0);
	 Yrsol_cste(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_so_wet_c( 0);
	 Yso_capa_wet(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_so_dry_c( 0);
	 Yso_capa_dry(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_min_drain_c( 0);
	 Ymin_drain(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_mx_drain_c( 0);
	 Ymax_drain(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_e_drain_c( 0);
	 Yexp_drain(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_so_capa_c( 0);
	 Yso_capa(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_so_cond_c( 0);
	 Yso_cond(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_dpu_c( 0);
	 Ydpu_cste1(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_mx_eau_c( 0);
	 Ymx_eau_eau(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_rveg_c( 0);
	 Yrveg_par(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_z0_c( 0);
	 Yz0_par(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_z0_over_c( 0);
	 Yz0_over(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_albvis_c( 0);
	 Yalbedovis(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_albnir_c( 0);
	 Yalbedonir(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_emis_c( 0);
	 Yemis_par(Yi)->forward( Yting[0] );

}
for(Yi=0; Yi<YA1_SParam; ++Yi)
{
	 Yting[0]=YS1_hum_c_1( 0);
	 Yhumr_c_1(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_2( 0);
	 Yhumr_c_2(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_3( 0);
	 Yhumr_c_3(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_4( 0);
	 Yhumr_c_4(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_5( 0);
	 Yhumr_c_5(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_6( 0);
	 Yhumr_c_6(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_7( 0);
	 Yhumr_c_7(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_8( 0);
	 Yhumr_c_8(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_9( 0);
	 Yhumr_c_9(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_10( 0);
	 Yhumr_c_10(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_11( 0);
	 Yhumr_c_11(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_12( 0);
	 Yhumr_c_12(Yi)->forward( Yting[0] );
	 Yting[0]=YS1_hum_c_13( 0);
	 Yhumr_c_13(Yi)->forward( Yting[0] );

}

	 return(0);
}

 int Ylinward_space_SParam()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SParam; ++Yi)
{
	 Yting[0]=YS1_rsol_c( 0);
	 Ytbeta[0]=YG1_rsol_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yrsol_cste(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_rsol_cste, YNBI_rsol_cste, YMAX_JAC_NBI, &YG1Y_rsol_cste, Yjac[0], Ytbeta);
	 Yting[0]=YS1_so_wet_c( 0);
	 Ytbeta[0]=YG1_so_wet_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa_wet(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_so_capa_wet, YNBI_so_capa_wet, YMAX_JAC_NBI, &YG1Y_so_capa_wet, Yjac[0], Ytbeta);
	 Yting[0]=YS1_so_dry_c( 0);
	 Ytbeta[0]=YG1_so_dry_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa_dry(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_so_capa_dry, YNBI_so_capa_dry, YMAX_JAC_NBI, &YG1Y_so_capa_dry, Yjac[0], Ytbeta);
	 Yting[0]=YS1_min_drain_c( 0);
	 Ytbeta[0]=YG1_min_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymin_drain(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_min_drain, YNBI_min_drain, YMAX_JAC_NBI, &YG1Y_min_drain, Yjac[0], Ytbeta);
	 Yting[0]=YS1_mx_drain_c( 0);
	 Ytbeta[0]=YG1_mx_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymax_drain(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_max_drain, YNBI_max_drain, YMAX_JAC_NBI, &YG1Y_max_drain, Yjac[0], Ytbeta);
	 Yting[0]=YS1_e_drain_c( 0);
	 Ytbeta[0]=YG1_e_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yexp_drain(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_exp_drain, YNBI_exp_drain, YMAX_JAC_NBI, &YG1Y_exp_drain, Yjac[0], Ytbeta);
	 Yting[0]=YS1_so_capa_c( 0);
	 Ytbeta[0]=YG1_so_capa_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_so_capa, YNBI_so_capa, YMAX_JAC_NBI, &YG1Y_so_capa, Yjac[0], Ytbeta);
	 Yting[0]=YS1_so_cond_c( 0);
	 Ytbeta[0]=YG1_so_cond_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_cond(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_so_cond, YNBI_so_cond, YMAX_JAC_NBI, &YG1Y_so_cond, Yjac[0], Ytbeta);
	 Yting[0]=YS1_dpu_c( 0);
	 Ytbeta[0]=YG1_dpu_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ydpu_cste1(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_dpu_cste1, YNBI_dpu_cste1, YMAX_JAC_NBI, &YG1Y_dpu_cste1, Yjac[0], Ytbeta);
	 Yting[0]=YS1_mx_eau_c( 0);
	 Ytbeta[0]=YG1_mx_eau_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymx_eau_eau(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_mx_eau_eau, YNBI_mx_eau_eau, YMAX_JAC_NBI, &YG1Y_mx_eau_eau, Yjac[0], Ytbeta);
	 Yting[0]=YS1_rveg_c( 0);
	 Ytbeta[0]=YG1_rveg_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yrveg_par(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_rveg_par, YNBI_rveg_par, YMAX_JAC_NBI, &YG1Y_rveg_par, Yjac[0], Ytbeta);
	 Yting[0]=YS1_z0_c( 0);
	 Ytbeta[0]=YG1_z0_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yz0_par(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_z0_par, YNBI_z0_par, YMAX_JAC_NBI, &YG1Y_z0_par, Yjac[0], Ytbeta);
	 Yting[0]=YS1_z0_over_c( 0);
	 Ytbeta[0]=YG1_z0_over_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yz0_over(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_z0_over, YNBI_z0_over, YMAX_JAC_NBI, &YG1Y_z0_over, Yjac[0], Ytbeta);
	 Yting[0]=YS1_albvis_c( 0);
	 Ytbeta[0]=YG1_albvis_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yalbedovis(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_albedovis, YNBI_albedovis, YMAX_JAC_NBI, &YG1Y_albedovis, Yjac[0], Ytbeta);
	 Yting[0]=YS1_albnir_c( 0);
	 Ytbeta[0]=YG1_albnir_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yalbedonir(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_albedonir, YNBI_albedonir, YMAX_JAC_NBI, &YG1Y_albedonir, Yjac[0], Ytbeta);
	 Yting[0]=YS1_emis_c( 0);
	 Ytbeta[0]=YG1_emis_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yemis_par(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_emis_par, YNBI_emis_par, YMAX_JAC_NBI, &YG1Y_emis_par, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SParam; ++Yi)
{
	 Yting[0]=YS1_hum_c_1( 0);
	 Ytbeta[0]=YG1_hum_c_1( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_1(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_1, YNBI_humr_c_1, YMAX_JAC_NBI, &YG1Y_humr_c_1, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_2( 0);
	 Ytbeta[0]=YG1_hum_c_2( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_2(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_2, YNBI_humr_c_2, YMAX_JAC_NBI, &YG1Y_humr_c_2, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_3( 0);
	 Ytbeta[0]=YG1_hum_c_3( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_3(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_3, YNBI_humr_c_3, YMAX_JAC_NBI, &YG1Y_humr_c_3, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_4( 0);
	 Ytbeta[0]=YG1_hum_c_4( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_4(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_4, YNBI_humr_c_4, YMAX_JAC_NBI, &YG1Y_humr_c_4, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_5( 0);
	 Ytbeta[0]=YG1_hum_c_5( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_5(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_5, YNBI_humr_c_5, YMAX_JAC_NBI, &YG1Y_humr_c_5, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_6( 0);
	 Ytbeta[0]=YG1_hum_c_6( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_6(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_6, YNBI_humr_c_6, YMAX_JAC_NBI, &YG1Y_humr_c_6, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_7( 0);
	 Ytbeta[0]=YG1_hum_c_7( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_7(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_7, YNBI_humr_c_7, YMAX_JAC_NBI, &YG1Y_humr_c_7, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_8( 0);
	 Ytbeta[0]=YG1_hum_c_8( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_8(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_8, YNBI_humr_c_8, YMAX_JAC_NBI, &YG1Y_humr_c_8, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_9( 0);
	 Ytbeta[0]=YG1_hum_c_9( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_9(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_9, YNBI_humr_c_9, YMAX_JAC_NBI, &YG1Y_humr_c_9, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_10( 0);
	 Ytbeta[0]=YG1_hum_c_10( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_10(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_10, YNBI_humr_c_10, YMAX_JAC_NBI, &YG1Y_humr_c_10, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_11( 0);
	 Ytbeta[0]=YG1_hum_c_11( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_11(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_11, YNBI_humr_c_11, YMAX_JAC_NBI, &YG1Y_humr_c_11, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_12( 0);
	 Ytbeta[0]=YG1_hum_c_12( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_12(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_12, YNBI_humr_c_12, YMAX_JAC_NBI, &YG1Y_humr_c_12, Yjac[0], Ytbeta);
	 Yting[0]=YS1_hum_c_13( 0);
	 Ytbeta[0]=YG1_hum_c_13( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_13(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_humr_c_13, YNBI_humr_c_13, YMAX_JAC_NBI, &YG1Y_humr_c_13, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SParam()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SParam-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_hum_c_13( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_13(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_13, YNBI_humr_c_13, YMAX_JAC_NBI, &YG1Y_humr_c_13, Yjac[0], Ytbeta);
	 YG1_hum_c_13( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_12( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_12(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_12, YNBI_humr_c_12, YMAX_JAC_NBI, &YG1Y_humr_c_12, Yjac[0], Ytbeta);
	 YG1_hum_c_12( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_11( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_11(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_11, YNBI_humr_c_11, YMAX_JAC_NBI, &YG1Y_humr_c_11, Yjac[0], Ytbeta);
	 YG1_hum_c_11( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_10( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_10(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_10, YNBI_humr_c_10, YMAX_JAC_NBI, &YG1Y_humr_c_10, Yjac[0], Ytbeta);
	 YG1_hum_c_10( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_9( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_9(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_9, YNBI_humr_c_9, YMAX_JAC_NBI, &YG1Y_humr_c_9, Yjac[0], Ytbeta);
	 YG1_hum_c_9( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_8( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_8(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_8, YNBI_humr_c_8, YMAX_JAC_NBI, &YG1Y_humr_c_8, Yjac[0], Ytbeta);
	 YG1_hum_c_8( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_7( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_7(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_7, YNBI_humr_c_7, YMAX_JAC_NBI, &YG1Y_humr_c_7, Yjac[0], Ytbeta);
	 YG1_hum_c_7( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_6( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_6(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_6, YNBI_humr_c_6, YMAX_JAC_NBI, &YG1Y_humr_c_6, Yjac[0], Ytbeta);
	 YG1_hum_c_6( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_5( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_5(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_5, YNBI_humr_c_5, YMAX_JAC_NBI, &YG1Y_humr_c_5, Yjac[0], Ytbeta);
	 YG1_hum_c_5( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_4( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_4(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_4, YNBI_humr_c_4, YMAX_JAC_NBI, &YG1Y_humr_c_4, Yjac[0], Ytbeta);
	 YG1_hum_c_4( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_3( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_3(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_3, YNBI_humr_c_3, YMAX_JAC_NBI, &YG1Y_humr_c_3, Yjac[0], Ytbeta);
	 YG1_hum_c_3( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_2( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_2(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_2, YNBI_humr_c_2, YMAX_JAC_NBI, &YG1Y_humr_c_2, Yjac[0], Ytbeta);
	 YG1_hum_c_2( 0) += Ytbeta[0];
	 Yting[0]=YS1_hum_c_1( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yhumr_c_1(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_humr_c_1, YNBI_humr_c_1, YMAX_JAC_NBI, &YG1Y_humr_c_1, Yjac[0], Ytbeta);
	 YG1_hum_c_1( 0) += Ytbeta[0];

}
for(Yi=YA1_SParam-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_emis_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yemis_par(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_emis_par, YNBI_emis_par, YMAX_JAC_NBI, &YG1Y_emis_par, Yjac[0], Ytbeta);
	 YG1_emis_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_albnir_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yalbedonir(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_albedonir, YNBI_albedonir, YMAX_JAC_NBI, &YG1Y_albedonir, Yjac[0], Ytbeta);
	 YG1_albnir_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_albvis_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yalbedovis(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_albedovis, YNBI_albedovis, YMAX_JAC_NBI, &YG1Y_albedovis, Yjac[0], Ytbeta);
	 YG1_albvis_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_z0_over_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yz0_over(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_z0_over, YNBI_z0_over, YMAX_JAC_NBI, &YG1Y_z0_over, Yjac[0], Ytbeta);
	 YG1_z0_over_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_z0_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yz0_par(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_z0_par, YNBI_z0_par, YMAX_JAC_NBI, &YG1Y_z0_par, Yjac[0], Ytbeta);
	 YG1_z0_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_rveg_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yrveg_par(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_rveg_par, YNBI_rveg_par, YMAX_JAC_NBI, &YG1Y_rveg_par, Yjac[0], Ytbeta);
	 YG1_rveg_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_mx_eau_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymx_eau_eau(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_mx_eau_eau, YNBI_mx_eau_eau, YMAX_JAC_NBI, &YG1Y_mx_eau_eau, Yjac[0], Ytbeta);
	 YG1_mx_eau_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_dpu_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ydpu_cste1(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_dpu_cste1, YNBI_dpu_cste1, YMAX_JAC_NBI, &YG1Y_dpu_cste1, Yjac[0], Ytbeta);
	 YG1_dpu_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_so_cond_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_cond(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_so_cond, YNBI_so_cond, YMAX_JAC_NBI, &YG1Y_so_cond, Yjac[0], Ytbeta);
	 YG1_so_cond_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_so_capa_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_so_capa, YNBI_so_capa, YMAX_JAC_NBI, &YG1Y_so_capa, Yjac[0], Ytbeta);
	 YG1_so_capa_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_e_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yexp_drain(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_exp_drain, YNBI_exp_drain, YMAX_JAC_NBI, &YG1Y_exp_drain, Yjac[0], Ytbeta);
	 YG1_e_drain_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_mx_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymax_drain(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_max_drain, YNBI_max_drain, YMAX_JAC_NBI, &YG1Y_max_drain, Yjac[0], Ytbeta);
	 YG1_mx_drain_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_min_drain_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ymin_drain(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_min_drain, YNBI_min_drain, YMAX_JAC_NBI, &YG1Y_min_drain, Yjac[0], Ytbeta);
	 YG1_min_drain_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_so_dry_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa_dry(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_so_capa_dry, YNBI_so_capa_dry, YMAX_JAC_NBI, &YG1Y_so_capa_dry, Yjac[0], Ytbeta);
	 YG1_so_dry_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_so_wet_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yso_capa_wet(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_so_capa_wet, YNBI_so_capa_wet, YMAX_JAC_NBI, &YG1Y_so_capa_wet, Yjac[0], Ytbeta);
	 YG1_so_wet_c( 0) += Ytbeta[0];
	 Yting[0]=YS1_rsol_c( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yrsol_cste(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_rsol_cste, YNBI_rsol_cste, YMAX_JAC_NBI, &YG1Y_rsol_cste, Yjac[0], Ytbeta);
	 YG1_rsol_c( 0) += Ytbeta[0];

}

	 return(0);
}

 int Yforward_space_Skjindexn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Skjindexn; ++Yi)
{
	 Yting[0]=YS1_int_lskin( Yi, YTemps-1);
	 Yint_lskin(Yi)->forward( Yting[0] );

}

	 return(0);
}

 int Ylinward_space_Skjindexn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Skjindexn; ++Yi)
{
	 Yting[0]=YS1_int_lskin( Yi, YTemps-1);
	 Ytbeta[0]=YG1_int_lskin( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yint_lskin(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_int_lskin, YNBI_int_lskin, YMAX_JAC_NBI, &YG1Y_int_lskin, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Skjindexn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Skjindexn-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_int_lskin( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yint_lskin(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_int_lskin, YNBI_int_lskin, YMAX_JAC_NBI, &YG1Y_int_lskin, Yjac[0], Ytbeta);
	 YG1_int_lskin( Yi, YTemps-1) += Ytbeta[0];

}

	 return(0);
}

 int Yforward_space_SkjindexW()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexW; ++Yi)
{
	 Yting[0]=YS1_F_u( Yi, YTemps);
	 Yting[1]=YS1_F_v( Yi, YTemps);
	 Ywind(Yi)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SkjindexW()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexW; ++Yi)
{
	 Yting[0]=YS1_F_u( Yi, YTemps);
	 Yting[1]=YS1_F_v( Yi, YTemps);
	 Ytbeta[0]=YG1_F_u( Yi, YTemps);
	 Ytbeta[1]=YG1_F_v( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ywind(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_wind, YNBI_wind, YMAX_JAC_NBI, &YG1Y_wind, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexW()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexW-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_F_u( Yi, YTemps);
	 Yting[1]=YS1_F_v( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 Ywind(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_wind, YNBI_wind, YMAX_JAC_NBI, &YG1Y_wind, Yjac[0], Ytbeta);
	 YG1_F_u( Yi, YTemps) += Ytbeta[0];
	 YG1_F_v( Yi, YTemps) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_Sngrnd_init()
{
	 YA1=7; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Sngrnd_init; ++Yi)
{
	 Yting[0]=YS1_int_lskin( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( Yi, YTemps-1);
	 Yting[2]=YS2_int_thermosoil( Yi, YTemps-1);
	 Yting[3]=YS3_int_thermosoil( Yi, YTemps-1);
	 Yting[4]=YS4_int_thermosoil( Yi, YTemps-1);
	 Yint_thermosoil(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}

	 return(0);
}

 int Ylinward_space_Sngrnd_init()
{
	 YA1=7; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Sngrnd_init; ++Yi)
{
	 Yting[0]=YS1_int_lskin( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( Yi, YTemps-1);
	 Yting[2]=YS2_int_thermosoil( Yi, YTemps-1);
	 Yting[3]=YS3_int_thermosoil( Yi, YTemps-1);
	 Yting[4]=YS4_int_thermosoil( Yi, YTemps-1);
	 Ytbeta[0]=YG1_int_lskin( 0, YTemps);
	 Ytbeta[1]=YG1_int_thermosoil( Yi, YTemps-1);
	 Ytbeta[2]=YG2_int_thermosoil( Yi, YTemps-1);
	 Ytbeta[3]=YG3_int_thermosoil( Yi, YTemps-1);
	 Ytbeta[4]=YG4_int_thermosoil( Yi, YTemps-1);
	 memset(Yjac, 0, 88*sizeof(double));
	 Yint_thermosoil(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_int_thermosoil, YNBI_int_thermosoil, YMAX_JAC_NBI, &YG1Y_int_thermosoil, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Sngrnd_init()
{
	 YA1=7; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Sngrnd_init-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_int_lskin( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( Yi, YTemps-1);
	 Yting[2]=YS2_int_thermosoil( Yi, YTemps-1);
	 Yting[3]=YS3_int_thermosoil( Yi, YTemps-1);
	 Yting[4]=YS4_int_thermosoil( Yi, YTemps-1);
	 memset(Yjac, 0, 88*sizeof(double));
	 Yint_thermosoil(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_int_thermosoil, YNBI_int_thermosoil, YMAX_JAC_NBI, &YG1Y_int_thermosoil, Yjac[0], Ytbeta);
	 YG1_int_lskin( 0, YTemps) += Ytbeta[0];
	 YG1_int_thermosoil( Yi, YTemps-1) += Ytbeta[1];
	 YG2_int_thermosoil( Yi, YTemps-1) += Ytbeta[2];
	 YG3_int_thermosoil( Yi, YTemps-1) += Ytbeta[3];
	 YG4_int_thermosoil( Yi, YTemps-1) += Ytbeta[4];

}

	 return(0);
}

 int Yforward_space_Snbdl_init()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Snbdl_init; ++Yi)
for(Yj=0; Yj<YA2_Snbdl_init; ++Yj)
{
	 Yting[0]=YS1_dpu_cste1( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_slowproc( Yi, Yj, YTemps-1);
	 Yint_slowproc(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}

	 return(0);
}

 int Ylinward_space_Snbdl_init()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Snbdl_init; ++Yi)
for(Yj=0; Yj<YA2_Snbdl_init; ++Yj)
{
	 Yting[0]=YS1_dpu_cste1( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_slowproc( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_dpu_cste1( Yi);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG2_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG3_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_int_slowproc( Yi, Yj-1, YTemps);
	 Ytbeta[4]=YG1_int_slowproc( Yi, Yj, YTemps-1);
	 Ytbeta[5]=YG2_int_slowproc( Yi, Yj, YTemps-1);
	 Ytbeta[6]=YG3_int_slowproc( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_slowproc(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_int_slowproc, YNBI_int_slowproc, YMAX_JAC_NBI, &YG1Y_int_slowproc, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Snbdl_init()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Snbdl_init-1; Yi>=0; --Yi)
for(Yj=YA2_Snbdl_init-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_dpu_cste1( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_slowproc( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_slowproc( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_slowproc( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_slowproc(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_int_slowproc, YNBI_int_slowproc, YMAX_JAC_NBI, &YG1Y_int_slowproc, Yjac[0], Ytbeta);
	 YG1_dpu_cste1( Yi) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_int_slowproc( Yi, Yj-1, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_int_slowproc( Yi, Yj-1, YTemps) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_int_slowproc( Yi, Yj-1, YTemps) += Ytbeta[3];
	 YG1_int_slowproc( Yi, Yj, YTemps-1) += Ytbeta[4];
	 YG2_int_slowproc( Yi, Yj, YTemps-1) += Ytbeta[5];
	 YG3_int_slowproc( Yi, Yj, YTemps-1) += Ytbeta[6];

}

	 return(0);
}

 int Yforward_space_Snbdl_hum()
{
	 YA1=11; YA2=1; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Snbdl_hum; ++Yj)
for(Yi=0; Yi<YA1_Snbdl_hum; ++Yi)
{
	 Yting[0]=YS1_int_slowproc( 0, 0, YTemps);
	 Yting[1]=YS1_int_slowproc( 0, 1, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, 2, YTemps);
	 Yting[3]=YS1_int_slowproc( 0, 3, YTemps);
	 Yting[4]=YS1_int_slowproc( 0, 4, YTemps);
	 Yting[5]=YS1_int_slowproc( 0, 5, YTemps);
	 Yting[6]=YS1_int_slowproc( 0, 6, YTemps);
	 Yting[7]=YS1_int_slowproc( 0, 7, YTemps);
	 Yting[8]=YS1_int_slowproc( 0, 8, YTemps);
	 Yting[9]=YS1_int_slowproc( 0, 9, YTemps);
	 Yting[10]=YS1_int_slowproc( 0, 10, YTemps);
	 Yint_diaghum(Yi, Yj)->forward();

}

	 return(0);
}

 int Ylinward_space_Snbdl_hum()
{
	 YA1=11; YA2=1; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Snbdl_hum; ++Yj)
for(Yi=0; Yi<YA1_Snbdl_hum; ++Yi)
{
	 Yting[0]=YS1_int_slowproc( 0, 0, YTemps);
	 Yting[1]=YS1_int_slowproc( 0, 1, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, 2, YTemps);
	 Yting[3]=YS1_int_slowproc( 0, 3, YTemps);
	 Yting[4]=YS1_int_slowproc( 0, 4, YTemps);
	 Yting[5]=YS1_int_slowproc( 0, 5, YTemps);
	 Yting[6]=YS1_int_slowproc( 0, 6, YTemps);
	 Yting[7]=YS1_int_slowproc( 0, 7, YTemps);
	 Yting[8]=YS1_int_slowproc( 0, 8, YTemps);
	 Yting[9]=YS1_int_slowproc( 0, 9, YTemps);
	 Yting[10]=YS1_int_slowproc( 0, 10, YTemps);
	 Ytbeta[0]=YG1_int_slowproc( 0, 0, YTemps);
	 Ytbeta[1]=YG1_int_slowproc( 0, 1, YTemps);
	 Ytbeta[2]=YG1_int_slowproc( 0, 2, YTemps);
	 Ytbeta[3]=YG1_int_slowproc( 0, 3, YTemps);
	 Ytbeta[4]=YG1_int_slowproc( 0, 4, YTemps);
	 Ytbeta[5]=YG1_int_slowproc( 0, 5, YTemps);
	 Ytbeta[6]=YG1_int_slowproc( 0, 6, YTemps);
	 Ytbeta[7]=YG1_int_slowproc( 0, 7, YTemps);
	 Ytbeta[8]=YG1_int_slowproc( 0, 8, YTemps);
	 Ytbeta[9]=YG1_int_slowproc( 0, 9, YTemps);
	 Ytbeta[10]=YG1_int_slowproc( 0, 10, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yint_diaghum(Yi, Yj)->backward();
	 Yvsmat (YNBS_int_diaghum, YNBI_int_diaghum, YMAX_JAC_NBI, &YG1Y_int_diaghum, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Snbdl_hum()
{
	 YA1=11; YA2=1; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=YA2_Snbdl_hum-1; Yj>=0; --Yj)
for(Yi=YA1_Snbdl_hum-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_int_slowproc( 0, 0, YTemps);
	 Yting[1]=YS1_int_slowproc( 0, 1, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, 2, YTemps);
	 Yting[3]=YS1_int_slowproc( 0, 3, YTemps);
	 Yting[4]=YS1_int_slowproc( 0, 4, YTemps);
	 Yting[5]=YS1_int_slowproc( 0, 5, YTemps);
	 Yting[6]=YS1_int_slowproc( 0, 6, YTemps);
	 Yting[7]=YS1_int_slowproc( 0, 7, YTemps);
	 Yting[8]=YS1_int_slowproc( 0, 8, YTemps);
	 Yting[9]=YS1_int_slowproc( 0, 9, YTemps);
	 Yting[10]=YS1_int_slowproc( 0, 10, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 Yint_diaghum(Yi, Yj)->backward();
	 Yvsmatt (YNBS_int_diaghum, YNBI_int_diaghum, YMAX_JAC_NBI, &YG1Y_int_diaghum, Yjac[0], Ytbeta);
	 YG1_int_slowproc( 0, 0, YTemps) += Ytbeta[0];
	 YG1_int_slowproc( 0, 1, YTemps) += Ytbeta[1];
	 YG1_int_slowproc( 0, 2, YTemps) += Ytbeta[2];
	 YG1_int_slowproc( 0, 3, YTemps) += Ytbeta[3];
	 YG1_int_slowproc( 0, 4, YTemps) += Ytbeta[4];
	 YG1_int_slowproc( 0, 5, YTemps) += Ytbeta[5];
	 YG1_int_slowproc( 0, 6, YTemps) += Ytbeta[6];
	 YG1_int_slowproc( 0, 7, YTemps) += Ytbeta[7];
	 YG1_int_slowproc( 0, 8, YTemps) += Ytbeta[8];
	 YG1_int_slowproc( 0, 9, YTemps) += Ytbeta[9];
	 YG1_int_slowproc( 0, 10, YTemps) += Ytbeta[10];

}

	 return(0);
}

 int Yforward_space_Sngrnd_22()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Sngrnd_22; ++Yi)
for(Yj=0; Yj<YA2_Sngrnd_22; ++Yj)
{
	 Yting[0]=YS1_int_thermosoil( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( 1, YTemps);
	 Yting[2]=YS1_int_thermosoil( 2, YTemps);
	 Yting[3]=YS1_int_thermosoil( 3, YTemps);
	 Yting[4]=YS1_int_thermosoil( 4, YTemps);
	 Yting[5]=YS1_int_thermosoil( 5, YTemps);
	 Yting[6]=YS1_int_thermosoil( 6, YTemps);
	 Yting[7]=YS2_int_thermosoil( 0, YTemps);
	 Yting[8]=YS2_int_thermosoil( 1, YTemps);
	 Yting[9]=YS2_int_thermosoil( 2, YTemps);
	 Yting[10]=YS2_int_thermosoil( 3, YTemps);
	 Yting[11]=YS2_int_thermosoil( 4, YTemps);
	 Yting[12]=YS2_int_thermosoil( 5, YTemps);
	 Yting[13]=YS2_int_thermosoil( 6, YTemps);
	 Yting[14]=YS3_int_thermosoil( 0, YTemps);
	 Yting[15]=YS3_int_thermosoil( 1, YTemps);
	 Yting[16]=YS3_int_thermosoil( 2, YTemps);
	 Yting[17]=YS3_int_thermosoil( 3, YTemps);
	 Yting[18]=YS3_int_thermosoil( 4, YTemps);
	 Yting[19]=YS3_int_thermosoil( 5, YTemps);
	 Yting[20]=YS3_int_thermosoil( 6, YTemps);
	 Yint_dz2(Yi, Yj)->forward();

}

	 return(0);
}

 int Ylinward_space_Sngrnd_22()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Sngrnd_22; ++Yi)
for(Yj=0; Yj<YA2_Sngrnd_22; ++Yj)
{
	 Yting[0]=YS1_int_thermosoil( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( 1, YTemps);
	 Yting[2]=YS1_int_thermosoil( 2, YTemps);
	 Yting[3]=YS1_int_thermosoil( 3, YTemps);
	 Yting[4]=YS1_int_thermosoil( 4, YTemps);
	 Yting[5]=YS1_int_thermosoil( 5, YTemps);
	 Yting[6]=YS1_int_thermosoil( 6, YTemps);
	 Yting[7]=YS2_int_thermosoil( 0, YTemps);
	 Yting[8]=YS2_int_thermosoil( 1, YTemps);
	 Yting[9]=YS2_int_thermosoil( 2, YTemps);
	 Yting[10]=YS2_int_thermosoil( 3, YTemps);
	 Yting[11]=YS2_int_thermosoil( 4, YTemps);
	 Yting[12]=YS2_int_thermosoil( 5, YTemps);
	 Yting[13]=YS2_int_thermosoil( 6, YTemps);
	 Yting[14]=YS3_int_thermosoil( 0, YTemps);
	 Yting[15]=YS3_int_thermosoil( 1, YTemps);
	 Yting[16]=YS3_int_thermosoil( 2, YTemps);
	 Yting[17]=YS3_int_thermosoil( 3, YTemps);
	 Yting[18]=YS3_int_thermosoil( 4, YTemps);
	 Yting[19]=YS3_int_thermosoil( 5, YTemps);
	 Yting[20]=YS3_int_thermosoil( 6, YTemps);
	 Ytbeta[0]=YG1_int_thermosoil( 0, YTemps);
	 Ytbeta[1]=YG1_int_thermosoil( 1, YTemps);
	 Ytbeta[2]=YG1_int_thermosoil( 2, YTemps);
	 Ytbeta[3]=YG1_int_thermosoil( 3, YTemps);
	 Ytbeta[4]=YG1_int_thermosoil( 4, YTemps);
	 Ytbeta[5]=YG1_int_thermosoil( 5, YTemps);
	 Ytbeta[6]=YG1_int_thermosoil( 6, YTemps);
	 Ytbeta[7]=YG2_int_thermosoil( 0, YTemps);
	 Ytbeta[8]=YG2_int_thermosoil( 1, YTemps);
	 Ytbeta[9]=YG2_int_thermosoil( 2, YTemps);
	 Ytbeta[10]=YG2_int_thermosoil( 3, YTemps);
	 Ytbeta[11]=YG2_int_thermosoil( 4, YTemps);
	 Ytbeta[12]=YG2_int_thermosoil( 5, YTemps);
	 Ytbeta[13]=YG2_int_thermosoil( 6, YTemps);
	 Ytbeta[14]=YG3_int_thermosoil( 0, YTemps);
	 Ytbeta[15]=YG3_int_thermosoil( 1, YTemps);
	 Ytbeta[16]=YG3_int_thermosoil( 2, YTemps);
	 Ytbeta[17]=YG3_int_thermosoil( 3, YTemps);
	 Ytbeta[18]=YG3_int_thermosoil( 4, YTemps);
	 Ytbeta[19]=YG3_int_thermosoil( 5, YTemps);
	 Ytbeta[20]=YG3_int_thermosoil( 6, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_dz2(Yi, Yj)->backward();
	 Yvsmat (YNBS_int_dz2, YNBI_int_dz2, YMAX_JAC_NBI, &YG1Y_int_dz2, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Sngrnd_22()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Sngrnd_22-1; Yi>=0; --Yi)
for(Yj=YA2_Sngrnd_22-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_int_thermosoil( 0, YTemps);
	 Yting[1]=YS1_int_thermosoil( 1, YTemps);
	 Yting[2]=YS1_int_thermosoil( 2, YTemps);
	 Yting[3]=YS1_int_thermosoil( 3, YTemps);
	 Yting[4]=YS1_int_thermosoil( 4, YTemps);
	 Yting[5]=YS1_int_thermosoil( 5, YTemps);
	 Yting[6]=YS1_int_thermosoil( 6, YTemps);
	 Yting[7]=YS2_int_thermosoil( 0, YTemps);
	 Yting[8]=YS2_int_thermosoil( 1, YTemps);
	 Yting[9]=YS2_int_thermosoil( 2, YTemps);
	 Yting[10]=YS2_int_thermosoil( 3, YTemps);
	 Yting[11]=YS2_int_thermosoil( 4, YTemps);
	 Yting[12]=YS2_int_thermosoil( 5, YTemps);
	 Yting[13]=YS2_int_thermosoil( 6, YTemps);
	 Yting[14]=YS3_int_thermosoil( 0, YTemps);
	 Yting[15]=YS3_int_thermosoil( 1, YTemps);
	 Yting[16]=YS3_int_thermosoil( 2, YTemps);
	 Yting[17]=YS3_int_thermosoil( 3, YTemps);
	 Yting[18]=YS3_int_thermosoil( 4, YTemps);
	 Yting[19]=YS3_int_thermosoil( 5, YTemps);
	 Yting[20]=YS3_int_thermosoil( 6, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_dz2(Yi, Yj)->backward();
	 Yvsmatt (YNBS_int_dz2, YNBI_int_dz2, YMAX_JAC_NBI, &YG1Y_int_dz2, Yjac[0], Ytbeta);
	 YG1_int_thermosoil( 0, YTemps) += Ytbeta[0];
	 YG1_int_thermosoil( 1, YTemps) += Ytbeta[1];
	 YG1_int_thermosoil( 2, YTemps) += Ytbeta[2];
	 YG1_int_thermosoil( 3, YTemps) += Ytbeta[3];
	 YG1_int_thermosoil( 4, YTemps) += Ytbeta[4];
	 YG1_int_thermosoil( 5, YTemps) += Ytbeta[5];
	 YG1_int_thermosoil( 6, YTemps) += Ytbeta[6];
	 YG2_int_thermosoil( 0, YTemps) += Ytbeta[7];
	 YG2_int_thermosoil( 1, YTemps) += Ytbeta[8];
	 YG2_int_thermosoil( 2, YTemps) += Ytbeta[9];
	 YG2_int_thermosoil( 3, YTemps) += Ytbeta[10];
	 YG2_int_thermosoil( 4, YTemps) += Ytbeta[11];
	 YG2_int_thermosoil( 5, YTemps) += Ytbeta[12];
	 YG2_int_thermosoil( 6, YTemps) += Ytbeta[13];
	 YG3_int_thermosoil( 0, YTemps) += Ytbeta[14];
	 YG3_int_thermosoil( 1, YTemps) += Ytbeta[15];
	 YG3_int_thermosoil( 2, YTemps) += Ytbeta[16];
	 YG3_int_thermosoil( 3, YTemps) += Ytbeta[17];
	 YG3_int_thermosoil( 4, YTemps) += Ytbeta[18];
	 YG3_int_thermosoil( 5, YTemps) += Ytbeta[19];
	 YG3_int_thermosoil( 6, YTemps) += Ytbeta[20];

}

	 return(0);
}

 int Yforward_space_Sn2_init()
{
	 YA1=7; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Sn2_init; ++Yj)
for(Yi=0; Yi<YA1_Sn2_init; ++Yi)
{
	 Yting[0]=YS2_int_thermosoil( Yi, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_diaglev( Yi-1, Yj, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( 0, Yj-1, YTemps);
	 Yting[4]=YS1_int_diaglev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_diaglev( Yi, Yj, YTemps-1);
	 Yint_diaglev(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_Sn2_init()
{
	 YA1=7; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Sn2_init; ++Yj)
for(Yi=0; Yi<YA1_Sn2_init; ++Yi)
{
	 Yting[0]=YS2_int_thermosoil( Yi, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_diaglev( Yi-1, Yj, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( 0, Yj-1, YTemps);
	 Yting[4]=YS1_int_diaglev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_diaglev( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG2_int_thermosoil( Yi, YTemps);
	 if (1==0 || Yi-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG2_int_diaglev( Yi-1, Yj, YTemps);
	 Ytbeta[2]=YG1_int_slowproc( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_int_slowproc( 0, Yj-1, YTemps);
	 Ytbeta[4]=YG1_int_diaglev( Yi, Yj, YTemps-1);
	 Ytbeta[5]=YG2_int_diaglev( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 Yint_diaglev(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_int_diaglev, YNBI_int_diaglev, YMAX_JAC_NBI, &YG1Y_int_diaglev, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Sn2_init()
{
	 YA1=7; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=YA2_Sn2_init-1; Yj>=0; --Yj)
for(Yi=YA1_Sn2_init-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_int_thermosoil( Yi, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_diaglev( Yi-1, Yj, YTemps);
	 Yting[2]=YS1_int_slowproc( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_int_slowproc( 0, Yj-1, YTemps);
	 Yting[4]=YS1_int_diaglev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_diaglev( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 Yint_diaglev(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_int_diaglev, YNBI_int_diaglev, YMAX_JAC_NBI, &YG1Y_int_diaglev, Yjac[0], Ytbeta);
	 YG2_int_thermosoil( Yi, YTemps) += Ytbeta[0];
	 if (1==0 || Yi-1<0){} 
	 else 
	 YG2_int_diaglev( Yi-1, Yj, YTemps) += Ytbeta[1];
	 YG1_int_slowproc( 0, Yj, YTemps) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_int_slowproc( 0, Yj-1, YTemps) += Ytbeta[3];
	 YG1_int_diaglev( Yi, Yj, YTemps-1) += Ytbeta[4];
	 YG2_int_diaglev( Yi, Yj, YTemps-1) += Ytbeta[5];

}

	 return(0);
}

 int Yforward_space_Sn1_init()
{
	 YA1=11; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Sn1_init; ++Yj)
for(Yi=0; Yi<YA1_Sn1_init; ++Yi)
{
	 Yting[0]=YS2_int_dz2( 0, Yj, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_humlev( Yi-1, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_humlev( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_int_diaghum( Yi, 0, YTemps);
	 Yting[4]=YS1_int_humlev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_humlev( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_humlev( Yi, Yj, YTemps-1);
	 Yint_humlev(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}

	 return(0);
}

 int Ylinward_space_Sn1_init()
{
	 YA1=11; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=0; Yj<YA2_Sn1_init; ++Yj)
for(Yi=0; Yi<YA1_Sn1_init; ++Yi)
{
	 Yting[0]=YS2_int_dz2( 0, Yj, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_humlev( Yi-1, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_humlev( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_int_diaghum( Yi, 0, YTemps);
	 Yting[4]=YS1_int_humlev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_humlev( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_humlev( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG2_int_dz2( 0, Yj, YTemps);
	 if (1==0 || Yi-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG2_int_humlev( Yi-1, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG3_int_humlev( Yi, Yj-1, YTemps);
	 Ytbeta[3]=YG1_int_diaghum( Yi, 0, YTemps);
	 Ytbeta[4]=YG1_int_humlev( Yi, Yj, YTemps-1);
	 Ytbeta[5]=YG2_int_humlev( Yi, Yj, YTemps-1);
	 Ytbeta[6]=YG3_int_humlev( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_humlev(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_int_humlev, YNBI_int_humlev, YMAX_JAC_NBI, &YG1Y_int_humlev, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Sn1_init()
{
	 YA1=11; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yj=YA2_Sn1_init-1; Yj>=0; --Yj)
for(Yi=YA1_Sn1_init-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_int_dz2( 0, Yj, YTemps);
	 if (1==0 || Yi-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_int_humlev( Yi-1, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_int_humlev( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_int_diaghum( Yi, 0, YTemps);
	 Yting[4]=YS1_int_humlev( Yi, Yj, YTemps-1);
	 Yting[5]=YS2_int_humlev( Yi, Yj, YTemps-1);
	 Yting[6]=YS3_int_humlev( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yint_humlev(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_int_humlev, YNBI_int_humlev, YMAX_JAC_NBI, &YG1Y_int_humlev, Yjac[0], Ytbeta);
	 YG2_int_dz2( 0, Yj, YTemps) += Ytbeta[0];
	 if (1==0 || Yi-1<0){} 
	 else 
	 YG2_int_humlev( Yi-1, Yj, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_int_humlev( Yi, Yj-1, YTemps) += Ytbeta[2];
	 YG1_int_diaghum( Yi, 0, YTemps) += Ytbeta[3];
	 YG1_int_humlev( Yi, Yj, YTemps-1) += Ytbeta[4];
	 YG2_int_humlev( Yi, Yj, YTemps-1) += Ytbeta[5];
	 YG3_int_humlev( Yi, Yj, YTemps-1) += Ytbeta[6];

}

	 return(0);
}

 int Yforward_space_SkjindexSn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSn; ++Yi)
{
	 YS_fracnobio(Yi)->forward();

}

	 return(0);
}

 int Ylinward_space_SkjindexSn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexSn; ++Yi)
{
	 YS_fracnobio(Yi)->backward();

}

	 return(0);
}

 int Ybackward_space_SkjindexSn()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexSn-1; Yi>=0; --Yi)
{
	 YS_fracnobio(Yi)->backward();

}

	 return(0);
}

 int Yforward_space_SnvmSn()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmSn; ++Yi)
for(Yj=0; Yj<YA2_SnvmSn; ++Yj)
{
	 YS_height(Yi, Yj)->forward();

}
for(Yi=0; Yi<YA1_SnvmSn; ++Yi)
for(Yj=0; Yj<YA2_SnvmSn; ++Yj)
{
	 YS_vegetmax(Yi, Yj)->forward();

}

	 return(0);
}

 int Ylinward_space_SnvmSn()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmSn; ++Yi)
for(Yj=0; Yj<YA2_SnvmSn; ++Yj)
{
	 YS_height(Yi, Yj)->backward();

}
for(Yi=0; Yi<YA1_SnvmSn; ++Yi)
for(Yj=0; Yj<YA2_SnvmSn; ++Yj)
{
	 YS_vegetmax(Yi, Yj)->backward();

}

	 return(0);
}

 int Ybackward_space_SnvmSn()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmSn-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmSn-1; Yj>=0; --Yj)
{
	 YS_vegetmax(Yi, Yj)->backward();

}
for(Yi=YA1_SnvmSn-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmSn-1; Yj>=0; --Yj)
{
	 YS_height(Yi, Yj)->backward();

}

	 return(0);
}

 int Yforward_space_SnvmSi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=0; Yj<YA2_SnvmSi; ++Yj)
{
	 Yting[0]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_T_diag_stemp( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_diag_stemp( Yi, 1, YTemps-1);
	 Yting[3]=YS1_T_diag_stemp( Yi, 2, YTemps-1);
	 Yting[4]=YS1_T_diag_stemp( Yi, 3, YTemps-1);
	 Yting[5]=YS1_T_diag_stemp( Yi, 4, YTemps-1);
	 Yting[6]=YS1_T_diag_stemp( Yi, 5, YTemps-1);
	 Yting[7]=YS1_T_diag_stemp( Yi, 6, YTemps-1);
	 Yting[8]=YS1_T_diag_stemp( Yi, 7, YTemps-1);
	 Yting[9]=YS1_T_diag_stemp( Yi, 8, YTemps-1);
	 Yting[10]=YS1_T_diag_stemp( Yi, 9, YTemps-1);
	 Yting[11]=YS1_T_diag_stemp( Yi, 10, YTemps-1);
	 Yting[12]=YS2_int_slowproc( Yi, 10, YTemps);
	 Yting[13]=YS1_temp_sol( Yi);
	 YS_lai(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13] );

}
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=YA2_SnvmSi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_vegetmax( Yi, Yj);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SnvmSi-1)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_S_veget( Yi, Yj+1, YTemps);
	 YS_veget(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=0; Yj<YA2_SnvmSi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 YS_qsintm(Yi, Yj)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SnvmSi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=0; Yj<YA2_SnvmSi; ++Yj)
{
	 Yting[0]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_T_diag_stemp( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_diag_stemp( Yi, 1, YTemps-1);
	 Yting[3]=YS1_T_diag_stemp( Yi, 2, YTemps-1);
	 Yting[4]=YS1_T_diag_stemp( Yi, 3, YTemps-1);
	 Yting[5]=YS1_T_diag_stemp( Yi, 4, YTemps-1);
	 Yting[6]=YS1_T_diag_stemp( Yi, 5, YTemps-1);
	 Yting[7]=YS1_T_diag_stemp( Yi, 6, YTemps-1);
	 Yting[8]=YS1_T_diag_stemp( Yi, 7, YTemps-1);
	 Yting[9]=YS1_T_diag_stemp( Yi, 8, YTemps-1);
	 Yting[10]=YS1_T_diag_stemp( Yi, 9, YTemps-1);
	 Yting[11]=YS1_T_diag_stemp( Yi, 10, YTemps-1);
	 Yting[12]=YS2_int_slowproc( Yi, 10, YTemps);
	 Yting[13]=YS1_temp_sol( Yi);
	 Ytbeta[0]=YG1_S_lai( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_T_diag_stemp( Yi, 0, YTemps-1);
	 Ytbeta[2]=YG1_T_diag_stemp( Yi, 1, YTemps-1);
	 Ytbeta[3]=YG1_T_diag_stemp( Yi, 2, YTemps-1);
	 Ytbeta[4]=YG1_T_diag_stemp( Yi, 3, YTemps-1);
	 Ytbeta[5]=YG1_T_diag_stemp( Yi, 4, YTemps-1);
	 Ytbeta[6]=YG1_T_diag_stemp( Yi, 5, YTemps-1);
	 Ytbeta[7]=YG1_T_diag_stemp( Yi, 6, YTemps-1);
	 Ytbeta[8]=YG1_T_diag_stemp( Yi, 7, YTemps-1);
	 Ytbeta[9]=YG1_T_diag_stemp( Yi, 8, YTemps-1);
	 Ytbeta[10]=YG1_T_diag_stemp( Yi, 9, YTemps-1);
	 Ytbeta[11]=YG1_T_diag_stemp( Yi, 10, YTemps-1);
	 Ytbeta[12]=YG2_int_slowproc( Yi, 10, YTemps);
	 Ytbeta[13]=YG1_temp_sol( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YS_lai(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13] );
	 Yvsmat (YNBS_S_lai, YNBI_S_lai, YMAX_JAC_NBI, &YG1Y_S_lai, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=YA2_SnvmSi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_vegetmax( Yi, Yj);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SnvmSi-1)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_S_veget( Yi, Yj+1, YTemps);
	 Ytbeta[0]=YG1_S_vegetmax( Yi, Yj);
	 Ytbeta[1]=YG1_S_lai( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SnvmSi-1)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG2_S_veget( Yi, Yj+1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YS_veget(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_S_veget, YNBI_S_veget, YMAX_JAC_NBI, &YG1Y_S_veget, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmSi; ++Yi)
for(Yj=0; Yj<YA2_SnvmSi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_S_lai( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YS_qsintm(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_S_qsintm, YNBI_S_qsintm, YMAX_JAC_NBI, &YG1Y_S_qsintm, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmSi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmSi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmSi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YS_qsintm(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_S_qsintm, YNBI_S_qsintm, YMAX_JAC_NBI, &YG1Y_S_qsintm, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_S_lai( Yi, Yj, YTemps-1) += Ytbeta[1];

}
for(Yi=YA1_SnvmSi-1; Yi>=0; --Yi)
for(Yj=0; Yj<YA2_SnvmSi; ++Yj)
{
	 Yting[0]=YS1_S_vegetmax( Yi, Yj);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SnvmSi-1)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_S_veget( Yi, Yj+1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YS_veget(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_S_veget, YNBI_S_veget, YMAX_JAC_NBI, &YG1Y_S_veget, Yjac[0], Ytbeta);
	 YG1_S_vegetmax( Yi, Yj) += Ytbeta[0];
	 YG1_S_lai( Yi, Yj, YTemps) += Ytbeta[1];
	 if (1==0 || Yj+1>YA2_SnvmSi-1){} 
	 else 
	 YG2_S_veget( Yi, Yj+1, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SnvmSi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmSi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_T_diag_stemp( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_diag_stemp( Yi, 1, YTemps-1);
	 Yting[3]=YS1_T_diag_stemp( Yi, 2, YTemps-1);
	 Yting[4]=YS1_T_diag_stemp( Yi, 3, YTemps-1);
	 Yting[5]=YS1_T_diag_stemp( Yi, 4, YTemps-1);
	 Yting[6]=YS1_T_diag_stemp( Yi, 5, YTemps-1);
	 Yting[7]=YS1_T_diag_stemp( Yi, 6, YTemps-1);
	 Yting[8]=YS1_T_diag_stemp( Yi, 7, YTemps-1);
	 Yting[9]=YS1_T_diag_stemp( Yi, 8, YTemps-1);
	 Yting[10]=YS1_T_diag_stemp( Yi, 9, YTemps-1);
	 Yting[11]=YS1_T_diag_stemp( Yi, 10, YTemps-1);
	 Yting[12]=YS2_int_slowproc( Yi, 10, YTemps);
	 Yting[13]=YS1_temp_sol( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YS_lai(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13] );
	 Yvsmatt (YNBS_S_lai, YNBI_S_lai, YMAX_JAC_NBI, &YG1Y_S_lai, Yjac[0], Ytbeta);
	 YG1_S_lai( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_T_diag_stemp( Yi, 0, YTemps-1) += Ytbeta[1];
	 YG1_T_diag_stemp( Yi, 1, YTemps-1) += Ytbeta[2];
	 YG1_T_diag_stemp( Yi, 2, YTemps-1) += Ytbeta[3];
	 YG1_T_diag_stemp( Yi, 3, YTemps-1) += Ytbeta[4];
	 YG1_T_diag_stemp( Yi, 4, YTemps-1) += Ytbeta[5];
	 YG1_T_diag_stemp( Yi, 5, YTemps-1) += Ytbeta[6];
	 YG1_T_diag_stemp( Yi, 6, YTemps-1) += Ytbeta[7];
	 YG1_T_diag_stemp( Yi, 7, YTemps-1) += Ytbeta[8];
	 YG1_T_diag_stemp( Yi, 8, YTemps-1) += Ytbeta[9];
	 YG1_T_diag_stemp( Yi, 9, YTemps-1) += Ytbeta[10];
	 YG1_T_diag_stemp( Yi, 10, YTemps-1) += Ytbeta[11];
	 YG2_int_slowproc( Yi, 10, YTemps) += Ytbeta[12];
	 YG1_temp_sol( Yi) += Ytbeta[13];

}

	 return(0);
}

 int Yforward_space_Snvm_init()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Snvm_init; ++Yi)
for(Yj=0; Yj<YA2_Snvm_init; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_init_hydrolc2( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_init_hydrolc2( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_mx_eau_eau( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 Yting[5]=YS1_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[7]=YS3_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yinit_hydrolc2(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );

}

	 return(0);
}

 int Ylinward_space_Snvm_init()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Snvm_init; ++Yi)
for(Yj=0; Yj<YA2_Snvm_init; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_init_hydrolc2( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_init_hydrolc2( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_mx_eau_eau( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 Yting[5]=YS1_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[7]=YS3_init_hydrolc2( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG1_init_hydrolc2( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG3_init_hydrolc2( Yi, Yj-1, YTemps);
	 Ytbeta[3]=YG1_mx_eau_eau( Yi);
	 Ytbeta[4]=YG1_dpu_cste1( Yi);
	 Ytbeta[5]=YG1_init_hydrolc2( Yi, Yj, YTemps-1);
	 Ytbeta[6]=YG2_init_hydrolc2( Yi, Yj, YTemps-1);
	 Ytbeta[7]=YG3_init_hydrolc2( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yinit_hydrolc2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmat (YNBS_init_hydrolc2, YNBI_init_hydrolc2, YMAX_JAC_NBI, &YG1Y_init_hydrolc2, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_Snvm_init()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Snvm_init-1; Yi>=0; --Yi)
for(Yj=YA2_Snvm_init-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_init_hydrolc2( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS3_init_hydrolc2( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_mx_eau_eau( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 Yting[5]=YS1_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_init_hydrolc2( Yi, Yj, YTemps-1);
	 Yting[7]=YS3_init_hydrolc2( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 Yinit_hydrolc2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmatt (YNBS_init_hydrolc2, YNBI_init_hydrolc2, YMAX_JAC_NBI, &YG1Y_init_hydrolc2, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_init_hydrolc2( Yi, Yj-1, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_init_hydrolc2( Yi, Yj-1, YTemps) += Ytbeta[2];
	 YG1_mx_eau_eau( Yi) += Ytbeta[3];
	 YG1_dpu_cste1( Yi) += Ytbeta[4];
	 YG1_init_hydrolc2( Yi, Yj, YTemps-1) += Ytbeta[5];
	 YG2_init_hydrolc2( Yi, Yj, YTemps-1) += Ytbeta[6];
	 YG3_init_hydrolc2( Yi, Yj, YTemps-1) += Ytbeta[7];

}

	 return(0);
}

 int Yforward_space_SnvmCi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmCi; ++Yi)
for(Yj=0; Yj<YA2_SnvmCi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_vegetmax( Yi, Yj);
	 Yting[3]=YS1_S_height( Yi, Yj);
	 Yting[4]=YS2_S_fracnobio( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS3_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS4_C_z0_rug( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_z0_over( Yi);
	 Yting[9]=YS1_z0_par( Yi);
	 YC_z0_rug(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}

	 return(0);
}

 int Ylinward_space_SnvmCi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmCi; ++Yi)
for(Yj=0; Yj<YA2_SnvmCi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_vegetmax( Yi, Yj);
	 Yting[3]=YS1_S_height( Yi, Yj);
	 Yting[4]=YS2_S_fracnobio( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS3_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS4_C_z0_rug( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_z0_over( Yi);
	 Yting[9]=YS1_z0_par( Yi);
	 Ytbeta[0]=YG1_S_veget( Yi, 0, YTemps);
	 Ytbeta[1]=YG1_S_veget( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_S_vegetmax( Yi, Yj);
	 Ytbeta[3]=YG1_S_height( Yi, Yj);
	 Ytbeta[4]=YG2_S_fracnobio( Yi);
	 if (1==0 || Yj-1<0)
	 Ytbeta[5]=0; 
	 else 
	 Ytbeta[5]=YG1_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[6]=0; 
	 else 
	 Ytbeta[6]=YG3_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[7]=0; 
	 else 
	 Ytbeta[7]=YG4_C_z0_rug( Yi, Yj-1, YTemps);
	 Ytbeta[8]=YG1_z0_over( Yi);
	 Ytbeta[9]=YG1_z0_par( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YC_z0_rug(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_C_z0_rug, YNBI_C_z0_rug, YMAX_JAC_NBI, &YG1Y_C_z0_rug, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmCi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmCi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmCi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_vegetmax( Yi, Yj);
	 Yting[3]=YS1_S_height( Yi, Yj);
	 Yting[4]=YS2_S_fracnobio( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS3_C_z0_rug( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS4_C_z0_rug( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_z0_over( Yi);
	 Yting[9]=YS1_z0_par( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YC_z0_rug(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_C_z0_rug, YNBI_C_z0_rug, YMAX_JAC_NBI, &YG1Y_C_z0_rug, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, 0, YTemps) += Ytbeta[0];
	 YG1_S_veget( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_S_vegetmax( Yi, Yj) += Ytbeta[2];
	 YG1_S_height( Yi, Yj) += Ytbeta[3];
	 YG2_S_fracnobio( Yi) += Ytbeta[4];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_C_z0_rug( Yi, Yj-1, YTemps) += Ytbeta[5];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_C_z0_rug( Yi, Yj-1, YTemps) += Ytbeta[6];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG4_C_z0_rug( Yi, Yj-1, YTemps) += Ytbeta[7];
	 YG1_z0_over( Yi) += Ytbeta[8];
	 YG1_z0_par( Yi) += Ytbeta[9];

}

	 return(0);
}

 int Yforward_space_SnvmC2()
{
	 YA1=2; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmC2; ++Yi)
for(Yj=0; Yj<YA2_SnvmC2; ++Yj)
{
	 Yting[0]=YS1_S_veget( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_C_albedo( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_C_albedo( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_albedovis( 0);
	 Yting[4]=YS1_albedonir( 0);
	 YC_albedo(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}

	 return(0);
}

 int Ylinward_space_SnvmC2()
{
	 YA1=2; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmC2; ++Yi)
for(Yj=0; Yj<YA2_SnvmC2; ++Yj)
{
	 Yting[0]=YS1_S_veget( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_C_albedo( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_C_albedo( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_albedovis( 0);
	 Yting[4]=YS1_albedonir( 0);
	 Ytbeta[0]=YG1_S_veget( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG1_C_albedo( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG2_C_albedo( Yi, Yj-1, YTemps);
	 Ytbeta[3]=YG1_albedovis( 0);
	 Ytbeta[4]=YG1_albedonir( 0);
	 memset(Yjac, 0, 44*sizeof(double));
	 YC_albedo(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_C_albedo, YNBI_C_albedo, YMAX_JAC_NBI, &YG1Y_C_albedo, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmC2()
{
	 YA1=2; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmC2-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmC2-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( 0, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_C_albedo( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS2_C_albedo( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_albedovis( 0);
	 Yting[4]=YS1_albedonir( 0);
	 memset(Yjac, 0, 44*sizeof(double));
	 YC_albedo(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_C_albedo, YNBI_C_albedo, YMAX_JAC_NBI, &YG1Y_C_albedo, Yjac[0], Ytbeta);
	 YG1_S_veget( 0, Yj, YTemps) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_C_albedo( Yi, Yj-1, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_C_albedo( Yi, Yj-1, YTemps) += Ytbeta[2];
	 YG1_albedovis( 0) += Ytbeta[3];
	 YG1_albedonir( 0) += Ytbeta[4];

}

	 return(0);
}

 int Yforward_space_SnvmDpre()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmDpre; ++Yi)
{
	 Yting[0]=YS1_C_z0_rug( Yi, 12, YTemps);
	 Yting[1]=YS2_C_z0_rug( Yi, 12, YTemps);
	 YD_pre_aero(Yi)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SnvmDpre()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmDpre; ++Yi)
{
	 Yting[0]=YS1_C_z0_rug( Yi, 12, YTemps);
	 Yting[1]=YS2_C_z0_rug( Yi, 12, YTemps);
	 Ytbeta[0]=YG1_C_z0_rug( Yi, 12, YTemps);
	 Ytbeta[1]=YG2_C_z0_rug( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_pre_aero(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_D_pre_aero, YNBI_D_pre_aero, YMAX_JAC_NBI, &YG1Y_D_pre_aero, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmDpre()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmDpre-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_C_z0_rug( Yi, 12, YTemps);
	 Yting[1]=YS2_C_z0_rug( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_pre_aero(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_D_pre_aero, YNBI_D_pre_aero, YMAX_JAC_NBI, &YG1Y_D_pre_aero, Yjac[0], Ytbeta);
	 YG1_C_z0_rug( Yi, 12, YTemps) += Ytbeta[0];
	 YG2_C_z0_rug( Yi, 12, YTemps) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_SkjindexDi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_C_albedo( 0, 12, YTemps-1);
	 Yting[1]=YS1_C_albedo( 1, 12, YTemps-1);
	 Yting[2]=YS1_F_swdown( Yi, YTemps);
	 YI_swnet(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[3]=YS1_E_flux_qsurf( Yi, YTemps-1);
	 Yting[4]=YS1_F_qair( Yi, YTemps-1);
	 YD_aero1(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero1( Yi, YTemps);
	 Yting[2]=YS1_D_pre_aero( Yi, YTemps);
	 YD_aero(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 YD_qsatt(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS2_S_fracnobio( Yi);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[2]=YS1_wind( Yi, YTemps-1);
	 Yting[3]=YS1_D_aero( Yi, YTemps);
	 Yting[4]=YS1_SE_rau( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 YD_snow(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_D_aero( Yi, YTemps);
	 Yting[1]=YS1_wind( Yi, YTemps-1);
	 Yting[2]=YS1_H_soil_rsol( Yi, YTemps-1);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 YD_bare(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SkjindexDi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_C_albedo( 0, 12, YTemps-1);
	 Yting[1]=YS1_C_albedo( 1, 12, YTemps-1);
	 Yting[2]=YS1_F_swdown( Yi, YTemps);
	 Ytbeta[0]=YG1_C_albedo( 0, 12, YTemps-1);
	 Ytbeta[1]=YG1_C_albedo( 1, 12, YTemps-1);
	 Ytbeta[2]=YG1_F_swdown( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_swnet(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_I_swnet, YNBI_I_swnet, YMAX_JAC_NBI, &YG1Y_I_swnet, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[3]=YS1_E_flux_qsurf( Yi, YTemps-1);
	 Yting[4]=YS1_F_qair( Yi, YTemps-1);
	 Ytbeta[0]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[1]=YG1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[2]=YG1_F_temp_air( Yi, YTemps-1);
	 Ytbeta[3]=YG1_E_flux_qsurf( Yi, YTemps-1);
	 Ytbeta[4]=YG1_F_qair( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_aero1(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_D_aero1, YNBI_D_aero1, YMAX_JAC_NBI, &YG1Y_D_aero1, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero1( Yi, YTemps);
	 Yting[2]=YS1_D_pre_aero( Yi, YTemps);
	 Ytbeta[0]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[1]=YG1_D_aero1( Yi, YTemps);
	 Ytbeta[2]=YG1_D_pre_aero( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_aero(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_D_aero, YNBI_D_aero, YMAX_JAC_NBI, &YG1Y_D_aero, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_qsatt(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_D_qsatt, YNBI_D_qsatt, YMAX_JAC_NBI, &YG1Y_D_qsatt, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS2_S_fracnobio( Yi);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[2]=YS1_wind( Yi, YTemps-1);
	 Yting[3]=YS1_D_aero( Yi, YTemps);
	 Yting[4]=YS1_SE_rau( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 Ytbeta[0]=YG2_S_fracnobio( Yi);
	 Ytbeta[1]=YG1_H_snow_melt( Yi, YTemps-1);
	 Ytbeta[2]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[3]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[4]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[5]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[6]=YG1_F_qair( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_snow(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_D_snow, YNBI_D_snow, YMAX_JAC_NBI, &YG1Y_D_snow, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexDi; ++Yi)
{
	 Yting[0]=YS1_D_aero( Yi, YTemps);
	 Yting[1]=YS1_wind( Yi, YTemps-1);
	 Yting[2]=YS1_H_soil_rsol( Yi, YTemps-1);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 Ytbeta[0]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[1]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[2]=YG1_H_soil_rsol( Yi, YTemps-1);
	 Ytbeta[3]=YG1_S_veget( Yi, 0, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_bare(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_D_bare, YNBI_D_bare, YMAX_JAC_NBI, &YG1Y_D_bare, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexDi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_D_aero( Yi, YTemps);
	 Yting[1]=YS1_wind( Yi, YTemps-1);
	 Yting[2]=YS1_H_soil_rsol( Yi, YTemps-1);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_bare(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_D_bare, YNBI_D_bare, YMAX_JAC_NBI, &YG1Y_D_bare, Yjac[0], Ytbeta);
	 YG1_D_aero( Yi, YTemps) += Ytbeta[0];
	 YG1_wind( Yi, YTemps-1) += Ytbeta[1];
	 YG1_H_soil_rsol( Yi, YTemps-1) += Ytbeta[2];
	 YG1_S_veget( Yi, 0, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_S_fracnobio( Yi);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[2]=YS1_wind( Yi, YTemps-1);
	 Yting[3]=YS1_D_aero( Yi, YTemps);
	 Yting[4]=YS1_SE_rau( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_snow(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_D_snow, YNBI_D_snow, YMAX_JAC_NBI, &YG1Y_D_snow, Yjac[0], Ytbeta);
	 YG2_S_fracnobio( Yi) += Ytbeta[0];
	 YG1_H_snow_melt( Yi, YTemps-1) += Ytbeta[1];
	 YG1_wind( Yi, YTemps-1) += Ytbeta[2];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[3];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[4];
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[5];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[6];

}
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_qsatt(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_D_qsatt, YNBI_D_qsatt, YMAX_JAC_NBI, &YG1Y_D_qsatt, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];

}
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero1( Yi, YTemps);
	 Yting[2]=YS1_D_pre_aero( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_aero(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_D_aero, YNBI_D_aero, YMAX_JAC_NBI, &YG1Y_D_aero, Yjac[0], Ytbeta);
	 YG1_wind( Yi, YTemps-1) += Ytbeta[0];
	 YG1_D_aero1( Yi, YTemps) += Ytbeta[1];
	 YG1_D_pre_aero( Yi, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[3]=YS1_E_flux_qsurf( Yi, YTemps-1);
	 Yting[4]=YS1_F_qair( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_aero1(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_D_aero1, YNBI_D_aero1, YMAX_JAC_NBI, &YG1Y_D_aero1, Yjac[0], Ytbeta);
	 YG1_wind( Yi, YTemps-1) += Ytbeta[0];
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[1];
	 YG1_F_temp_air( Yi, YTemps-1) += Ytbeta[2];
	 YG1_E_flux_qsurf( Yi, YTemps-1) += Ytbeta[3];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[4];

}
for(Yi=YA1_SkjindexDi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_C_albedo( 0, 12, YTemps-1);
	 Yting[1]=YS1_C_albedo( 1, 12, YTemps-1);
	 Yting[2]=YS1_F_swdown( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YI_swnet(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_I_swnet, YNBI_I_swnet, YMAX_JAC_NBI, &YG1Y_I_swnet, Yjac[0], Ytbeta);
	 YG1_C_albedo( 0, 12, YTemps-1) += Ytbeta[0];
	 YG1_C_albedo( 1, 12, YTemps-1) += Ytbeta[1];
	 YG1_F_swdown( Yi, YTemps) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SnvmDi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps-1);
	 Yting[1]=YS1_D_qsatt( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 Yting[3]=YS1_wind( Yi, YTemps-1);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 YD_inter(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_F_qair( Yi, YTemps-1);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 YD_pre_trans(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[1]=YS1_D_pre_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_lai( Yi, Yj, YTemps-1);
	 YD_pre_trans2(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_wind( Yi, YTemps-1);
	 Yting[5]=YS1_D_aero( Yi, YTemps);
	 Yting[6]=YS1_D_pre_trans2( Yi, Yj, YTemps);
	 Yting[7]=YS2_D_inter( Yi, Yj, YTemps);
	 Yting[8]=YS2_D_pre_trans( Yi, Yj, YTemps);
	 Yting[9]=YS1_rveg_par( Yi);
	 YD_trans(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_D_inter( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_trans( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_D_comb_vbsum( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS2_D_comb_vbsum( Yi, Yj-1, YTemps);
	 YD_comb_vbsum(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SnvmDi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps-1);
	 Yting[1]=YS1_D_qsatt( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 Yting[3]=YS1_wind( Yi, YTemps-1);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[1]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[2]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[3]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[4]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[5]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[6]=YG2_H_canop_interp( Yi, Yj, YTemps-1);
	 Ytbeta[7]=YG1_S_qsintm( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_inter(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmat (YNBS_D_inter, YNBI_D_inter, YMAX_JAC_NBI, &YG1Y_D_inter, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_F_qair( Yi, YTemps-1);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_F_temp_air( Yi, YTemps-1);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 Ytbeta[2]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[3]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[4]=YG2_H_canop_interp( Yi, Yj, YTemps-1);
	 Ytbeta[5]=YG1_S_qsintm( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_pre_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_D_pre_trans, YNBI_D_pre_trans, YMAX_JAC_NBI, &YG1Y_D_pre_trans, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[1]=YS1_D_pre_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_I_swnet( Yi, YTemps-1);
	 Ytbeta[1]=YG1_D_pre_trans( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_S_lai( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_pre_trans2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_D_pre_trans2, YNBI_D_pre_trans2, YMAX_JAC_NBI, &YG1Y_D_pre_trans2, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_wind( Yi, YTemps-1);
	 Yting[5]=YS1_D_aero( Yi, YTemps);
	 Yting[6]=YS1_D_pre_trans2( Yi, Yj, YTemps);
	 Yting[7]=YS2_D_inter( Yi, Yj, YTemps);
	 Yting[8]=YS2_D_pre_trans( Yi, Yj, YTemps);
	 Yting[9]=YS1_rveg_par( Yi);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_S_lai( Yi, Yj, YTemps-1);
	 Ytbeta[2]=YG1_I_swnet( Yi, YTemps-1);
	 Ytbeta[3]=YG1_H_soil_humrel( Yi, Yj, YTemps-1);
	 Ytbeta[4]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[5]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[6]=YG1_D_pre_trans2( Yi, Yj, YTemps);
	 Ytbeta[7]=YG2_D_inter( Yi, Yj, YTemps);
	 Ytbeta[8]=YG2_D_pre_trans( Yi, Yj, YTemps);
	 Ytbeta[9]=YG1_rveg_par( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_D_trans, YNBI_D_trans, YMAX_JAC_NBI, &YG1Y_D_trans, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmDi; ++Yi)
for(Yj=0; Yj<YA2_SnvmDi; ++Yj)
{
	 Yting[0]=YS1_D_inter( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_trans( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_D_comb_vbsum( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS2_D_comb_vbsum( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG1_D_inter( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_D_trans( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG1_D_comb_vbsum( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG2_D_comb_vbsum( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_vbsum(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_D_comb_vbsum, YNBI_D_comb_vbsum, YMAX_JAC_NBI, &YG1Y_D_comb_vbsum, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmDi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmDi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmDi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_D_inter( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_trans( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_D_comb_vbsum( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS2_D_comb_vbsum( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_vbsum(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_D_comb_vbsum, YNBI_D_comb_vbsum, YMAX_JAC_NBI, &YG1Y_D_comb_vbsum, Yjac[0], Ytbeta);
	 YG1_D_inter( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_D_trans( Yi, Yj, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_D_comb_vbsum( Yi, Yj-1, YTemps) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_D_comb_vbsum( Yi, Yj-1, YTemps) += Ytbeta[3];

}
for(Yi=YA1_SnvmDi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmDi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_wind( Yi, YTemps-1);
	 Yting[5]=YS1_D_aero( Yi, YTemps);
	 Yting[6]=YS1_D_pre_trans2( Yi, Yj, YTemps);
	 Yting[7]=YS2_D_inter( Yi, Yj, YTemps);
	 Yting[8]=YS2_D_pre_trans( Yi, Yj, YTemps);
	 Yting[9]=YS1_rveg_par( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_D_trans, YNBI_D_trans, YMAX_JAC_NBI, &YG1Y_D_trans, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_S_lai( Yi, Yj, YTemps-1) += Ytbeta[1];
	 YG1_I_swnet( Yi, YTemps-1) += Ytbeta[2];
	 YG1_H_soil_humrel( Yi, Yj, YTemps-1) += Ytbeta[3];
	 YG1_wind( Yi, YTemps-1) += Ytbeta[4];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[5];
	 YG1_D_pre_trans2( Yi, Yj, YTemps) += Ytbeta[6];
	 YG2_D_inter( Yi, Yj, YTemps) += Ytbeta[7];
	 YG2_D_pre_trans( Yi, Yj, YTemps) += Ytbeta[8];
	 YG1_rveg_par( Yi) += Ytbeta[9];

}
for(Yi=YA1_SnvmDi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmDi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[1]=YS1_D_pre_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_lai( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YD_pre_trans2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_D_pre_trans2, YNBI_D_pre_trans2, YMAX_JAC_NBI, &YG1Y_D_pre_trans2, Yjac[0], Ytbeta);
	 YG1_I_swnet( Yi, YTemps-1) += Ytbeta[0];
	 YG1_D_pre_trans( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_S_lai( Yi, Yj, YTemps-1) += Ytbeta[2];

}
for(Yi=YA1_SnvmDi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmDi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_F_temp_air( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_F_qair( Yi, YTemps-1);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_pre_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_D_pre_trans, YNBI_D_pre_trans, YMAX_JAC_NBI, &YG1Y_D_pre_trans, Yjac[0], Ytbeta);
	 YG1_F_temp_air( Yi, YTemps-1) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[2];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[3];
	 YG2_H_canop_interp( Yi, Yj, YTemps-1) += Ytbeta[4];
	 YG1_S_qsintm( Yi, Yj, YTemps-1) += Ytbeta[5];

}
for(Yi=YA1_SnvmDi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmDi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_F_qair( Yi, YTemps-1);
	 Yting[1]=YS1_D_qsatt( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 Yting[3]=YS1_wind( Yi, YTemps-1);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[6]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_inter(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmatt (YNBS_D_inter, YNBI_D_inter, YMAX_JAC_NBI, &YG1Y_D_inter, Yjac[0], Ytbeta);
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[0];
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[1];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[2];
	 YG1_wind( Yi, YTemps-1) += Ytbeta[3];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[4];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[5];
	 YG2_H_canop_interp( Yi, Yj, YTemps-1) += Ytbeta[6];
	 YG1_S_qsintm( Yi, Yj, YTemps-1) += Ytbeta[7];

}

	 return(0);
}

 int Yforward_space_SkjindexD1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexD1i; ++Yi)
{
	 Yting[0]=YS1_D_bare( Yi, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[3]=YS2_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[4]=YS1_D_qsatt( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps-1);
	 Yting[6]=YS1_F_temp_air( Yi, YTemps-1);
	 YD_comb_vb(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SkjindexD1i; ++Yi)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_D_comb_vb( Yi, YTemps);
	 Yting[3]=YS1_D_bare( Yi, YTemps);
	 Yting[4]=YS1_D_snow( Yi, YTemps);
	 Yting[5]=YS3_D_comb_vb( Yi, YTemps);
	 YD_comb_soil(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_SkjindexD1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexD1i; ++Yi)
{
	 Yting[0]=YS1_D_bare( Yi, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[3]=YS2_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[4]=YS1_D_qsatt( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps-1);
	 Yting[6]=YS1_F_temp_air( Yi, YTemps-1);
	 Ytbeta[0]=YG1_D_bare( Yi, YTemps);
	 Ytbeta[1]=YG1_H_snow_melt( Yi, YTemps);
	 Ytbeta[2]=YG1_D_comb_vbsum( Yi, 12, YTemps);
	 Ytbeta[3]=YG2_D_comb_vbsum( Yi, 12, YTemps);
	 Ytbeta[4]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[5]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[6]=YG1_F_temp_air( Yi, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 YD_comb_vb(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_D_comb_vb, YNBI_D_comb_vb, YMAX_JAC_NBI, &YG1Y_D_comb_vb, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexD1i; ++Yi)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_D_comb_vb( Yi, YTemps);
	 Yting[3]=YS1_D_bare( Yi, YTemps);
	 Yting[4]=YS1_D_snow( Yi, YTemps);
	 Yting[5]=YS3_D_comb_vb( Yi, YTemps);
	 Ytbeta[0]=YG2_D_comb_vb( Yi, YTemps);
	 Ytbeta[1]=YG1_S_veget( Yi, 0, YTemps-1);
	 Ytbeta[2]=YG1_D_comb_vb( Yi, YTemps);
	 Ytbeta[3]=YG1_D_bare( Yi, YTemps);
	 Ytbeta[4]=YG1_D_snow( Yi, YTemps);
	 Ytbeta[5]=YG3_D_comb_vb( Yi, YTemps);
	 memset(Yjac, 0, 88*sizeof(double));
	 YD_comb_soil(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_D_comb_soil, YNBI_D_comb_soil, YMAX_JAC_NBI, &YG1Y_D_comb_soil, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexD1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexD1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_D_comb_vb( Yi, YTemps);
	 Yting[3]=YS1_D_bare( Yi, YTemps);
	 Yting[4]=YS1_D_snow( Yi, YTemps);
	 Yting[5]=YS3_D_comb_vb( Yi, YTemps);
	 memset(Yjac, 0, 88*sizeof(double));
	 YD_comb_soil(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_D_comb_soil, YNBI_D_comb_soil, YMAX_JAC_NBI, &YG1Y_D_comb_soil, Yjac[0], Ytbeta);
	 YG2_D_comb_vb( Yi, YTemps) += Ytbeta[0];
	 YG1_S_veget( Yi, 0, YTemps-1) += Ytbeta[1];
	 YG1_D_comb_vb( Yi, YTemps) += Ytbeta[2];
	 YG1_D_bare( Yi, YTemps) += Ytbeta[3];
	 YG1_D_snow( Yi, YTemps) += Ytbeta[4];
	 YG3_D_comb_vb( Yi, YTemps) += Ytbeta[5];

}
for(Yi=YA1_SkjindexD1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_D_bare( Yi, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[3]=YS2_D_comb_vbsum( Yi, 12, YTemps);
	 Yting[4]=YS1_D_qsatt( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps-1);
	 Yting[6]=YS1_F_temp_air( Yi, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 YD_comb_vb(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_D_comb_vb, YNBI_D_comb_vb, YMAX_JAC_NBI, &YG1Y_D_comb_vb, Yjac[0], Ytbeta);
	 YG1_D_bare( Yi, YTemps) += Ytbeta[0];
	 YG1_H_snow_melt( Yi, YTemps) += Ytbeta[1];
	 YG1_D_comb_vbsum( Yi, 12, YTemps) += Ytbeta[2];
	 YG2_D_comb_vbsum( Yi, 12, YTemps) += Ytbeta[3];
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[4];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[5];
	 YG1_F_temp_air( Yi, YTemps-1) += Ytbeta[6];

}

	 return(0);
}

 int Yforward_space_SnvmD1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmD1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmD1i; ++Yj)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS3_D_comb_vb( Yi, YTemps);
	 Yting[2]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 Yting[7]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[8]=YS1_D_inter( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[9]=0; 
	 else 
	 Yting[9]=YS2_D_comb_veg( Yi, Yj-1, YTemps);
	 YD_comb_veg(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}
for(Yi=0; Yi<YA1_SnvmD1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmD1i; ++Yj)
{
	 Yting[0]=YS1_D_qsatt( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS1_D_trans( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 YD_comb_verif(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SnvmD1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmD1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmD1i; ++Yj)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS3_D_comb_vb( Yi, YTemps);
	 Yting[2]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 Yting[7]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[8]=YS1_D_inter( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[9]=0; 
	 else 
	 Yting[9]=YS2_D_comb_veg( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG2_D_comb_vb( Yi, YTemps);
	 Ytbeta[1]=YG3_D_comb_vb( Yi, YTemps);
	 Ytbeta[2]=YG1_S_qsintm( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG1_S_lai( Yi, Yj, YTemps-1);
	 Ytbeta[4]=YG1_D_comb_soil( Yi, YTemps);
	 Ytbeta[5]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[6]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[7]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[8]=YG1_D_inter( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[9]=0; 
	 else 
	 Ytbeta[9]=YG2_D_comb_veg( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_veg(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_D_comb_veg, YNBI_D_comb_veg, YMAX_JAC_NBI, &YG1Y_D_comb_veg, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmD1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmD1i; ++Yj)
{
	 Yting[0]=YS1_D_qsatt( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS1_D_trans( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[1]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[2]=YG1_D_trans( Yi, Yj, YTemps);
	 Ytbeta[3]=YG1_H_soil_humrel( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_verif(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_D_comb_verif, YNBI_D_comb_verif, YMAX_JAC_NBI, &YG1Y_D_comb_verif, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmD1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmD1i-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmD1i-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_D_qsatt( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS1_D_trans( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_humrel( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_verif(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_D_comb_verif, YNBI_D_comb_verif, YMAX_JAC_NBI, &YG1Y_D_comb_verif, Yjac[0], Ytbeta);
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[0];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[1];
	 YG1_D_trans( Yi, Yj, YTemps) += Ytbeta[2];
	 YG1_H_soil_humrel( Yi, Yj, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SnvmD1i-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmD1i-1; Yj>=0; --Yj)
{
	 Yting[0]=YS2_D_comb_vb( Yi, YTemps);
	 Yting[1]=YS3_D_comb_vb( Yi, YTemps);
	 Yting[2]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_S_lai( Yi, Yj, YTemps-1);
	 Yting[4]=YS1_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS1_D_qsatt( Yi, YTemps);
	 Yting[6]=YS1_F_qair( Yi, YTemps-1);
	 Yting[7]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[8]=YS1_D_inter( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[9]=0; 
	 else 
	 Yting[9]=YS2_D_comb_veg( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YD_comb_veg(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_D_comb_veg, YNBI_D_comb_veg, YMAX_JAC_NBI, &YG1Y_D_comb_veg, Yjac[0], Ytbeta);
	 YG2_D_comb_vb( Yi, YTemps) += Ytbeta[0];
	 YG3_D_comb_vb( Yi, YTemps) += Ytbeta[1];
	 YG1_S_qsintm( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG1_S_lai( Yi, Yj, YTemps-1) += Ytbeta[3];
	 YG1_D_comb_soil( Yi, YTemps) += Ytbeta[4];
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[5];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[6];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[7];
	 YG1_D_inter( Yi, Yj, YTemps) += Ytbeta[8];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_D_comb_veg( Yi, Yj-1, YTemps) += Ytbeta[9];

}

	 return(0);
}

 int Yforward_space_SkjindexEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 YE_dev_qsol(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_D_qsatt( Yi, YTemps);
	 Yting[3]=YS1_E_dev_qsol( Yi, YTemps);
	 YE_beg_qsol(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_E_tempsol( Yi, YTemps-1);
	 YE_beg_netrad(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 YE_surftemp1(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_I_petBcoef( Yi, YTemps-1);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[7]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS1_I_peqBcoef( Yi, YTemps-1);
	 Yting[9]=YS1_I_peqAcoef( Yi);
	 YE_surftemp2(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[7]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[8]=YS1_I_peqAcoef( Yi);
	 YE_surftemp3(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp3( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[6]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[7]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[8]=YS2_T_coef_diff( Yi, YTemps-1);
	 Yting[9]=YS1_T_coef_diff( Yi, YTemps-1);
	 YE_surftemp4(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp4( Yi, YTemps);
	 YE_surftemp_pt(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_surftemp_pt( Yi, YTemps);
	 Yting[1]=YS1_temp_sol( Yi);
	 YE_tempsol(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp4( Yi, YTemps);
	 YE_surftemp_qsol(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_pt( Yi, YTemps);
	 YE_surftemp_epot(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[3]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[7]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[9]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[10]=YS1_E_surftemp_qsol( Yi, YTemps);
	 YE_surftemp_qair(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 YE_flux1(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 Yting[3]=YS1_F_lwdown( Yi, YTemps-1);
	 YE_flux_tslw(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[2]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[3]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps);
	 YE_flux_qsurf(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[1]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[2]=YS1_E_flux_tslw( Yi, YTemps);
	 YE_flux_net(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_netrad( Yi);
	 YE_netrad(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 YE_flux_vefl(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_fluxlat( Yi);
	 Yting[1]=YS2_E_flux_vefl( Yi, YTemps);
	 YE_fluxlat(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_epot( Yi, YTemps);
	 YE_flux_flta(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_fluxsens( Yi);
	 Yting[1]=YS1_E_flux_flta( Yi, YTemps);
	 YE_fluxsens(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qair( Yi, YTemps);
	 YE_flux_evapo(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 YE_grad_qsat(Yi)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_flux1( Yi, YTemps);
	 Yting[1]=YS1_SE_rau( Yi, YTemps);
	 Yting[2]=YS1_emis_par( Yi);
	 Yting[3]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[4]=YS1_E_flux_evapo( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_epot( Yi, YTemps);
	 Yting[6]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[7]=YS1_E_grad_qsat( Yi, YTemps);
	 Yting[8]=YS1_E_flux_vefl( Yi, YTemps);
	 YE_flux_corr(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[2]=YS3_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp_qair( Yi, YTemps);
	 YE_evap_veva(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_evapnu( Yi);
	 Yting[1]=YS2_E_evap_veva( Yi, YTemps);
	 YE_evapnu(Yi)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SkjindexEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_dev_qsol(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_dev_qsol, YNBI_E_dev_qsol, YMAX_JAC_NBI, &YG1Y_E_dev_qsol, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_D_qsatt( Yi, YTemps);
	 Yting[3]=YS1_E_dev_qsol( Yi, YTemps);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 Ytbeta[2]=YG1_D_qsatt( Yi, YTemps);
	 Ytbeta[3]=YG1_E_dev_qsol( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_beg_qsol(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_E_beg_qsol, YNBI_E_beg_qsol, YMAX_JAC_NBI, &YG1Y_E_beg_qsol, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[0]=YG1_emis_par( Yi);
	 Ytbeta[1]=YG1_F_lwdown( Yi, YTemps-1);
	 Ytbeta[2]=YG1_I_swnet( Yi, YTemps-1);
	 Ytbeta[3]=YG1_E_tempsol( Yi, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_beg_netrad(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_E_beg_netrad, YNBI_E_beg_netrad, YMAX_JAC_NBI, &YG1Y_E_beg_netrad, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 Ytbeta[0]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[1]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[2]=YG1_SE_rau( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp1(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_E_surftemp1, YNBI_E_surftemp1, YMAX_JAC_NBI, &YG1Y_E_surftemp1, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_I_petBcoef( Yi, YTemps-1);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[7]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS1_I_peqBcoef( Yi, YTemps-1);
	 Yting[9]=YS1_I_peqAcoef( Yi);
	 Ytbeta[0]=YG1_I_petBcoef( Yi, YTemps-1);
	 Ytbeta[1]=YG1_E_beg_qsol( Yi, YTemps);
	 Ytbeta[2]=YG1_E_surftemp1( Yi, YTemps);
	 Ytbeta[3]=YG1_I_petAcoef( Yi);
	 Ytbeta[4]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[5]=YG2_E_beg_qsol( Yi, YTemps);
	 Ytbeta[6]=YG2_D_comb_veg( Yi, 12, YTemps);
	 Ytbeta[7]=YG4_D_comb_soil( Yi, YTemps);
	 Ytbeta[8]=YG1_I_peqBcoef( Yi, YTemps-1);
	 Ytbeta[9]=YG1_I_peqAcoef( Yi);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_surftemp2(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_E_surftemp2, YNBI_E_surftemp2, YMAX_JAC_NBI, &YG1Y_E_surftemp2, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[7]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[8]=YS1_I_peqAcoef( Yi);
	 Ytbeta[0]=YG1_emis_par( Yi);
	 Ytbeta[1]=YG1_E_beg_qsol( Yi, YTemps);
	 Ytbeta[2]=YG1_E_surftemp1( Yi, YTemps);
	 Ytbeta[3]=YG1_I_petAcoef( Yi);
	 Ytbeta[4]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[5]=YG3_E_beg_qsol( Yi, YTemps);
	 Ytbeta[6]=YG4_D_comb_soil( Yi, YTemps);
	 Ytbeta[7]=YG2_D_comb_veg( Yi, 12, YTemps);
	 Ytbeta[8]=YG1_I_peqAcoef( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YE_surftemp3(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmat (YNBS_E_surftemp3, YNBI_E_surftemp3, YMAX_JAC_NBI, &YG1Y_E_surftemp3, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp3( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[6]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[7]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[8]=YS2_T_coef_diff( Yi, YTemps-1);
	 Yting[9]=YS1_T_coef_diff( Yi, YTemps-1);
	 Ytbeta[0]=YG2_E_beg_netrad( Yi, YTemps);
	 Ytbeta[1]=YG1_E_surftemp3( Yi, YTemps);
	 Ytbeta[2]=YG2_E_surftemp3( Yi, YTemps);
	 Ytbeta[3]=YG3_E_surftemp3( Yi, YTemps);
	 Ytbeta[4]=YG4_E_surftemp3( Yi, YTemps);
	 Ytbeta[5]=YG1_E_surftemp2( Yi, YTemps);
	 Ytbeta[6]=YG2_E_surftemp2( Yi, YTemps);
	 Ytbeta[7]=YG3_E_surftemp2( Yi, YTemps);
	 Ytbeta[8]=YG2_T_coef_diff( Yi, YTemps-1);
	 Ytbeta[9]=YG1_T_coef_diff( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp4(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_E_surftemp4, YNBI_E_surftemp4, YMAX_JAC_NBI, &YG1Y_E_surftemp4, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp4( Yi, YTemps);
	 Ytbeta[0]=YG1_E_beg_qsol( Yi, YTemps);
	 Ytbeta[1]=YG1_E_surftemp4( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_surftemp_pt(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_surftemp_pt, YNBI_E_surftemp_pt, YMAX_JAC_NBI, &YG1Y_E_surftemp_pt, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_surftemp_pt( Yi, YTemps);
	 Yting[1]=YS1_temp_sol( Yi);
	 Ytbeta[0]=YG2_E_surftemp_pt( Yi, YTemps);
	 Ytbeta[1]=YG1_temp_sol( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_tempsol(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_tempsol, YNBI_E_tempsol, YMAX_JAC_NBI, &YG1Y_E_tempsol, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp4( Yi, YTemps);
	 Ytbeta[0]=YG2_E_beg_qsol( Yi, YTemps);
	 Ytbeta[1]=YG3_E_beg_qsol( Yi, YTemps);
	 Ytbeta[2]=YG1_E_surftemp4( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_qsol(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_E_surftemp_qsol, YNBI_E_surftemp_qsol, YMAX_JAC_NBI, &YG1Y_E_surftemp_qsol, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_pt( Yi, YTemps);
	 Ytbeta[0]=YG1_E_surftemp1( Yi, YTemps);
	 Ytbeta[1]=YG1_E_surftemp2( Yi, YTemps);
	 Ytbeta[2]=YG2_E_surftemp3( Yi, YTemps);
	 Ytbeta[3]=YG1_E_surftemp4( Yi, YTemps);
	 Ytbeta[4]=YG1_E_surftemp_pt( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_epot(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_E_surftemp_epot, YNBI_E_surftemp_epot, YMAX_JAC_NBI, &YG1Y_E_surftemp_epot, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[3]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[7]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[9]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[10]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Ytbeta[0]=YG1_E_surftemp1( Yi, YTemps);
	 Ytbeta[1]=YG1_F_qair( Yi, YTemps-1);
	 Ytbeta[2]=YG3_E_surftemp2( Yi, YTemps);
	 Ytbeta[3]=YG2_E_surftemp2( Yi, YTemps);
	 Ytbeta[4]=YG4_E_surftemp3( Yi, YTemps);
	 Ytbeta[5]=YG3_E_surftemp3( Yi, YTemps);
	 Ytbeta[6]=YG1_E_surftemp4( Yi, YTemps);
	 Ytbeta[7]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[8]=YG2_D_comb_veg( Yi, 12, YTemps);
	 Ytbeta[9]=YG4_D_comb_soil( Yi, YTemps);
	 Ytbeta[10]=YG1_E_surftemp_qsol( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_qair(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );
	 Yvsmat (YNBS_E_surftemp_qair, YNBI_E_surftemp_qair, YMAX_JAC_NBI, &YG1Y_E_surftemp_qair, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 Ytbeta[0]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[1]=YG1_D_aero( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux1(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_flux1, YNBI_E_flux1, YMAX_JAC_NBI, &YG1Y_E_flux1, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 Yting[3]=YS1_F_lwdown( Yi, YTemps-1);
	 Ytbeta[0]=YG1_emis_par( Yi);
	 Ytbeta[1]=YG1_E_tempsol( Yi, YTemps-1);
	 Ytbeta[2]=YG1_E_tempsol( Yi, YTemps);
	 Ytbeta[3]=YG1_F_lwdown( Yi, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_tslw(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_E_flux_tslw, YNBI_E_flux_tslw, YMAX_JAC_NBI, &YG1Y_E_flux_tslw, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[2]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[3]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps);
	 Ytbeta[0]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[1]=YG1_E_surftemp_qsol( Yi, YTemps);
	 Ytbeta[2]=YG2_D_comb_veg( Yi, 12, YTemps);
	 Ytbeta[3]=YG4_D_comb_soil( Yi, YTemps);
	 Ytbeta[4]=YG1_E_surftemp_qair( Yi, YTemps);
	 Ytbeta[5]=YG1_F_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_qsurf(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_E_flux_qsurf, YNBI_E_flux_qsurf, YMAX_JAC_NBI, &YG1Y_E_flux_qsurf, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[1]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[2]=YS1_E_flux_tslw( Yi, YTemps);
	 Ytbeta[0]=YG1_F_lwdown( Yi, YTemps-1);
	 Ytbeta[1]=YG1_I_swnet( Yi, YTemps-1);
	 Ytbeta[2]=YG1_E_flux_tslw( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_net(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_E_flux_net, YNBI_E_flux_net, YMAX_JAC_NBI, &YG1Y_E_flux_net, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_netrad( Yi);
	 Ytbeta[0]=YG2_E_beg_netrad( Yi, YTemps);
	 Ytbeta[1]=YG1_netrad( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_netrad(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_netrad, YNBI_E_netrad, YMAX_JAC_NBI, &YG1Y_E_netrad, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 Ytbeta[0]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[1]=YG1_E_flux1( Yi, YTemps);
	 Ytbeta[2]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[3]=YG1_E_surftemp_qsol( Yi, YTemps);
	 Ytbeta[4]=YG1_E_surftemp_qair( Yi, YTemps);
	 Ytbeta[5]=YG2_D_comb_veg( Yi, 12, YTemps);
	 Ytbeta[6]=YG4_D_comb_soil( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_vefl(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_E_flux_vefl, YNBI_E_flux_vefl, YMAX_JAC_NBI, &YG1Y_E_flux_vefl, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_fluxlat( Yi);
	 Yting[1]=YS2_E_flux_vefl( Yi, YTemps);
	 Ytbeta[0]=YG1_fluxlat( Yi);
	 Ytbeta[1]=YG2_E_flux_vefl( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_fluxlat(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_fluxlat, YNBI_E_fluxlat, YMAX_JAC_NBI, &YG1Y_E_fluxlat, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_epot( Yi, YTemps);
	 Ytbeta[0]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[1]=YG1_E_flux1( Yi, YTemps);
	 Ytbeta[2]=YG1_E_surftemp_pt( Yi, YTemps);
	 Ytbeta[3]=YG1_E_surftemp_epot( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_flta(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_E_flux_flta, YNBI_E_flux_flta, YMAX_JAC_NBI, &YG1Y_E_flux_flta, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_fluxsens( Yi);
	 Yting[1]=YS1_E_flux_flta( Yi, YTemps);
	 Ytbeta[0]=YG1_fluxsens( Yi);
	 Ytbeta[1]=YG1_E_flux_flta( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_fluxsens(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_fluxsens, YNBI_E_fluxsens, YMAX_JAC_NBI, &YG1Y_E_fluxsens, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qair( Yi, YTemps);
	 Ytbeta[0]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[1]=YG1_E_flux1( Yi, YTemps);
	 Ytbeta[2]=YG1_E_surftemp_qsol( Yi, YTemps);
	 Ytbeta[3]=YG1_E_surftemp_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_evapo(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_E_flux_evapo, YNBI_E_flux_evapo, YMAX_JAC_NBI, &YG1Y_E_flux_evapo, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Ytbeta[0]=YG2_E_flux_flta( Yi, YTemps);
	 Ytbeta[1]=YG1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_grad_qsat(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_grad_qsat, YNBI_E_grad_qsat, YMAX_JAC_NBI, &YG1Y_E_grad_qsat, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_E_flux1( Yi, YTemps);
	 Yting[1]=YS1_SE_rau( Yi, YTemps);
	 Yting[2]=YS1_emis_par( Yi);
	 Yting[3]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[4]=YS1_E_flux_evapo( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_epot( Yi, YTemps);
	 Yting[6]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[7]=YS1_E_grad_qsat( Yi, YTemps);
	 Yting[8]=YS1_E_flux_vefl( Yi, YTemps);
	 Ytbeta[0]=YG1_E_flux1( Yi, YTemps);
	 Ytbeta[1]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[2]=YG1_emis_par( Yi);
	 Ytbeta[3]=YG1_E_surftemp_pt( Yi, YTemps);
	 Ytbeta[4]=YG1_E_flux_evapo( Yi, YTemps);
	 Ytbeta[5]=YG1_E_surftemp_epot( Yi, YTemps);
	 Ytbeta[6]=YG2_E_flux_flta( Yi, YTemps);
	 Ytbeta[7]=YG1_E_grad_qsat( Yi, YTemps);
	 Ytbeta[8]=YG1_E_flux_vefl( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_corr(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmat (YNBS_E_flux_corr, YNBI_E_flux_corr, YMAX_JAC_NBI, &YG1Y_E_flux_corr, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[2]=YS3_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp_qair( Yi, YTemps);
	 Ytbeta[0]=YG1_wind( Yi, YTemps-1);
	 Ytbeta[1]=YG2_D_comb_soil( Yi, YTemps);
	 Ytbeta[2]=YG3_D_comb_soil( Yi, YTemps);
	 Ytbeta[3]=YG1_SE_rau( Yi, YTemps);
	 Ytbeta[4]=YG1_D_aero( Yi, YTemps);
	 Ytbeta[5]=YG1_E_surftemp_qsol( Yi, YTemps);
	 Ytbeta[6]=YG1_E_surftemp_qair( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_evap_veva(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_E_evap_veva, YNBI_E_evap_veva, YMAX_JAC_NBI, &YG1Y_E_evap_veva, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexEi; ++Yi)
{
	 Yting[0]=YS1_evapnu( Yi);
	 Yting[1]=YS2_E_evap_veva( Yi, YTemps);
	 Ytbeta[0]=YG1_evapnu( Yi);
	 Ytbeta[1]=YG2_E_evap_veva( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_evapnu(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_evapnu, YNBI_E_evapnu, YMAX_JAC_NBI, &YG1Y_E_evapnu, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexEi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_evapnu( Yi);
	 Yting[1]=YS2_E_evap_veva( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_evapnu(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_evapnu, YNBI_E_evapnu, YMAX_JAC_NBI, &YG1Y_E_evapnu, Yjac[0], Ytbeta);
	 YG1_evapnu( Yi) += Ytbeta[0];
	 YG2_E_evap_veva( Yi, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[2]=YS3_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_SE_rau( Yi, YTemps);
	 Yting[4]=YS1_D_aero( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp_qair( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_evap_veva(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_E_evap_veva, YNBI_E_evap_veva, YMAX_JAC_NBI, &YG1Y_E_evap_veva, Yjac[0], Ytbeta);
	 YG1_wind( Yi, YTemps-1) += Ytbeta[0];
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[1];
	 YG3_D_comb_soil( Yi, YTemps) += Ytbeta[2];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[3];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[4];
	 YG1_E_surftemp_qsol( Yi, YTemps) += Ytbeta[5];
	 YG1_E_surftemp_qair( Yi, YTemps) += Ytbeta[6];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_flux1( Yi, YTemps);
	 Yting[1]=YS1_SE_rau( Yi, YTemps);
	 Yting[2]=YS1_emis_par( Yi);
	 Yting[3]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[4]=YS1_E_flux_evapo( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp_epot( Yi, YTemps);
	 Yting[6]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[7]=YS1_E_grad_qsat( Yi, YTemps);
	 Yting[8]=YS1_E_flux_vefl( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_corr(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmatt (YNBS_E_flux_corr, YNBI_E_flux_corr, YMAX_JAC_NBI, &YG1Y_E_flux_corr, Yjac[0], Ytbeta);
	 YG1_E_flux1( Yi, YTemps) += Ytbeta[0];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[1];
	 YG1_emis_par( Yi) += Ytbeta[2];
	 YG1_E_surftemp_pt( Yi, YTemps) += Ytbeta[3];
	 YG1_E_flux_evapo( Yi, YTemps) += Ytbeta[4];
	 YG1_E_surftemp_epot( Yi, YTemps) += Ytbeta[5];
	 YG2_E_flux_flta( Yi, YTemps) += Ytbeta[6];
	 YG1_E_grad_qsat( Yi, YTemps) += Ytbeta[7];
	 YG1_E_flux_vefl( Yi, YTemps) += Ytbeta[8];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_E_flux_flta( Yi, YTemps);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_grad_qsat(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_grad_qsat, YNBI_E_grad_qsat, YMAX_JAC_NBI, &YG1Y_E_grad_qsat, Yjac[0], Ytbeta);
	 YG2_E_flux_flta( Yi, YTemps) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_evapo(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_E_flux_evapo, YNBI_E_flux_evapo, YMAX_JAC_NBI, &YG1Y_E_flux_evapo, Yjac[0], Ytbeta);
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[0];
	 YG1_E_flux1( Yi, YTemps) += Ytbeta[1];
	 YG1_E_surftemp_qsol( Yi, YTemps) += Ytbeta[2];
	 YG1_E_surftemp_qair( Yi, YTemps) += Ytbeta[3];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_fluxsens( Yi);
	 Yting[1]=YS1_E_flux_flta( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_fluxsens(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_fluxsens, YNBI_E_fluxsens, YMAX_JAC_NBI, &YG1Y_E_fluxsens, Yjac[0], Ytbeta);
	 YG1_fluxsens( Yi) += Ytbeta[0];
	 YG1_E_flux_flta( Yi, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp_pt( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_epot( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_flta(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_E_flux_flta, YNBI_E_flux_flta, YMAX_JAC_NBI, &YG1Y_E_flux_flta, Yjac[0], Ytbeta);
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[0];
	 YG1_E_flux1( Yi, YTemps) += Ytbeta[1];
	 YG1_E_surftemp_pt( Yi, YTemps) += Ytbeta[2];
	 YG1_E_surftemp_epot( Yi, YTemps) += Ytbeta[3];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_fluxlat( Yi);
	 Yting[1]=YS2_E_flux_vefl( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_fluxlat(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_fluxlat, YNBI_E_fluxlat, YMAX_JAC_NBI, &YG1Y_E_fluxlat, Yjac[0], Ytbeta);
	 YG1_fluxlat( Yi) += Ytbeta[0];
	 YG2_E_flux_vefl( Yi, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_SE_rau( Yi, YTemps);
	 Yting[1]=YS1_E_flux1( Yi, YTemps);
	 Yting[2]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_vefl(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_E_flux_vefl, YNBI_E_flux_vefl, YMAX_JAC_NBI, &YG1Y_E_flux_vefl, Yjac[0], Ytbeta);
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[0];
	 YG1_E_flux1( Yi, YTemps) += Ytbeta[1];
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[2];
	 YG1_E_surftemp_qsol( Yi, YTemps) += Ytbeta[3];
	 YG1_E_surftemp_qair( Yi, YTemps) += Ytbeta[4];
	 YG2_D_comb_veg( Yi, 12, YTemps) += Ytbeta[5];
	 YG4_D_comb_soil( Yi, YTemps) += Ytbeta[6];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_netrad( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_netrad(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_netrad, YNBI_E_netrad, YMAX_JAC_NBI, &YG1Y_E_netrad, Yjac[0], Ytbeta);
	 YG2_E_beg_netrad( Yi, YTemps) += Ytbeta[0];
	 YG1_netrad( Yi) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[1]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[2]=YS1_E_flux_tslw( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_net(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_E_flux_net, YNBI_E_flux_net, YMAX_JAC_NBI, &YG1Y_E_flux_net, Yjac[0], Ytbeta);
	 YG1_F_lwdown( Yi, YTemps-1) += Ytbeta[0];
	 YG1_I_swnet( Yi, YTemps-1) += Ytbeta[1];
	 YG1_E_flux_tslw( Yi, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp_qsol( Yi, YTemps);
	 Yting[2]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[3]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_qair( Yi, YTemps);
	 Yting[5]=YS1_F_qair( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux_qsurf(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_E_flux_qsurf, YNBI_E_flux_qsurf, YMAX_JAC_NBI, &YG1Y_E_flux_qsurf, Yjac[0], Ytbeta);
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[0];
	 YG1_E_surftemp_qsol( Yi, YTemps) += Ytbeta[1];
	 YG2_D_comb_veg( Yi, 12, YTemps) += Ytbeta[2];
	 YG4_D_comb_soil( Yi, YTemps) += Ytbeta[3];
	 YG1_E_surftemp_qair( Yi, YTemps) += Ytbeta[4];
	 YG1_F_qair( Yi, YTemps) += Ytbeta[5];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 Yting[3]=YS1_F_lwdown( Yi, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_flux_tslw(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_E_flux_tslw, YNBI_E_flux_tslw, YMAX_JAC_NBI, &YG1Y_E_flux_tslw, Yjac[0], Ytbeta);
	 YG1_emis_par( Yi) += Ytbeta[0];
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[1];
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[2];
	 YG1_F_lwdown( Yi, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_flux1(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_flux1, YNBI_E_flux1, YMAX_JAC_NBI, &YG1Y_E_flux1, Yjac[0], Ytbeta);
	 YG1_wind( Yi, YTemps-1) += Ytbeta[0];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_F_qair( Yi, YTemps-1);
	 Yting[2]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[3]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[6]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[7]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[9]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[10]=YS1_E_surftemp_qsol( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_qair(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );
	 Yvsmatt (YNBS_E_surftemp_qair, YNBI_E_surftemp_qair, YMAX_JAC_NBI, &YG1Y_E_surftemp_qair, Yjac[0], Ytbeta);
	 YG1_E_surftemp1( Yi, YTemps) += Ytbeta[0];
	 YG1_F_qair( Yi, YTemps-1) += Ytbeta[1];
	 YG3_E_surftemp2( Yi, YTemps) += Ytbeta[2];
	 YG2_E_surftemp2( Yi, YTemps) += Ytbeta[3];
	 YG4_E_surftemp3( Yi, YTemps) += Ytbeta[4];
	 YG3_E_surftemp3( Yi, YTemps) += Ytbeta[5];
	 YG1_E_surftemp4( Yi, YTemps) += Ytbeta[6];
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[7];
	 YG2_D_comb_veg( Yi, 12, YTemps) += Ytbeta[8];
	 YG4_D_comb_soil( Yi, YTemps) += Ytbeta[9];
	 YG1_E_surftemp_qsol( Yi, YTemps) += Ytbeta[10];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS1_E_surftemp4( Yi, YTemps);
	 Yting[4]=YS1_E_surftemp_pt( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_epot(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_E_surftemp_epot, YNBI_E_surftemp_epot, YMAX_JAC_NBI, &YG1Y_E_surftemp_epot, Yjac[0], Ytbeta);
	 YG1_E_surftemp1( Yi, YTemps) += Ytbeta[0];
	 YG1_E_surftemp2( Yi, YTemps) += Ytbeta[1];
	 YG2_E_surftemp3( Yi, YTemps) += Ytbeta[2];
	 YG1_E_surftemp4( Yi, YTemps) += Ytbeta[3];
	 YG1_E_surftemp_pt( Yi, YTemps) += Ytbeta[4];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp4( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp_qsol(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_E_surftemp_qsol, YNBI_E_surftemp_qsol, YMAX_JAC_NBI, &YG1Y_E_surftemp_qsol, Yjac[0], Ytbeta);
	 YG2_E_beg_qsol( Yi, YTemps) += Ytbeta[0];
	 YG3_E_beg_qsol( Yi, YTemps) += Ytbeta[1];
	 YG1_E_surftemp4( Yi, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_E_surftemp_pt( Yi, YTemps);
	 Yting[1]=YS1_temp_sol( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_tempsol(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_tempsol, YNBI_E_tempsol, YMAX_JAC_NBI, &YG1Y_E_tempsol, Yjac[0], Ytbeta);
	 YG2_E_surftemp_pt( Yi, YTemps) += Ytbeta[0];
	 YG1_temp_sol( Yi) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp4( Yi, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_surftemp_pt(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_surftemp_pt, YNBI_E_surftemp_pt, YMAX_JAC_NBI, &YG1Y_E_surftemp_pt, Yjac[0], Ytbeta);
	 YG1_E_beg_qsol( Yi, YTemps) += Ytbeta[0];
	 YG1_E_surftemp4( Yi, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_E_beg_netrad( Yi, YTemps);
	 Yting[1]=YS1_E_surftemp3( Yi, YTemps);
	 Yting[2]=YS2_E_surftemp3( Yi, YTemps);
	 Yting[3]=YS3_E_surftemp3( Yi, YTemps);
	 Yting[4]=YS4_E_surftemp3( Yi, YTemps);
	 Yting[5]=YS1_E_surftemp2( Yi, YTemps);
	 Yting[6]=YS2_E_surftemp2( Yi, YTemps);
	 Yting[7]=YS3_E_surftemp2( Yi, YTemps);
	 Yting[8]=YS2_T_coef_diff( Yi, YTemps-1);
	 Yting[9]=YS1_T_coef_diff( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp4(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_E_surftemp4, YNBI_E_surftemp4, YMAX_JAC_NBI, &YG1Y_E_surftemp4, Yjac[0], Ytbeta);
	 YG2_E_beg_netrad( Yi, YTemps) += Ytbeta[0];
	 YG1_E_surftemp3( Yi, YTemps) += Ytbeta[1];
	 YG2_E_surftemp3( Yi, YTemps) += Ytbeta[2];
	 YG3_E_surftemp3( Yi, YTemps) += Ytbeta[3];
	 YG4_E_surftemp3( Yi, YTemps) += Ytbeta[4];
	 YG1_E_surftemp2( Yi, YTemps) += Ytbeta[5];
	 YG2_E_surftemp2( Yi, YTemps) += Ytbeta[6];
	 YG3_E_surftemp2( Yi, YTemps) += Ytbeta[7];
	 YG2_T_coef_diff( Yi, YTemps-1) += Ytbeta[8];
	 YG1_T_coef_diff( Yi, YTemps-1) += Ytbeta[9];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS3_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[7]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[8]=YS1_I_peqAcoef( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YE_surftemp3(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmatt (YNBS_E_surftemp3, YNBI_E_surftemp3, YMAX_JAC_NBI, &YG1Y_E_surftemp3, Yjac[0], Ytbeta);
	 YG1_emis_par( Yi) += Ytbeta[0];
	 YG1_E_beg_qsol( Yi, YTemps) += Ytbeta[1];
	 YG1_E_surftemp1( Yi, YTemps) += Ytbeta[2];
	 YG1_I_petAcoef( Yi) += Ytbeta[3];
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[4];
	 YG3_E_beg_qsol( Yi, YTemps) += Ytbeta[5];
	 YG4_D_comb_soil( Yi, YTemps) += Ytbeta[6];
	 YG2_D_comb_veg( Yi, 12, YTemps) += Ytbeta[7];
	 YG1_I_peqAcoef( Yi) += Ytbeta[8];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_I_petBcoef( Yi, YTemps-1);
	 Yting[1]=YS1_E_beg_qsol( Yi, YTemps);
	 Yting[2]=YS1_E_surftemp1( Yi, YTemps);
	 Yting[3]=YS1_I_petAcoef( Yi);
	 Yting[4]=YS2_D_comb_soil( Yi, YTemps);
	 Yting[5]=YS2_E_beg_qsol( Yi, YTemps);
	 Yting[6]=YS2_D_comb_veg( Yi, 12, YTemps);
	 Yting[7]=YS4_D_comb_soil( Yi, YTemps);
	 Yting[8]=YS1_I_peqBcoef( Yi, YTemps-1);
	 Yting[9]=YS1_I_peqAcoef( Yi);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_surftemp2(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_E_surftemp2, YNBI_E_surftemp2, YMAX_JAC_NBI, &YG1Y_E_surftemp2, Yjac[0], Ytbeta);
	 YG1_I_petBcoef( Yi, YTemps-1) += Ytbeta[0];
	 YG1_E_beg_qsol( Yi, YTemps) += Ytbeta[1];
	 YG1_E_surftemp1( Yi, YTemps) += Ytbeta[2];
	 YG1_I_petAcoef( Yi) += Ytbeta[3];
	 YG2_D_comb_soil( Yi, YTemps) += Ytbeta[4];
	 YG2_E_beg_qsol( Yi, YTemps) += Ytbeta[5];
	 YG2_D_comb_veg( Yi, 12, YTemps) += Ytbeta[6];
	 YG4_D_comb_soil( Yi, YTemps) += Ytbeta[7];
	 YG1_I_peqBcoef( Yi, YTemps-1) += Ytbeta[8];
	 YG1_I_peqAcoef( Yi) += Ytbeta[9];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_wind( Yi, YTemps-1);
	 Yting[1]=YS1_D_aero( Yi, YTemps);
	 Yting[2]=YS1_SE_rau( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_surftemp1(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_E_surftemp1, YNBI_E_surftemp1, YMAX_JAC_NBI, &YG1Y_E_surftemp1, Yjac[0], Ytbeta);
	 YG1_wind( Yi, YTemps-1) += Ytbeta[0];
	 YG1_D_aero( Yi, YTemps) += Ytbeta[1];
	 YG1_SE_rau( Yi, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_F_lwdown( Yi, YTemps-1);
	 Yting[2]=YS1_I_swnet( Yi, YTemps-1);
	 Yting[3]=YS1_E_tempsol( Yi, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YE_beg_netrad(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_E_beg_netrad, YNBI_E_beg_netrad, YMAX_JAC_NBI, &YG1Y_E_beg_netrad, Yjac[0], Ytbeta);
	 YG1_emis_par( Yi) += Ytbeta[0];
	 YG1_F_lwdown( Yi, YTemps-1) += Ytbeta[1];
	 YG1_I_swnet( Yi, YTemps-1) += Ytbeta[2];
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 Yting[2]=YS1_D_qsatt( Yi, YTemps);
	 Yting[3]=YS1_E_dev_qsol( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_beg_qsol(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_E_beg_qsol, YNBI_E_beg_qsol, YMAX_JAC_NBI, &YG1Y_E_beg_qsol, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];
	 YG1_D_qsatt( Yi, YTemps) += Ytbeta[2];
	 YG1_E_dev_qsol( Yi, YTemps) += Ytbeta[3];

}
for(Yi=YA1_SkjindexEi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps-1);
	 Yting[1]=YS1_F_pb( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_dev_qsol(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_dev_qsol, YNBI_E_dev_qsol, YMAX_JAC_NBI, &YG1Y_E_dev_qsol, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps-1) += Ytbeta[0];
	 YG1_F_pb( Yi, YTemps-1) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_SnvmEi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmEi; ++Yi)
for(Yj=0; Yj<YA2_SnvmEi; ++Yj)
{
	 Yting[0]=YS1_D_comb_veg( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_comb_verif( Yi, Yj, YTemps);
	 Yting[2]=YS3_E_evap_veva( Yi, YTemps);
	 YE_evap_trans(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmEi; ++Yi)
for(Yj=0; Yj<YA2_SnvmEi; ++Yj)
{
	 Yting[0]=YS1_transpir( Yi, Yj);
	 Yting[1]=YS2_E_evap_trans( Yi, Yj, YTemps);
	 YE_transpir(Yi, Yj)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SnvmEi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmEi; ++Yi)
for(Yj=0; Yj<YA2_SnvmEi; ++Yj)
{
	 Yting[0]=YS1_D_comb_veg( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_comb_verif( Yi, Yj, YTemps);
	 Yting[2]=YS3_E_evap_veva( Yi, YTemps);
	 Ytbeta[0]=YG1_D_comb_veg( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_D_comb_verif( Yi, Yj, YTemps);
	 Ytbeta[2]=YG3_E_evap_veva( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_evap_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_E_evap_trans, YNBI_E_evap_trans, YMAX_JAC_NBI, &YG1Y_E_evap_trans, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmEi; ++Yi)
for(Yj=0; Yj<YA2_SnvmEi; ++Yj)
{
	 Yting[0]=YS1_transpir( Yi, Yj);
	 Yting[1]=YS2_E_evap_trans( Yi, Yj, YTemps);
	 Ytbeta[0]=YG1_transpir( Yi, Yj);
	 Ytbeta[1]=YG2_E_evap_trans( Yi, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_transpir(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_transpir, YNBI_E_transpir, YMAX_JAC_NBI, &YG1Y_E_transpir, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmEi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmEi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmEi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_transpir( Yi, Yj);
	 Yting[1]=YS2_E_evap_trans( Yi, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_transpir(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_transpir, YNBI_E_transpir, YMAX_JAC_NBI, &YG1Y_E_transpir, Yjac[0], Ytbeta);
	 YG1_transpir( Yi, Yj) += Ytbeta[0];
	 YG2_E_evap_trans( Yi, Yj, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SnvmEi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmEi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_D_comb_veg( Yi, Yj, YTemps);
	 Yting[1]=YS1_D_comb_verif( Yi, Yj, YTemps);
	 Yting[2]=YS3_E_evap_veva( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YE_evap_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_E_evap_trans, YNBI_E_evap_trans, YMAX_JAC_NBI, &YG1Y_E_evap_trans, Yjac[0], Ytbeta);
	 YG1_D_comb_veg( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_D_comb_verif( Yi, Yj, YTemps) += Ytbeta[1];
	 YG3_E_evap_veva( Yi, YTemps) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SdouzeEi()
{
	 YA1=1; YA2=12; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SdouzeEi; ++Yi)
for(Yj=0; Yj<YA2_SdouzeEi; ++Yj)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_E_emis_planck( Yi, Yj-1, YTemps);
	 YE_emis_planck(Yi, Yj)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SdouzeEi()
{
	 YA1=1; YA2=12; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SdouzeEi; ++Yi)
for(Yj=0; Yj<YA2_SdouzeEi; ++Yj)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_E_emis_planck( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG1_E_emis_planck( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_planck(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_E_emis_planck, YNBI_E_emis_planck, YMAX_JAC_NBI, &YG1Y_E_emis_planck, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SdouzeEi()
{
	 YA1=1; YA2=12; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SdouzeEi-1; Yi>=0; --Yi)
for(Yj=YA2_SdouzeEi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_E_emis_planck( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_planck(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_E_emis_planck, YNBI_E_emis_planck, YMAX_JAC_NBI, &YG1Y_E_emis_planck, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_E_emis_planck( Yi, Yj-1, YTemps) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_SkjindexE2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexE2i; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_emis_planck( Yi, 11, YTemps);
	 Yting[2]=YS1_F_lwdown( Yi, YTemps);
	 YE_emis_rad(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexE2i; ++Yi)
{
	 Yting[0]=YS1_E_emis_rad( Yi, YTemps);
	 YE_emis_tempsol(Yi)->forward( Yting[0] );

}

	 return(0);
}

 int Ylinward_space_SkjindexE2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexE2i; ++Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_emis_planck( Yi, 11, YTemps);
	 Yting[2]=YS1_F_lwdown( Yi, YTemps);
	 Ytbeta[0]=YG1_emis_par( Yi);
	 Ytbeta[1]=YG1_E_emis_planck( Yi, 11, YTemps);
	 Ytbeta[2]=YG1_F_lwdown( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_rad(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_E_emis_rad, YNBI_E_emis_rad, YMAX_JAC_NBI, &YG1Y_E_emis_rad, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexE2i; ++Yi)
{
	 Yting[0]=YS1_E_emis_rad( Yi, YTemps);
	 Ytbeta[0]=YG1_E_emis_rad( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_tempsol(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_E_emis_tempsol, YNBI_E_emis_tempsol, YMAX_JAC_NBI, &YG1Y_E_emis_tempsol, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexE2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexE2i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_emis_rad( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_tempsol(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_E_emis_tempsol, YNBI_E_emis_tempsol, YMAX_JAC_NBI, &YG1Y_E_emis_tempsol, Yjac[0], Ytbeta);
	 YG1_E_emis_rad( Yi, YTemps) += Ytbeta[0];

}
for(Yi=YA1_SkjindexE2i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_emis_par( Yi);
	 Yting[1]=YS1_E_emis_planck( Yi, 11, YTemps);
	 Yting[2]=YS1_F_lwdown( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YE_emis_rad(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_E_emis_rad, YNBI_E_emis_rad, YMAX_JAC_NBI, &YG1Y_E_emis_rad, Yjac[0], Ytbeta);
	 YG1_emis_par( Yi) += Ytbeta[0];
	 YG1_E_emis_planck( Yi, 11, YTemps) += Ytbeta[1];
	 YG1_F_lwdown( Yi, YTemps) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SkjindexHis()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS2_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 YH_snow_i(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_i( Yi, YTemps);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_E_evap_veva( Yi, YTemps);
	 Yting[3]=YS1_E_evapnu( Yi, YTemps);
	 YH_snow(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow( Yi, YTemps);
	 YH_snow_melt_i(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS1_H_snow( Yi, YTemps);
	 Yting[2]=YS1_S_fracnobio( Yi);
	 Yting[3]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow_melt_i( Yi, YTemps);
	 YH_snow_melt(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS2_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_H_snow_age( Yi, YTemps-1);
	 Yting[4]=YS2_H_snow_age( Yi, YTemps-1);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 YH_snow_age(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_SkjindexHis()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS2_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Ytbeta[0]=YG1_H_snow_melt( Yi, YTemps-1);
	 Ytbeta[1]=YG2_S_fracnobio( Yi);
	 Ytbeta[2]=YG1_F_precip_snow( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_snow_i(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_H_snow_i, YNBI_H_snow_i, YMAX_JAC_NBI, &YG1Y_H_snow_i, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_i( Yi, YTemps);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_E_evap_veva( Yi, YTemps);
	 Yting[3]=YS1_E_evapnu( Yi, YTemps);
	 Ytbeta[0]=YG1_H_snow_i( Yi, YTemps);
	 Ytbeta[1]=YG1_S_fracnobio( Yi);
	 Ytbeta[2]=YG1_E_evap_veva( Yi, YTemps);
	 Ytbeta[3]=YG1_E_evapnu( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_H_snow, YNBI_H_snow, YMAX_JAC_NBI, &YG1Y_H_snow, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow( Yi, YTemps);
	 Ytbeta[0]=YG1_H_snow_melt( Yi, YTemps-1);
	 Ytbeta[1]=YG1_S_fracnobio( Yi);
	 Ytbeta[2]=YG1_F_precip_snow( Yi, YTemps-1);
	 Ytbeta[3]=YG1_F_precip( Yi, YTemps-1);
	 Ytbeta[4]=YG1_H_snow( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_snow_melt_i(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_snow_melt_i, YNBI_H_snow_melt_i, YMAX_JAC_NBI, &YG1Y_H_snow_melt_i, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS1_H_snow( Yi, YTemps);
	 Yting[2]=YS1_S_fracnobio( Yi);
	 Yting[3]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow_melt_i( Yi, YTemps);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps);
	 Ytbeta[1]=YG1_H_snow( Yi, YTemps);
	 Ytbeta[2]=YG1_S_fracnobio( Yi);
	 Ytbeta[3]=YG1_T_coef_diff( Yi, YTemps-1);
	 Ytbeta[4]=YG1_H_snow_melt_i( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow_melt(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_snow_melt, YNBI_H_snow_melt, YMAX_JAC_NBI, &YG1Y_H_snow_melt, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexHis; ++Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS2_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_H_snow_age( Yi, YTemps-1);
	 Yting[4]=YS2_H_snow_age( Yi, YTemps-1);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 Ytbeta[0]=YG1_H_snow_melt( Yi, YTemps);
	 Ytbeta[1]=YG2_H_snow_melt( Yi, YTemps);
	 Ytbeta[2]=YG1_F_precip_snow( Yi, YTemps-1);
	 Ytbeta[3]=YG1_H_snow_age( Yi, YTemps-1);
	 Ytbeta[4]=YG2_H_snow_age( Yi, YTemps-1);
	 Ytbeta[5]=YG1_E_tempsol( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow_age(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_H_snow_age, YNBI_H_snow_age, YMAX_JAC_NBI, &YG1Y_H_snow_age, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexHis()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexHis-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS2_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_H_snow_age( Yi, YTemps-1);
	 Yting[4]=YS2_H_snow_age( Yi, YTemps-1);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow_age(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_H_snow_age, YNBI_H_snow_age, YMAX_JAC_NBI, &YG1Y_H_snow_age, Yjac[0], Ytbeta);
	 YG1_H_snow_melt( Yi, YTemps) += Ytbeta[0];
	 YG2_H_snow_melt( Yi, YTemps) += Ytbeta[1];
	 YG1_F_precip_snow( Yi, YTemps-1) += Ytbeta[2];
	 YG1_H_snow_age( Yi, YTemps-1) += Ytbeta[3];
	 YG2_H_snow_age( Yi, YTemps-1) += Ytbeta[4];
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[5];

}
for(Yi=YA1_SkjindexHis-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS1_H_snow( Yi, YTemps);
	 Yting[2]=YS1_S_fracnobio( Yi);
	 Yting[3]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow_melt_i( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow_melt(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_snow_melt, YNBI_H_snow_melt, YMAX_JAC_NBI, &YG1Y_H_snow_melt, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[0];
	 YG1_H_snow( Yi, YTemps) += Ytbeta[1];
	 YG1_S_fracnobio( Yi) += Ytbeta[2];
	 YG1_T_coef_diff( Yi, YTemps-1) += Ytbeta[3];
	 YG1_H_snow_melt_i( Yi, YTemps) += Ytbeta[4];

}
for(Yi=YA1_SkjindexHis-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_H_snow( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_snow_melt_i(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_snow_melt_i, YNBI_H_snow_melt_i, YMAX_JAC_NBI, &YG1Y_H_snow_melt_i, Yjac[0], Ytbeta);
	 YG1_H_snow_melt( Yi, YTemps-1) += Ytbeta[0];
	 YG1_S_fracnobio( Yi) += Ytbeta[1];
	 YG1_F_precip_snow( Yi, YTemps-1) += Ytbeta[2];
	 YG1_F_precip( Yi, YTemps-1) += Ytbeta[3];
	 YG1_H_snow( Yi, YTemps) += Ytbeta[4];

}
for(Yi=YA1_SkjindexHis-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_snow_i( Yi, YTemps);
	 Yting[1]=YS1_S_fracnobio( Yi);
	 Yting[2]=YS1_E_evap_veva( Yi, YTemps);
	 Yting[3]=YS1_E_evapnu( Yi, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_snow(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_H_snow, YNBI_H_snow, YMAX_JAC_NBI, &YG1Y_H_snow, Yjac[0], Ytbeta);
	 YG1_H_snow_i( Yi, YTemps) += Ytbeta[0];
	 YG1_S_fracnobio( Yi) += Ytbeta[1];
	 YG1_E_evap_veva( Yi, YTemps) += Ytbeta[2];
	 YG1_E_evapnu( Yi, YTemps) += Ytbeta[3];

}
for(Yi=YA1_SkjindexHis-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_snow_melt( Yi, YTemps-1);
	 Yting[1]=YS2_S_fracnobio( Yi);
	 Yting[2]=YS1_F_precip_snow( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_snow_i(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_H_snow_i, YNBI_H_snow_i, YMAX_JAC_NBI, &YG1Y_H_snow_i, Yjac[0], Ytbeta);
	 YG1_H_snow_melt( Yi, YTemps-1) += Ytbeta[0];
	 YG2_S_fracnobio( Yi) += Ytbeta[1];
	 YG1_F_precip_snow( Yi, YTemps-1) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SnvmHi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 YH_veg_var(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_H_veg_sum( Yi, Yj-1, YTemps);
	 YH_veg_sum(Yi, Yj)->forward( Yting[0], Yting[1] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_H_veg_var( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_veg_sum( Yi, 12, YTemps);
	 YH_veg_niv(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_niv( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_veg_niv( Yi, Yj, YTemps);
	 Yting[4]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS2_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[8]=0; 
	 else 
	 Yting[8]=YS4_H_veg_water( Yi, Yj-1, YTemps);
	 YH_veg_water(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_water( Yi, 12, YTemps);
	 Yting[3]=YS2_H_veg_water( Yi, 12, YTemps);
	 Yting[4]=YS3_H_veg_water( Yi, 12, YTemps);
	 Yting[5]=YS4_H_veg_water( Yi, 12, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[8]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[9]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[10]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[11]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[12]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[13]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 Yting[14]=YS1_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[15]=YS4_H_soil_stress( Yi, Yj, YTemps-1);
	 Yting[16]=YS1_dpu_cste1( Yi);
	 YH_veg_water2(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 YH_veg_upd(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_water2( Yi, Yj, YTemps);
	 Yting[2]=YS4_H_veg_water2( Yi, Yj, YTemps);
	 Yting[3]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[4]=YS5_H_veg_water2( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_veg_water2( Yi, 0, YTemps);
	 Yting[6]=YS2_H_veg_water2( Yi, 0, YTemps);
	 Yting[7]=YS4_H_veg_water2( Yi, 0, YTemps);
	 Yting[8]=YS6_H_soil_verif( Yi, 0, YTemps-1);
	 Yting[9]=YS5_H_veg_water2( Yi, 0, YTemps);
	 Yting[10]=YS1_S_veget( Yi, Yj, YTemps-1);
	 YH_veg_cond(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS3_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS1_E_evap_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 YH_canop_init(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_canop_init( Yi, Yj, YTemps);
	 Yting[1]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_qsintveg( Yi, Yj);
	 YH_canop_interp(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_E_transpir( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_canop_interp( Yi, Yj, YTemps);
	 YH_soil_flx(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_H_soil_flx( Yi, Yj, YTemps);
	 Yting[3]=YS3_H_snow( Yi, YTemps);
	 Yting[4]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 YH_soil_flxcorr(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_cond( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_cond( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[4]=YS2_H_soil_flx( Yi, Yj, YTemps);
	 Yting[5]=YS4_SE_routing( Yi);
	 Yting[6]=YS3_SE_routing( Yi);
	 Yting[7]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[8]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 YH_soil_trans(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_trans( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_trans( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_veg_cond( Yi, Yj, YTemps);
	 Yting[3]=YS5_H_veg_cond( Yi, Yj, YTemps);
	 Yting[4]=YS4_H_veg_cond( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[6]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[7]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS1_dpu_cste1( Yi);
	 YH_soil_runoff(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[3]=YS4_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[4]=YS5_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_min_drain( Yi);
	 Yting[7]=YS1_max_drain( Yi);
	 Yting[8]=YS1_exp_drain( Yi);
	 Yting[9]=YS1_dpu_cste1( Yi);
	 YH_soil_dlock(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_diff( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_diff( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 YH_soil_diff(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS4_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_diff( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[5]=YS1_dpu_cste1( Yi);
	 YH_soil_dsp(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS6_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[5]=YS5_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[9]=YS1_mx_eau_eau( Yi);
	 Yting[10]=YS1_dpu_cste1( Yi);
	 Yting[11]=YS1_bqsb_c( 0);
	 Yting[12]=YS1_gqsb_c( 0);
	 Yting[13]=YS1_bqsb_init( Yi, Yj);
	 Yting[14]=YS1_gqsb_init( Yi, Yj);
	 YH_soil_verif(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_mean( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_mean( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 YH_soil_mean(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS5_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS7_H_soil_verif( Yi, Yj, YTemps);
	 Yting[6]=YS1_dpu_cste1( Yi);
	 YH_soil_dsp2(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS4_SE_routing( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_runofft( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_verif( Yi, Yj, YTemps);
	 Yting[4]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 YH_soil_runofft(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_dsg1( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, Yj, YTemps-1);
	 YH_soil_dsg1(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SnvmHi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_H_veg_upd( Yi, Yj, YTemps-1);
	 Ytbeta[2]=YG2_H_canop_interp( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_veg_var(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_H_veg_var, YNBI_H_veg_var, YMAX_JAC_NBI, &YG1Y_H_veg_var, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_H_veg_sum( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG1_H_veg_var( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG1_H_veg_sum( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_veg_sum(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_veg_sum, YNBI_H_veg_sum, YMAX_JAC_NBI, &YG1Y_H_veg_sum, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_H_veg_var( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Ytbeta[0]=YG1_H_veg_var( Yi, Yj, YTemps);
	 Ytbeta[1]=YG2_H_soil_verif( Yi, Yj, YTemps-1);
	 Ytbeta[2]=YG2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG2_H_veg_var( Yi, Yj, YTemps);
	 Ytbeta[4]=YG1_H_veg_sum( Yi, 12, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_veg_niv(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_veg_niv, YNBI_H_veg_niv, YMAX_JAC_NBI, &YG1Y_H_veg_niv, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_niv( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_veg_niv( Yi, Yj, YTemps);
	 Yting[4]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS2_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[8]=0; 
	 else 
	 Yting[8]=YS4_H_veg_water( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG1_H_veg_sum( Yi, 12, YTemps);
	 Ytbeta[1]=YG1_H_veg_var( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_H_veg_niv( Yi, Yj, YTemps);
	 Ytbeta[3]=YG2_H_veg_niv( Yi, Yj, YTemps);
	 Ytbeta[4]=YG3_H_veg_niv( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[5]=0; 
	 else 
	 Ytbeta[5]=YG1_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[6]=0; 
	 else 
	 Ytbeta[6]=YG2_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[7]=0; 
	 else 
	 Ytbeta[7]=YG3_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[8]=0; 
	 else 
	 Ytbeta[8]=YG4_H_veg_water( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 88*sizeof(double));
	 YH_veg_water(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmat (YNBS_H_veg_water, YNBI_H_veg_water, YMAX_JAC_NBI, &YG1Y_H_veg_water, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_water( Yi, 12, YTemps);
	 Yting[3]=YS2_H_veg_water( Yi, 12, YTemps);
	 Yting[4]=YS3_H_veg_water( Yi, 12, YTemps);
	 Yting[5]=YS4_H_veg_water( Yi, 12, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[8]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[9]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[10]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[11]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[12]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[13]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 Yting[14]=YS1_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[15]=YS4_H_soil_stress( Yi, Yj, YTemps-1);
	 Yting[16]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG1_H_veg_sum( Yi, 12, YTemps);
	 Ytbeta[1]=YG1_H_veg_var( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_H_veg_water( Yi, 12, YTemps);
	 Ytbeta[3]=YG2_H_veg_water( Yi, 12, YTemps);
	 Ytbeta[4]=YG3_H_veg_water( Yi, 12, YTemps);
	 Ytbeta[5]=YG4_H_veg_water( Yi, 12, YTemps);
	 Ytbeta[6]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[7]=YG1_H_veg_upd( Yi, Yj, YTemps-1);
	 Ytbeta[8]=YG2_H_soil_verif( Yi, Yj, YTemps-1);
	 Ytbeta[9]=YG2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Ytbeta[10]=YG2_H_canop_interp( Yi, Yj, YTemps-1);
	 Ytbeta[11]=YG6_H_soil_verif( Yi, Yj, YTemps-1);
	 Ytbeta[12]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[13]=YG3_H_veg_niv( Yi, Yj, YTemps);
	 Ytbeta[14]=YG1_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Ytbeta[15]=YG4_H_soil_stress( Yi, Yj, YTemps-1);
	 Ytbeta[16]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_veg_water2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16] );
	 Yvsmat (YNBS_H_veg_water2, YNBI_H_veg_water2, YMAX_JAC_NBI, &YG1Y_H_veg_water2, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_S_veget( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_H_veg_upd( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_veg_upd(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_H_veg_upd, YNBI_H_veg_upd, YMAX_JAC_NBI, &YG1Y_H_veg_upd, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_water2( Yi, Yj, YTemps);
	 Yting[2]=YS4_H_veg_water2( Yi, Yj, YTemps);
	 Yting[3]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[4]=YS5_H_veg_water2( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_veg_water2( Yi, 0, YTemps);
	 Yting[6]=YS2_H_veg_water2( Yi, 0, YTemps);
	 Yting[7]=YS4_H_veg_water2( Yi, 0, YTemps);
	 Yting[8]=YS6_H_soil_verif( Yi, 0, YTemps-1);
	 Yting[9]=YS5_H_veg_water2( Yi, 0, YTemps);
	 Yting[10]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_H_veg_water2( Yi, Yj, YTemps);
	 Ytbeta[1]=YG2_H_veg_water2( Yi, Yj, YTemps);
	 Ytbeta[2]=YG4_H_veg_water2( Yi, Yj, YTemps);
	 Ytbeta[3]=YG6_H_soil_verif( Yi, Yj, YTemps-1);
	 Ytbeta[4]=YG5_H_veg_water2( Yi, Yj, YTemps);
	 Ytbeta[5]=YG1_H_veg_water2( Yi, 0, YTemps);
	 Ytbeta[6]=YG2_H_veg_water2( Yi, 0, YTemps);
	 Ytbeta[7]=YG4_H_veg_water2( Yi, 0, YTemps);
	 Ytbeta[8]=YG6_H_soil_verif( Yi, 0, YTemps-1);
	 Ytbeta[9]=YG5_H_veg_water2( Yi, 0, YTemps);
	 Ytbeta[10]=YG1_S_veget( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_veg_cond(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );
	 Yvsmat (YNBS_H_veg_cond, YNBI_H_veg_cond, YMAX_JAC_NBI, &YG1Y_H_veg_cond, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS3_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS1_E_evap_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Ytbeta[0]=YG3_H_veg_water2( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_E_evap_trans( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG1_F_precip( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_canop_init(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_H_canop_init, YNBI_H_canop_init, YMAX_JAC_NBI, &YG1Y_H_canop_init, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_canop_init( Yi, Yj, YTemps);
	 Yting[1]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_qsintveg( Yi, Yj);
	 Ytbeta[0]=YG1_H_canop_init( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_S_qsintm( Yi, Yj, YTemps-1);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG1_F_precip( Yi, YTemps-1);
	 Ytbeta[4]=YG1_qsintveg( Yi, Yj);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_canop_interp(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_canop_interp, YNBI_H_canop_interp, YMAX_JAC_NBI, &YG1Y_H_canop_interp, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_E_transpir( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_canop_interp( Yi, Yj, YTemps);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_E_transpir( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_H_canop_interp( Yi, Yj, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_flx(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_H_soil_flx, YNBI_H_soil_flx, YMAX_JAC_NBI, &YG1Y_H_soil_flx, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_H_soil_flx( Yi, Yj, YTemps);
	 Yting[3]=YS3_H_snow( Yi, YTemps);
	 Yting[4]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[0]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[1]=YG1_S_veget( Yi, 0, YTemps-1);
	 Ytbeta[2]=YG1_H_soil_flx( Yi, Yj, YTemps);
	 Ytbeta[3]=YG3_H_snow( Yi, YTemps);
	 Ytbeta[4]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_flxcorr(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_soil_flxcorr, YNBI_H_soil_flxcorr, YMAX_JAC_NBI, &YG1Y_H_soil_flxcorr, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_cond( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_cond( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[4]=YS2_H_soil_flx( Yi, Yj, YTemps);
	 Yting[5]=YS4_SE_routing( Yi);
	 Yting[6]=YS3_SE_routing( Yi);
	 Yting[7]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[8]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[0]=YG1_H_veg_cond( Yi, Yj, YTemps);
	 Ytbeta[1]=YG2_H_veg_cond( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Ytbeta[3]=YG1_S_veget( Yi, 0, YTemps-1);
	 Ytbeta[4]=YG2_H_soil_flx( Yi, Yj, YTemps);
	 Ytbeta[5]=YG4_SE_routing( Yi);
	 Ytbeta[6]=YG3_SE_routing( Yi);
	 Ytbeta[7]=YG3_H_snow_melt( Yi, YTemps);
	 Ytbeta[8]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmat (YNBS_H_soil_trans, YNBI_H_soil_trans, YMAX_JAC_NBI, &YG1Y_H_soil_trans, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_trans( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_trans( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_veg_cond( Yi, Yj, YTemps);
	 Yting[3]=YS5_H_veg_cond( Yi, Yj, YTemps);
	 Yting[4]=YS4_H_veg_cond( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[6]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[7]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG1_H_soil_trans( Yi, Yj, YTemps);
	 Ytbeta[1]=YG2_H_soil_trans( Yi, Yj, YTemps);
	 Ytbeta[2]=YG3_H_veg_cond( Yi, Yj, YTemps);
	 Ytbeta[3]=YG5_H_veg_cond( Yi, Yj, YTemps);
	 Ytbeta[4]=YG4_H_veg_cond( Yi, Yj, YTemps);
	 Ytbeta[5]=YG1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Ytbeta[6]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[7]=YG3_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[8]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 154*sizeof(double));
	 YH_soil_runoff(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmat (YNBS_H_soil_runoff, YNBI_H_soil_runoff, YMAX_JAC_NBI, &YG1Y_H_soil_runoff, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[3]=YS4_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[4]=YS5_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_min_drain( Yi);
	 Yting[7]=YS1_max_drain( Yi);
	 Yting[8]=YS1_exp_drain( Yi);
	 Yting[9]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG1_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[1]=YG2_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[2]=YG3_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[3]=YG4_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[4]=YG5_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[5]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[6]=YG1_min_drain( Yi);
	 Ytbeta[7]=YG1_max_drain( Yi);
	 Ytbeta[8]=YG1_exp_drain( Yi);
	 Ytbeta[9]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_soil_dlock(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_H_soil_dlock, YNBI_H_soil_dlock, YMAX_JAC_NBI, &YG1Y_H_soil_dlock, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_diff( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_diff( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 Ytbeta[0]=YG1_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[1]=YG3_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_H_soil_diff( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[4]=0; 
	 else 
	 Ytbeta[4]=YG2_H_soil_diff( Yi, Yj-1, YTemps);
	 Ytbeta[5]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[6]=YG1_H_veg_upd( Yi, Yj, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_soil_diff(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_H_soil_diff, YNBI_H_soil_diff, YMAX_JAC_NBI, &YG1Y_H_soil_diff, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS4_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_diff( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[5]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG4_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_H_soil_diff( Yi, 12, YTemps);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[4]=YG3_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[5]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_dsp(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_H_soil_dsp, YNBI_H_soil_dsp, YMAX_JAC_NBI, &YG1Y_H_soil_dsp, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS6_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[5]=YS5_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[9]=YS1_mx_eau_eau( Yi);
	 Yting[10]=YS1_dpu_cste1( Yi);
	 Yting[11]=YS1_bqsb_c( 0);
	 Yting[12]=YS1_gqsb_c( 0);
	 Yting[13]=YS1_bqsb_init( Yi, Yj);
	 Yting[14]=YS1_gqsb_init( Yi, Yj);
	 Ytbeta[0]=YG6_H_soil_runoff( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[2]=YG2_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[3]=YG2_H_soil_dsp( Yi, Yj, YTemps);
	 Ytbeta[4]=YG1_H_soil_dsp( Yi, Yj, YTemps);
	 Ytbeta[5]=YG5_H_soil_dlock( Yi, Yj, YTemps);
	 Ytbeta[6]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[7]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[8]=YG3_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[9]=YG1_mx_eau_eau( Yi);
	 Ytbeta[10]=YG1_dpu_cste1( Yi);
	 Ytbeta[11]=YG1_bqsb_c( 0);
	 Ytbeta[12]=YG1_gqsb_c( 0);
	 Ytbeta[13]=YG1_bqsb_init( Yi, Yj);
	 Ytbeta[14]=YG1_gqsb_init( Yi, Yj);
	 memset(Yjac, 0, 154*sizeof(double));
	 YH_soil_verif(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14] );
	 Yvsmat (YNBS_H_soil_verif, YNBI_H_soil_verif, YMAX_JAC_NBI, &YG1Y_H_soil_verif, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_mean( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_mean( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 Ytbeta[0]=YG2_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[1]=YG4_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_H_soil_mean( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[4]=0; 
	 else 
	 Ytbeta[4]=YG2_H_soil_mean( Yi, Yj-1, YTemps);
	 Ytbeta[5]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[6]=YG1_H_veg_upd( Yi, Yj, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_soil_mean(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_H_soil_mean, YNBI_H_soil_mean, YMAX_JAC_NBI, &YG1Y_H_soil_mean, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS5_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS7_H_soil_verif( Yi, Yj, YTemps);
	 Yting[6]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG5_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[2]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[3]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[4]=YG4_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[5]=YG7_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[6]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_dsp2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_H_soil_dsp2, YNBI_H_soil_dsp2, YMAX_JAC_NBI, &YG1Y_H_soil_dsp2, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS4_SE_routing( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_runofft( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_verif( Yi, Yj, YTemps);
	 Yting[4]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[0]=YG3_H_snow_melt( Yi, YTemps);
	 Ytbeta[1]=YG4_SE_routing( Yi);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG1_H_soil_runofft( Yi, Yj-1, YTemps);
	 Ytbeta[3]=YG1_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[4]=YG1_S_veget( Yi, Yj, YTemps-1);
	 Ytbeta[5]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_runofft(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_H_soil_runofft, YNBI_H_soil_runofft, YMAX_JAC_NBI, &YG1Y_H_soil_runofft, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SnvmHi; ++Yi)
for(Yj=0; Yj<YA2_SnvmHi; ++Yj)
{
	 Yting[0]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_dsg1( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, Yj, YTemps-1);
	 Ytbeta[0]=YG1_H_veg_upd( Yi, Yj, YTemps);
	 Ytbeta[1]=YG3_H_soil_verif( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[2]=0; 
	 else 
	 Ytbeta[2]=YG1_H_soil_dsg1( Yi, Yj-1, YTemps);
	 Ytbeta[3]=YG1_H_soil_dsg1( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dsg1(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_H_soil_dsg1, YNBI_H_soil_dsg1, YMAX_JAC_NBI, &YG1Y_H_soil_dsg1, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmHi()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_dsg1( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dsg1(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_H_soil_dsg1, YNBI_H_soil_dsg1, YMAX_JAC_NBI, &YG1Y_H_soil_dsg1, Yjac[0], Ytbeta);
	 YG1_H_veg_upd( Yi, Yj, YTemps) += Ytbeta[0];
	 YG3_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_soil_dsg1( Yi, Yj-1, YTemps) += Ytbeta[2];
	 YG1_H_soil_dsg1( Yi, Yj, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[1]=YS4_SE_routing( Yi);
	 if (1==0 || Yj-1<0)
	 Yting[2]=0; 
	 else 
	 Yting[2]=YS1_H_soil_runofft( Yi, Yj-1, YTemps);
	 Yting[3]=YS1_H_soil_verif( Yi, Yj, YTemps);
	 Yting[4]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_runofft(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_H_soil_runofft, YNBI_H_soil_runofft, YMAX_JAC_NBI, &YG1Y_H_soil_runofft, Yjac[0], Ytbeta);
	 YG3_H_snow_melt( Yi, YTemps) += Ytbeta[0];
	 YG4_SE_routing( Yi) += Ytbeta[1];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_soil_runofft( Yi, Yj-1, YTemps) += Ytbeta[2];
	 YG1_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[3];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[4];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[5];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS5_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS7_H_soil_verif( Yi, Yj, YTemps);
	 Yting[6]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_dsp2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_H_soil_dsp2, YNBI_H_soil_dsp2, YMAX_JAC_NBI, &YG1Y_H_soil_dsp2, Yjac[0], Ytbeta);
	 YG5_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_H_soil_mean( Yi, 12, YTemps) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[3];
	 YG4_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[4];
	 YG7_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[5];
	 YG1_dpu_cste1( Yi) += Ytbeta[6];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS4_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_mean( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_mean( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_soil_mean(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_H_soil_mean, YNBI_H_soil_mean, YMAX_JAC_NBI, &YG1Y_H_soil_mean, Yjac[0], Ytbeta);
	 YG2_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[0];
	 YG4_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_soil_mean( Yi, Yj-1, YTemps) += Ytbeta[3];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_H_soil_mean( Yi, Yj-1, YTemps) += Ytbeta[4];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[5];
	 YG1_H_veg_upd( Yi, Yj, YTemps) += Ytbeta[6];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS6_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_soil_dsp( Yi, Yj, YTemps);
	 Yting[5]=YS5_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[9]=YS1_mx_eau_eau( Yi);
	 Yting[10]=YS1_dpu_cste1( Yi);
	 Yting[11]=YS1_bqsb_c( 0);
	 Yting[12]=YS1_gqsb_c( 0);
	 Yting[13]=YS1_bqsb_init( Yi, Yj);
	 Yting[14]=YS1_gqsb_init( Yi, Yj);
	 memset(Yjac, 0, 154*sizeof(double));
	 YH_soil_verif(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14] );
	 Yvsmatt (YNBS_H_soil_verif, YNBI_H_soil_verif, YMAX_JAC_NBI, &YG1Y_H_soil_verif, Yjac[0], Ytbeta);
	 YG6_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[1];
	 YG2_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[2];
	 YG2_H_soil_dsp( Yi, Yj, YTemps) += Ytbeta[3];
	 YG1_H_soil_dsp( Yi, Yj, YTemps) += Ytbeta[4];
	 YG5_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[5];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[6];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[7];
	 YG3_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[8];
	 YG1_mx_eau_eau( Yi) += Ytbeta[9];
	 YG1_dpu_cste1( Yi) += Ytbeta[10];
	 YG1_bqsb_c( 0) += Ytbeta[11];
	 YG1_gqsb_c( 0) += Ytbeta[12];
	 YG1_bqsb_init( Yi, Yj) += Ytbeta[13];
	 YG1_gqsb_init( Yi, Yj) += Ytbeta[14];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS4_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_soil_diff( Yi, 12, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[5]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_dsp(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_H_soil_dsp, YNBI_H_soil_dsp, YMAX_JAC_NBI, &YG1Y_H_soil_dsp, Yjac[0], Ytbeta);
	 YG4_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_H_soil_diff( Yi, 12, YTemps) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[3];
	 YG3_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[4];
	 YG1_dpu_cste1( Yi) += Ytbeta[5];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_dlock( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_H_soil_diff( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS2_H_soil_diff( Yi, Yj-1, YTemps);
	 Yting[5]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_H_veg_upd( Yi, Yj, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_soil_diff(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_H_soil_diff, YNBI_H_soil_diff, YMAX_JAC_NBI, &YG1Y_H_soil_diff, Yjac[0], Ytbeta);
	 YG1_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[0];
	 YG3_H_soil_dlock( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_soil_diff( Yi, Yj-1, YTemps) += Ytbeta[3];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_H_soil_diff( Yi, Yj-1, YTemps) += Ytbeta[4];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[5];
	 YG1_H_veg_upd( Yi, Yj, YTemps) += Ytbeta[6];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[3]=YS4_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[4]=YS5_H_soil_runoff( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_min_drain( Yi);
	 Yting[7]=YS1_max_drain( Yi);
	 Yting[8]=YS1_exp_drain( Yi);
	 Yting[9]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_soil_dlock(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_H_soil_dlock, YNBI_H_soil_dlock, YMAX_JAC_NBI, &YG1Y_H_soil_dlock, Yjac[0], Ytbeta);
	 YG1_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[0];
	 YG2_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[1];
	 YG3_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[2];
	 YG4_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[3];
	 YG5_H_soil_runoff( Yi, Yj, YTemps) += Ytbeta[4];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[5];
	 YG1_min_drain( Yi) += Ytbeta[6];
	 YG1_max_drain( Yi) += Ytbeta[7];
	 YG1_exp_drain( Yi) += Ytbeta[8];
	 YG1_dpu_cste1( Yi) += Ytbeta[9];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_trans( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_trans( Yi, Yj, YTemps);
	 Yting[2]=YS3_H_veg_cond( Yi, Yj, YTemps);
	 Yting[3]=YS5_H_veg_cond( Yi, Yj, YTemps);
	 Yting[4]=YS4_H_veg_cond( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[6]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[7]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[8]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 154*sizeof(double));
	 YH_soil_runoff(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmatt (YNBS_H_soil_runoff, YNBI_H_soil_runoff, YMAX_JAC_NBI, &YG1Y_H_soil_runoff, Yjac[0], Ytbeta);
	 YG1_H_soil_trans( Yi, Yj, YTemps) += Ytbeta[0];
	 YG2_H_soil_trans( Yi, Yj, YTemps) += Ytbeta[1];
	 YG3_H_veg_cond( Yi, Yj, YTemps) += Ytbeta[2];
	 YG5_H_veg_cond( Yi, Yj, YTemps) += Ytbeta[3];
	 YG4_H_veg_cond( Yi, Yj, YTemps) += Ytbeta[4];
	 YG1_H_soil_flxcorr( Yi, Yj, YTemps) += Ytbeta[5];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[6];
	 YG3_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[7];
	 YG1_dpu_cste1( Yi) += Ytbeta[8];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_cond( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_cond( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_soil_flxcorr( Yi, Yj, YTemps);
	 Yting[3]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[4]=YS2_H_soil_flx( Yi, Yj, YTemps);
	 Yting[5]=YS4_SE_routing( Yi);
	 Yting[6]=YS3_SE_routing( Yi);
	 Yting[7]=YS3_H_snow_melt( Yi, YTemps);
	 Yting[8]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_trans(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmatt (YNBS_H_soil_trans, YNBI_H_soil_trans, YMAX_JAC_NBI, &YG1Y_H_soil_trans, Yjac[0], Ytbeta);
	 YG1_H_veg_cond( Yi, Yj, YTemps) += Ytbeta[0];
	 YG2_H_veg_cond( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_H_soil_flxcorr( Yi, Yj, YTemps) += Ytbeta[2];
	 YG1_S_veget( Yi, 0, YTemps-1) += Ytbeta[3];
	 YG2_H_soil_flx( Yi, Yj, YTemps) += Ytbeta[4];
	 YG4_SE_routing( Yi) += Ytbeta[5];
	 YG3_SE_routing( Yi) += Ytbeta[6];
	 YG3_H_snow_melt( Yi, YTemps) += Ytbeta[7];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[8];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps-1);
	 Yting[2]=YS1_H_soil_flx( Yi, Yj, YTemps);
	 Yting[3]=YS3_H_snow( Yi, YTemps);
	 Yting[4]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_flxcorr(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_soil_flxcorr, YNBI_H_soil_flxcorr, YMAX_JAC_NBI, &YG1Y_H_soil_flxcorr, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_S_veget( Yi, 0, YTemps-1) += Ytbeta[1];
	 YG1_H_soil_flx( Yi, Yj, YTemps) += Ytbeta[2];
	 YG3_H_snow( Yi, YTemps) += Ytbeta[3];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[4];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_E_transpir( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_canop_interp( Yi, Yj, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_flx(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_H_soil_flx, YNBI_H_soil_flx, YMAX_JAC_NBI, &YG1Y_H_soil_flx, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_E_transpir( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_H_canop_interp( Yi, Yj, YTemps) += Ytbeta[2];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_canop_init( Yi, Yj, YTemps);
	 Yting[1]=YS1_S_qsintm( Yi, Yj, YTemps-1);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 Yting[4]=YS1_qsintveg( Yi, Yj);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_canop_interp(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_canop_interp, YNBI_H_canop_interp, YMAX_JAC_NBI, &YG1Y_H_canop_interp, Yjac[0], Ytbeta);
	 YG1_H_canop_init( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_S_qsintm( Yi, Yj, YTemps-1) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG1_F_precip( Yi, YTemps-1) += Ytbeta[3];
	 YG1_qsintveg( Yi, Yj) += Ytbeta[4];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS3_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS1_E_evap_trans( Yi, Yj, YTemps);
	 Yting[2]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[3]=YS1_F_precip( Yi, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_canop_init(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_H_canop_init, YNBI_H_canop_init, YMAX_JAC_NBI, &YG1Y_H_canop_init, Yjac[0], Ytbeta);
	 YG3_H_veg_water2( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_E_evap_trans( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG1_F_precip( Yi, YTemps-1) += Ytbeta[3];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_water2( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_veg_water2( Yi, Yj, YTemps);
	 Yting[2]=YS4_H_veg_water2( Yi, Yj, YTemps);
	 Yting[3]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[4]=YS5_H_veg_water2( Yi, Yj, YTemps);
	 Yting[5]=YS1_H_veg_water2( Yi, 0, YTemps);
	 Yting[6]=YS2_H_veg_water2( Yi, 0, YTemps);
	 Yting[7]=YS4_H_veg_water2( Yi, 0, YTemps);
	 Yting[8]=YS6_H_soil_verif( Yi, 0, YTemps-1);
	 Yting[9]=YS5_H_veg_water2( Yi, 0, YTemps);
	 Yting[10]=YS1_S_veget( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_veg_cond(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10] );
	 Yvsmatt (YNBS_H_veg_cond, YNBI_H_veg_cond, YMAX_JAC_NBI, &YG1Y_H_veg_cond, Yjac[0], Ytbeta);
	 YG1_H_veg_water2( Yi, Yj, YTemps) += Ytbeta[0];
	 YG2_H_veg_water2( Yi, Yj, YTemps) += Ytbeta[1];
	 YG4_H_veg_water2( Yi, Yj, YTemps) += Ytbeta[2];
	 YG6_H_soil_verif( Yi, Yj, YTemps-1) += Ytbeta[3];
	 YG5_H_veg_water2( Yi, Yj, YTemps) += Ytbeta[4];
	 YG1_H_veg_water2( Yi, 0, YTemps) += Ytbeta[5];
	 YG2_H_veg_water2( Yi, 0, YTemps) += Ytbeta[6];
	 YG4_H_veg_water2( Yi, 0, YTemps) += Ytbeta[7];
	 YG6_H_soil_verif( Yi, 0, YTemps-1) += Ytbeta[8];
	 YG5_H_veg_water2( Yi, 0, YTemps) += Ytbeta[9];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[10];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_S_veget( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_veg_upd(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_H_veg_upd, YNBI_H_veg_upd, YMAX_JAC_NBI, &YG1Y_H_veg_upd, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_S_veget( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_H_veg_upd( Yi, Yj, YTemps-1) += Ytbeta[2];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_water( Yi, 12, YTemps);
	 Yting[3]=YS2_H_veg_water( Yi, 12, YTemps);
	 Yting[4]=YS3_H_veg_water( Yi, 12, YTemps);
	 Yting[5]=YS4_H_veg_water( Yi, 12, YTemps);
	 Yting[6]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[7]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[8]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[9]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[10]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 Yting[11]=YS6_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[12]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[13]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 Yting[14]=YS1_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[15]=YS4_H_soil_stress( Yi, Yj, YTemps-1);
	 Yting[16]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 110*sizeof(double));
	 YH_veg_water2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16] );
	 Yvsmatt (YNBS_H_veg_water2, YNBI_H_veg_water2, YMAX_JAC_NBI, &YG1Y_H_veg_water2, Yjac[0], Ytbeta);
	 YG1_H_veg_sum( Yi, 12, YTemps) += Ytbeta[0];
	 YG1_H_veg_var( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_H_veg_water( Yi, 12, YTemps) += Ytbeta[2];
	 YG2_H_veg_water( Yi, 12, YTemps) += Ytbeta[3];
	 YG3_H_veg_water( Yi, 12, YTemps) += Ytbeta[4];
	 YG4_H_veg_water( Yi, 12, YTemps) += Ytbeta[5];
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[6];
	 YG1_H_veg_upd( Yi, Yj, YTemps-1) += Ytbeta[7];
	 YG2_H_soil_verif( Yi, Yj, YTemps-1) += Ytbeta[8];
	 YG2_H_soil_dsp2( Yi, Yj, YTemps-1) += Ytbeta[9];
	 YG2_H_canop_interp( Yi, Yj, YTemps-1) += Ytbeta[10];
	 YG6_H_soil_verif( Yi, Yj, YTemps-1) += Ytbeta[11];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[12];
	 YG3_H_veg_niv( Yi, Yj, YTemps) += Ytbeta[13];
	 YG1_H_soil_dsp2( Yi, Yj, YTemps-1) += Ytbeta[14];
	 YG4_H_soil_stress( Yi, Yj, YTemps-1) += Ytbeta[15];
	 YG1_dpu_cste1( Yi) += Ytbeta[16];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_sum( Yi, 12, YTemps);
	 Yting[1]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[2]=YS1_H_veg_niv( Yi, Yj, YTemps);
	 Yting[3]=YS2_H_veg_niv( Yi, Yj, YTemps);
	 Yting[4]=YS3_H_veg_niv( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[6]=0; 
	 else 
	 Yting[6]=YS2_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_H_veg_water( Yi, Yj-1, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[8]=0; 
	 else 
	 Yting[8]=YS4_H_veg_water( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 88*sizeof(double));
	 YH_veg_water(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8] );
	 Yvsmatt (YNBS_H_veg_water, YNBI_H_veg_water, YMAX_JAC_NBI, &YG1Y_H_veg_water, Yjac[0], Ytbeta);
	 YG1_H_veg_sum( Yi, 12, YTemps) += Ytbeta[0];
	 YG1_H_veg_var( Yi, Yj, YTemps) += Ytbeta[1];
	 YG1_H_veg_niv( Yi, Yj, YTemps) += Ytbeta[2];
	 YG2_H_veg_niv( Yi, Yj, YTemps) += Ytbeta[3];
	 YG3_H_veg_niv( Yi, Yj, YTemps) += Ytbeta[4];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_veg_water( Yi, Yj-1, YTemps) += Ytbeta[5];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_H_veg_water( Yi, Yj-1, YTemps) += Ytbeta[6];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_H_veg_water( Yi, Yj-1, YTemps) += Ytbeta[7];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG4_H_veg_water( Yi, Yj-1, YTemps) += Ytbeta[8];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 Yting[1]=YS2_H_soil_verif( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps-1);
	 Yting[3]=YS2_H_veg_var( Yi, Yj, YTemps);
	 Yting[4]=YS1_H_veg_sum( Yi, 12, YTemps);
	 memset(Yjac, 0, 66*sizeof(double));
	 YH_veg_niv(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_veg_niv, YNBI_H_veg_niv, YMAX_JAC_NBI, &YG1Y_H_veg_niv, Yjac[0], Ytbeta);
	 YG1_H_veg_var( Yi, Yj, YTemps) += Ytbeta[0];
	 YG2_H_soil_verif( Yi, Yj, YTemps-1) += Ytbeta[1];
	 YG2_H_soil_dsp2( Yi, Yj, YTemps-1) += Ytbeta[2];
	 YG2_H_veg_var( Yi, Yj, YTemps) += Ytbeta[3];
	 YG1_H_veg_sum( Yi, 12, YTemps) += Ytbeta[4];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_veg_var( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_H_veg_sum( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_veg_sum(Yi, Yj)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_veg_sum, YNBI_H_veg_sum, YMAX_JAC_NBI, &YG1Y_H_veg_sum, Yjac[0], Ytbeta);
	 YG1_H_veg_var( Yi, Yj, YTemps) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_H_veg_sum( Yi, Yj-1, YTemps) += Ytbeta[1];

}
for(Yi=YA1_SnvmHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_S_veget( Yi, Yj, YTemps-1);
	 Yting[1]=YS1_H_veg_upd( Yi, Yj, YTemps-1);
	 Yting[2]=YS2_H_canop_interp( Yi, Yj, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_veg_var(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_H_veg_var, YNBI_H_veg_var, YMAX_JAC_NBI, &YG1Y_H_veg_var, Yjac[0], Ytbeta);
	 YG1_S_veget( Yi, Yj, YTemps-1) += Ytbeta[0];
	 YG1_H_veg_upd( Yi, Yj, YTemps-1) += Ytbeta[1];
	 YG2_H_canop_interp( Yi, Yj, YTemps-1) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SkjindexHi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexHi; ++Yi)
{
	 Yting[0]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[2]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, 12, YTemps);
	 YH_soil_dsg(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SkjindexHi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexHi; ++Yi)
{
	 Yting[0]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[2]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, 12, YTemps);
	 Ytbeta[0]=YG2_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[1]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[2]=YG1_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[3]=YG1_H_soil_dsg1( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dsg(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_H_soil_dsg, YNBI_H_soil_dsg, YMAX_JAC_NBI, &YG1Y_H_soil_dsg, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexHi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexHi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[2]=YS1_init_hydrolc2( Yi, 12, YTemps);
	 Yting[3]=YS1_H_soil_dsg1( Yi, 12, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dsg(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_H_soil_dsg, YNBI_H_soil_dsg, YMAX_JAC_NBI, &YG1Y_H_soil_dsg, Yjac[0], Ytbeta);
	 YG2_H_soil_mean( Yi, 12, YTemps) += Ytbeta[0];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[1];
	 YG1_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[2];
	 YG1_H_soil_dsg1( Yi, 12, YTemps) += Ytbeta[3];

}

	 return(0);
}

 int Yforward_space_SnvmH1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmH1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmH1i; ++Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[4]=YS6_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_humr_c_1( Yi);
	 Yting[7]=YS1_humr_c_2( Yi);
	 Yting[8]=YS1_humr_c_3( Yi);
	 Yting[9]=YS1_humr_c_4( Yi);
	 Yting[10]=YS1_humr_c_5( Yi);
	 Yting[11]=YS1_humr_c_6( Yi);
	 Yting[12]=YS1_humr_c_7( Yi);
	 Yting[13]=YS1_humr_c_8( Yi);
	 Yting[14]=YS1_humr_c_9( Yi);
	 Yting[15]=YS1_humr_c_10( Yi);
	 Yting[16]=YS1_humr_c_11( Yi);
	 Yting[17]=YS1_humr_c_12( Yi);
	 Yting[18]=YS1_humr_c_13( Yi);
	 Yting[19]=YS1_dpu_cste1( Yi);
	 YH_soil_stress(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16], Yting[17], Yting[18], Yting[19] );

}

	 return(0);
}

 int Ylinward_space_SnvmH1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmH1i; ++Yi)
for(Yj=0; Yj<YA2_SnvmH1i; ++Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[4]=YS6_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_humr_c_1( Yi);
	 Yting[7]=YS1_humr_c_2( Yi);
	 Yting[8]=YS1_humr_c_3( Yi);
	 Yting[9]=YS1_humr_c_4( Yi);
	 Yting[10]=YS1_humr_c_5( Yi);
	 Yting[11]=YS1_humr_c_6( Yi);
	 Yting[12]=YS1_humr_c_7( Yi);
	 Yting[13]=YS1_humr_c_8( Yi);
	 Yting[14]=YS1_humr_c_9( Yi);
	 Yting[15]=YS1_humr_c_10( Yi);
	 Yting[16]=YS1_humr_c_11( Yi);
	 Yting[17]=YS1_humr_c_12( Yi);
	 Yting[18]=YS1_humr_c_13( Yi);
	 Yting[19]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG2_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[1]=YG3_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[2]=YG2_H_soil_dsp2( Yi, Yj, YTemps);
	 Ytbeta[3]=YG1_H_soil_dsp2( Yi, Yj, YTemps);
	 Ytbeta[4]=YG6_H_soil_verif( Yi, Yj, YTemps);
	 Ytbeta[5]=YG2_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[6]=YG1_humr_c_1( Yi);
	 Ytbeta[7]=YG1_humr_c_2( Yi);
	 Ytbeta[8]=YG1_humr_c_3( Yi);
	 Ytbeta[9]=YG1_humr_c_4( Yi);
	 Ytbeta[10]=YG1_humr_c_5( Yi);
	 Ytbeta[11]=YG1_humr_c_6( Yi);
	 Ytbeta[12]=YG1_humr_c_7( Yi);
	 Ytbeta[13]=YG1_humr_c_8( Yi);
	 Ytbeta[14]=YG1_humr_c_9( Yi);
	 Ytbeta[15]=YG1_humr_c_10( Yi);
	 Ytbeta[16]=YG1_humr_c_11( Yi);
	 Ytbeta[17]=YG1_humr_c_12( Yi);
	 Ytbeta[18]=YG1_humr_c_13( Yi);
	 Ytbeta[19]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YH_soil_stress(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16], Yting[17], Yting[18], Yting[19] );
	 Yvsmat (YNBS_H_soil_stress, YNBI_H_soil_stress, YMAX_JAC_NBI, &YG1Y_H_soil_stress, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmH1i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmH1i-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmH1i-1; Yj>=0; --Yj)
{
	 Yting[0]=YS2_H_soil_verif( Yi, Yj, YTemps);
	 Yting[1]=YS3_H_soil_verif( Yi, Yj, YTemps);
	 Yting[2]=YS2_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[3]=YS1_H_soil_dsp2( Yi, Yj, YTemps);
	 Yting[4]=YS6_H_soil_verif( Yi, Yj, YTemps);
	 Yting[5]=YS2_init_hydrolc2( Yi, 12, YTemps);
	 Yting[6]=YS1_humr_c_1( Yi);
	 Yting[7]=YS1_humr_c_2( Yi);
	 Yting[8]=YS1_humr_c_3( Yi);
	 Yting[9]=YS1_humr_c_4( Yi);
	 Yting[10]=YS1_humr_c_5( Yi);
	 Yting[11]=YS1_humr_c_6( Yi);
	 Yting[12]=YS1_humr_c_7( Yi);
	 Yting[13]=YS1_humr_c_8( Yi);
	 Yting[14]=YS1_humr_c_9( Yi);
	 Yting[15]=YS1_humr_c_10( Yi);
	 Yting[16]=YS1_humr_c_11( Yi);
	 Yting[17]=YS1_humr_c_12( Yi);
	 Yting[18]=YS1_humr_c_13( Yi);
	 Yting[19]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 88*sizeof(double));
	 YH_soil_stress(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12], Yting[13], Yting[14], Yting[15], Yting[16], Yting[17], Yting[18], Yting[19] );
	 Yvsmatt (YNBS_H_soil_stress, YNBI_H_soil_stress, YMAX_JAC_NBI, &YG1Y_H_soil_stress, Yjac[0], Ytbeta);
	 YG2_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[0];
	 YG3_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[1];
	 YG2_H_soil_dsp2( Yi, Yj, YTemps) += Ytbeta[2];
	 YG1_H_soil_dsp2( Yi, Yj, YTemps) += Ytbeta[3];
	 YG6_H_soil_verif( Yi, Yj, YTemps) += Ytbeta[4];
	 YG2_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[5];
	 YG1_humr_c_1( Yi) += Ytbeta[6];
	 YG1_humr_c_2( Yi) += Ytbeta[7];
	 YG1_humr_c_3( Yi) += Ytbeta[8];
	 YG1_humr_c_4( Yi) += Ytbeta[9];
	 YG1_humr_c_5( Yi) += Ytbeta[10];
	 YG1_humr_c_6( Yi) += Ytbeta[11];
	 YG1_humr_c_7( Yi) += Ytbeta[12];
	 YG1_humr_c_8( Yi) += Ytbeta[13];
	 YG1_humr_c_9( Yi) += Ytbeta[14];
	 YG1_humr_c_10( Yi) += Ytbeta[15];
	 YG1_humr_c_11( Yi) += Ytbeta[16];
	 YG1_humr_c_12( Yi) += Ytbeta[17];
	 YG1_humr_c_13( Yi) += Ytbeta[18];
	 YG1_dpu_cste1( Yi) += Ytbeta[19];

}

	 return(0);
}

 int Yforward_space_SkjindexH2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexH2i; ++Yi)
{
	 Yting[0]=YS1_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS1_h_c_1( Yi);
	 YH_soil_humrel1(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 1, YTemps);
	 Yting[1]=YS1_h_c_2( Yi);
	 YH_soil_humrel2(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 2, YTemps);
	 Yting[1]=YS1_h_c_3( Yi);
	 YH_soil_humrel3(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 3, YTemps);
	 Yting[1]=YS1_h_c_4( Yi);
	 YH_soil_humrel4(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 4, YTemps);
	 Yting[1]=YS1_h_c_5( Yi);
	 YH_soil_humrel5(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 5, YTemps);
	 Yting[1]=YS1_h_c_6( Yi);
	 YH_soil_humrel6(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 6, YTemps);
	 Yting[1]=YS1_h_c_7( Yi);
	 YH_soil_humrel7(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 7, YTemps);
	 Yting[1]=YS1_h_c_8( Yi);
	 YH_soil_humrel8(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 8, YTemps);
	 Yting[1]=YS1_h_c_9( Yi);
	 YH_soil_humrel9(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 9, YTemps);
	 Yting[1]=YS1_h_c_10( Yi);
	 YH_soil_humrel10(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 10, YTemps);
	 Yting[1]=YS1_h_c_11( Yi);
	 YH_soil_humrel11(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 11, YTemps);
	 Yting[1]=YS1_h_c_12( Yi);
	 YH_soil_humrel12(Yi)->forward( Yting[0], Yting[1] );
	 Yting[0]=YS1_H_soil_stress( Yi, 12, YTemps);
	 Yting[1]=YS1_h_c_13( Yi);
	 YH_soil_humrel13(Yi)->forward( Yting[0], Yting[1] );

}

	 return(0);
}

 int Ylinward_space_SkjindexH2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexH2i; ++Yi)
{
	 Yting[0]=YS1_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS1_h_c_1( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 0, YTemps);
	 Ytbeta[1]=YG1_h_c_1( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel1(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel1, YNBI_H_soil_humrel1, YMAX_JAC_NBI, &YG1Y_H_soil_humrel1, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 1, YTemps);
	 Yting[1]=YS1_h_c_2( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 1, YTemps);
	 Ytbeta[1]=YG1_h_c_2( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel2(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel2, YNBI_H_soil_humrel2, YMAX_JAC_NBI, &YG1Y_H_soil_humrel2, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 2, YTemps);
	 Yting[1]=YS1_h_c_3( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 2, YTemps);
	 Ytbeta[1]=YG1_h_c_3( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel3(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel3, YNBI_H_soil_humrel3, YMAX_JAC_NBI, &YG1Y_H_soil_humrel3, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 3, YTemps);
	 Yting[1]=YS1_h_c_4( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 3, YTemps);
	 Ytbeta[1]=YG1_h_c_4( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel4(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel4, YNBI_H_soil_humrel4, YMAX_JAC_NBI, &YG1Y_H_soil_humrel4, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 4, YTemps);
	 Yting[1]=YS1_h_c_5( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 4, YTemps);
	 Ytbeta[1]=YG1_h_c_5( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel5(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel5, YNBI_H_soil_humrel5, YMAX_JAC_NBI, &YG1Y_H_soil_humrel5, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 5, YTemps);
	 Yting[1]=YS1_h_c_6( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 5, YTemps);
	 Ytbeta[1]=YG1_h_c_6( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel6(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel6, YNBI_H_soil_humrel6, YMAX_JAC_NBI, &YG1Y_H_soil_humrel6, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 6, YTemps);
	 Yting[1]=YS1_h_c_7( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 6, YTemps);
	 Ytbeta[1]=YG1_h_c_7( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel7(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel7, YNBI_H_soil_humrel7, YMAX_JAC_NBI, &YG1Y_H_soil_humrel7, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 7, YTemps);
	 Yting[1]=YS1_h_c_8( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 7, YTemps);
	 Ytbeta[1]=YG1_h_c_8( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel8(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel8, YNBI_H_soil_humrel8, YMAX_JAC_NBI, &YG1Y_H_soil_humrel8, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 8, YTemps);
	 Yting[1]=YS1_h_c_9( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 8, YTemps);
	 Ytbeta[1]=YG1_h_c_9( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel9(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel9, YNBI_H_soil_humrel9, YMAX_JAC_NBI, &YG1Y_H_soil_humrel9, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 9, YTemps);
	 Yting[1]=YS1_h_c_10( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 9, YTemps);
	 Ytbeta[1]=YG1_h_c_10( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel10(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel10, YNBI_H_soil_humrel10, YMAX_JAC_NBI, &YG1Y_H_soil_humrel10, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 10, YTemps);
	 Yting[1]=YS1_h_c_11( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 10, YTemps);
	 Ytbeta[1]=YG1_h_c_11( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel11(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel11, YNBI_H_soil_humrel11, YMAX_JAC_NBI, &YG1Y_H_soil_humrel11, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 11, YTemps);
	 Yting[1]=YS1_h_c_12( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 11, YTemps);
	 Ytbeta[1]=YG1_h_c_12( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel12(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel12, YNBI_H_soil_humrel12, YMAX_JAC_NBI, &YG1Y_H_soil_humrel12, Yjac[0], Ytbeta);
	 Yting[0]=YS1_H_soil_stress( Yi, 12, YTemps);
	 Yting[1]=YS1_h_c_13( Yi);
	 Ytbeta[0]=YG1_H_soil_stress( Yi, 12, YTemps);
	 Ytbeta[1]=YG1_h_c_13( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel13(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmat (YNBS_H_soil_humrel13, YNBI_H_soil_humrel13, YMAX_JAC_NBI, &YG1Y_H_soil_humrel13, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexH2i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexH2i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_soil_stress( Yi, 12, YTemps);
	 Yting[1]=YS1_h_c_13( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel13(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel13, YNBI_H_soil_humrel13, YMAX_JAC_NBI, &YG1Y_H_soil_humrel13, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 12, YTemps) += Ytbeta[0];
	 YG1_h_c_13( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 11, YTemps);
	 Yting[1]=YS1_h_c_12( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel12(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel12, YNBI_H_soil_humrel12, YMAX_JAC_NBI, &YG1Y_H_soil_humrel12, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 11, YTemps) += Ytbeta[0];
	 YG1_h_c_12( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 10, YTemps);
	 Yting[1]=YS1_h_c_11( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel11(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel11, YNBI_H_soil_humrel11, YMAX_JAC_NBI, &YG1Y_H_soil_humrel11, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 10, YTemps) += Ytbeta[0];
	 YG1_h_c_11( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 9, YTemps);
	 Yting[1]=YS1_h_c_10( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel10(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel10, YNBI_H_soil_humrel10, YMAX_JAC_NBI, &YG1Y_H_soil_humrel10, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 9, YTemps) += Ytbeta[0];
	 YG1_h_c_10( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 8, YTemps);
	 Yting[1]=YS1_h_c_9( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel9(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel9, YNBI_H_soil_humrel9, YMAX_JAC_NBI, &YG1Y_H_soil_humrel9, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 8, YTemps) += Ytbeta[0];
	 YG1_h_c_9( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 7, YTemps);
	 Yting[1]=YS1_h_c_8( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel8(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel8, YNBI_H_soil_humrel8, YMAX_JAC_NBI, &YG1Y_H_soil_humrel8, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 7, YTemps) += Ytbeta[0];
	 YG1_h_c_8( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 6, YTemps);
	 Yting[1]=YS1_h_c_7( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel7(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel7, YNBI_H_soil_humrel7, YMAX_JAC_NBI, &YG1Y_H_soil_humrel7, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 6, YTemps) += Ytbeta[0];
	 YG1_h_c_7( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 5, YTemps);
	 Yting[1]=YS1_h_c_6( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel6(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel6, YNBI_H_soil_humrel6, YMAX_JAC_NBI, &YG1Y_H_soil_humrel6, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 5, YTemps) += Ytbeta[0];
	 YG1_h_c_6( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 4, YTemps);
	 Yting[1]=YS1_h_c_5( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel5(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel5, YNBI_H_soil_humrel5, YMAX_JAC_NBI, &YG1Y_H_soil_humrel5, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 4, YTemps) += Ytbeta[0];
	 YG1_h_c_5( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 3, YTemps);
	 Yting[1]=YS1_h_c_4( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel4(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel4, YNBI_H_soil_humrel4, YMAX_JAC_NBI, &YG1Y_H_soil_humrel4, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 3, YTemps) += Ytbeta[0];
	 YG1_h_c_4( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 2, YTemps);
	 Yting[1]=YS1_h_c_3( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel3(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel3, YNBI_H_soil_humrel3, YMAX_JAC_NBI, &YG1Y_H_soil_humrel3, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 2, YTemps) += Ytbeta[0];
	 YG1_h_c_3( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 1, YTemps);
	 Yting[1]=YS1_h_c_2( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel2(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel2, YNBI_H_soil_humrel2, YMAX_JAC_NBI, &YG1Y_H_soil_humrel2, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 1, YTemps) += Ytbeta[0];
	 YG1_h_c_2( Yi) += Ytbeta[1];
	 Yting[0]=YS1_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS1_h_c_1( Yi);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel1(Yi)->backward( Yting[0], Yting[1] );
	 Yvsmatt (YNBS_H_soil_humrel1, YNBI_H_soil_humrel1, YMAX_JAC_NBI, &YG1Y_H_soil_humrel1, Yjac[0], Ytbeta);
	 YG1_H_soil_stress( Yi, 0, YTemps) += Ytbeta[0];
	 YG1_h_c_1( Yi) += Ytbeta[1];

}

	 return(0);
}

 int Yforward_space_SnvmH2i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmH2i; ++Yi)
for(Yj=0; Yj<YA2_SnvmH2i; ++Yj)
{
	 Yting[0]=YS1_H_soil_humrel1( Yi, YTemps);
	 Yting[1]=YS1_H_soil_humrel2( Yi, YTemps);
	 Yting[2]=YS1_H_soil_humrel3( Yi, YTemps);
	 Yting[3]=YS1_H_soil_humrel4( Yi, YTemps);
	 Yting[4]=YS1_H_soil_humrel5( Yi, YTemps);
	 Yting[5]=YS1_H_soil_humrel6( Yi, YTemps);
	 Yting[6]=YS1_H_soil_humrel7( Yi, YTemps);
	 Yting[7]=YS1_H_soil_humrel8( Yi, YTemps);
	 Yting[8]=YS1_H_soil_humrel9( Yi, YTemps);
	 Yting[9]=YS1_H_soil_humrel10( Yi, YTemps);
	 Yting[10]=YS1_H_soil_humrel11( Yi, YTemps);
	 Yting[11]=YS1_H_soil_humrel12( Yi, YTemps);
	 Yting[12]=YS1_H_soil_humrel13( Yi, YTemps);
	 YH_soil_humrel(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12] );

}

	 return(0);
}

 int Ylinward_space_SnvmH2i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnvmH2i; ++Yi)
for(Yj=0; Yj<YA2_SnvmH2i; ++Yj)
{
	 Yting[0]=YS1_H_soil_humrel1( Yi, YTemps);
	 Yting[1]=YS1_H_soil_humrel2( Yi, YTemps);
	 Yting[2]=YS1_H_soil_humrel3( Yi, YTemps);
	 Yting[3]=YS1_H_soil_humrel4( Yi, YTemps);
	 Yting[4]=YS1_H_soil_humrel5( Yi, YTemps);
	 Yting[5]=YS1_H_soil_humrel6( Yi, YTemps);
	 Yting[6]=YS1_H_soil_humrel7( Yi, YTemps);
	 Yting[7]=YS1_H_soil_humrel8( Yi, YTemps);
	 Yting[8]=YS1_H_soil_humrel9( Yi, YTemps);
	 Yting[9]=YS1_H_soil_humrel10( Yi, YTemps);
	 Yting[10]=YS1_H_soil_humrel11( Yi, YTemps);
	 Yting[11]=YS1_H_soil_humrel12( Yi, YTemps);
	 Yting[12]=YS1_H_soil_humrel13( Yi, YTemps);
	 Ytbeta[0]=YG1_H_soil_humrel1( Yi, YTemps);
	 Ytbeta[1]=YG1_H_soil_humrel2( Yi, YTemps);
	 Ytbeta[2]=YG1_H_soil_humrel3( Yi, YTemps);
	 Ytbeta[3]=YG1_H_soil_humrel4( Yi, YTemps);
	 Ytbeta[4]=YG1_H_soil_humrel5( Yi, YTemps);
	 Ytbeta[5]=YG1_H_soil_humrel6( Yi, YTemps);
	 Ytbeta[6]=YG1_H_soil_humrel7( Yi, YTemps);
	 Ytbeta[7]=YG1_H_soil_humrel8( Yi, YTemps);
	 Ytbeta[8]=YG1_H_soil_humrel9( Yi, YTemps);
	 Ytbeta[9]=YG1_H_soil_humrel10( Yi, YTemps);
	 Ytbeta[10]=YG1_H_soil_humrel11( Yi, YTemps);
	 Ytbeta[11]=YG1_H_soil_humrel12( Yi, YTemps);
	 Ytbeta[12]=YG1_H_soil_humrel13( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12] );
	 Yvsmat (YNBS_H_soil_humrel, YNBI_H_soil_humrel, YMAX_JAC_NBI, &YG1Y_H_soil_humrel, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnvmH2i()
{
	 YA1=1; YA2=13; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnvmH2i-1; Yi>=0; --Yi)
for(Yj=YA2_SnvmH2i-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_humrel1( Yi, YTemps);
	 Yting[1]=YS1_H_soil_humrel2( Yi, YTemps);
	 Yting[2]=YS1_H_soil_humrel3( Yi, YTemps);
	 Yting[3]=YS1_H_soil_humrel4( Yi, YTemps);
	 Yting[4]=YS1_H_soil_humrel5( Yi, YTemps);
	 Yting[5]=YS1_H_soil_humrel6( Yi, YTemps);
	 Yting[6]=YS1_H_soil_humrel7( Yi, YTemps);
	 Yting[7]=YS1_H_soil_humrel8( Yi, YTemps);
	 Yting[8]=YS1_H_soil_humrel9( Yi, YTemps);
	 Yting[9]=YS1_H_soil_humrel10( Yi, YTemps);
	 Yting[10]=YS1_H_soil_humrel11( Yi, YTemps);
	 Yting[11]=YS1_H_soil_humrel12( Yi, YTemps);
	 Yting[12]=YS1_H_soil_humrel13( Yi, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_humrel(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9], Yting[10], Yting[11], Yting[12] );
	 Yvsmatt (YNBS_H_soil_humrel, YNBI_H_soil_humrel, YMAX_JAC_NBI, &YG1Y_H_soil_humrel, Yjac[0], Ytbeta);
	 YG1_H_soil_humrel1( Yi, YTemps) += Ytbeta[0];
	 YG1_H_soil_humrel2( Yi, YTemps) += Ytbeta[1];
	 YG1_H_soil_humrel3( Yi, YTemps) += Ytbeta[2];
	 YG1_H_soil_humrel4( Yi, YTemps) += Ytbeta[3];
	 YG1_H_soil_humrel5( Yi, YTemps) += Ytbeta[4];
	 YG1_H_soil_humrel6( Yi, YTemps) += Ytbeta[5];
	 YG1_H_soil_humrel7( Yi, YTemps) += Ytbeta[6];
	 YG1_H_soil_humrel8( Yi, YTemps) += Ytbeta[7];
	 YG1_H_soil_humrel9( Yi, YTemps) += Ytbeta[8];
	 YG1_H_soil_humrel10( Yi, YTemps) += Ytbeta[9];
	 YG1_H_soil_humrel11( Yi, YTemps) += Ytbeta[10];
	 YG1_H_soil_humrel12( Yi, YTemps) += Ytbeta[11];
	 YG1_H_soil_humrel13( Yi, YTemps) += Ytbeta[12];

}

	 return(0);
}

 int Yforward_space_SnbdlHi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnbdlHi; ++Yi)
for(Yj=0; Yj<YA2_SnbdlHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[3]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 YH_soil_shum(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_SnbdlHi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnbdlHi; ++Yi)
for(Yj=0; Yj<YA2_SnbdlHi; ++Yj)
{
	 Yting[0]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[3]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 Ytbeta[0]=YG1_H_soil_dsg( Yi, YTemps);
	 Ytbeta[1]=YG1_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[2]=YG2_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[3]=YG3_init_hydrolc2( Yi, 12, YTemps);
	 Ytbeta[4]=YG1_int_slowproc( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[5]=0; 
	 else 
	 Ytbeta[5]=YG1_int_slowproc( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_shum(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_H_soil_shum, YNBI_H_soil_shum, YMAX_JAC_NBI, &YG1Y_H_soil_shum, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnbdlHi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnbdlHi-1; Yi>=0; --Yi)
for(Yj=YA2_SnbdlHi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[1]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[3]=YS3_init_hydrolc2( Yi, 12, YTemps);
	 Yting[4]=YS1_int_slowproc( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS1_int_slowproc( Yi, Yj-1, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_shum(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_H_soil_shum, YNBI_H_soil_shum, YMAX_JAC_NBI, &YG1Y_H_soil_shum, Yjac[0], Ytbeta);
	 YG1_H_soil_dsg( Yi, YTemps) += Ytbeta[0];
	 YG1_H_soil_mean( Yi, 12, YTemps) += Ytbeta[1];
	 YG2_H_soil_mean( Yi, 12, YTemps) += Ytbeta[2];
	 YG3_init_hydrolc2( Yi, 12, YTemps) += Ytbeta[3];
	 YG1_int_slowproc( Yi, Yj, YTemps) += Ytbeta[4];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_int_slowproc( Yi, Yj-1, YTemps) += Ytbeta[5];

}

	 return(0);
}

 int Yforward_space_SkjindexH1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS3_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS6_H_soil_verif( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsp2( Yi, 0, YTemps);
	 YH_soil_hdry(Yi)->forward( Yting[0], Yting[1], Yting[2] );

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS6_H_soil_verif( Yi, 0, YTemps);
	 YH_soil_dryfrac(Yi)->forward( Yting[0] );

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS1_H_soil_hdry( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[3]=YS1_rsol_cste( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 YH_soil_rsol(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_hummin( 0);
	 Yting[3]=YS1_hummax( 0);
	 Yting[4]=YS1_eaumin( 0);
	 Yting[5]=YS1_eaumax( 0);
	 YH_watercontent(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_SkjindexH1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS3_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS6_H_soil_verif( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsp2( Yi, 0, YTemps);
	 Ytbeta[0]=YG3_H_soil_stress( Yi, 0, YTemps);
	 Ytbeta[1]=YG6_H_soil_verif( Yi, 0, YTemps);
	 Ytbeta[2]=YG1_H_soil_dsp2( Yi, 0, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_hdry(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmat (YNBS_H_soil_hdry, YNBI_H_soil_hdry, YMAX_JAC_NBI, &YG1Y_H_soil_hdry, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS6_H_soil_verif( Yi, 0, YTemps);
	 Ytbeta[0]=YG6_H_soil_verif( Yi, 0, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dryfrac(Yi)->backward( Yting[0] );
	 Yvsmat (YNBS_H_soil_dryfrac, YNBI_H_soil_dryfrac, YMAX_JAC_NBI, &YG1Y_H_soil_dryfrac, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS1_H_soil_hdry( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[3]=YS1_rsol_cste( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 Ytbeta[0]=YG1_H_soil_hdry( Yi, YTemps);
	 Ytbeta[1]=YG1_S_veget( Yi, 0, YTemps);
	 Ytbeta[2]=YG1_H_soil_dsg( Yi, YTemps);
	 Ytbeta[3]=YG1_rsol_cste( Yi);
	 Ytbeta[4]=YG1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_rsol(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmat (YNBS_H_soil_rsol, YNBI_H_soil_rsol, YMAX_JAC_NBI, &YG1Y_H_soil_rsol, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SkjindexH1i; ++Yi)
{
	 Yting[0]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_hummin( 0);
	 Yting[3]=YS1_hummax( 0);
	 Yting[4]=YS1_eaumin( 0);
	 Yting[5]=YS1_eaumax( 0);
	 Ytbeta[0]=YG1_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[1]=YG2_H_soil_mean( Yi, 12, YTemps);
	 Ytbeta[2]=YG1_hummin( 0);
	 Ytbeta[3]=YG1_hummax( 0);
	 Ytbeta[4]=YG1_eaumin( 0);
	 Ytbeta[5]=YG1_eaumax( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_watercontent(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_H_watercontent, YNBI_H_watercontent, YMAX_JAC_NBI, &YG1Y_H_watercontent, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexH1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexH1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_soil_mean( Yi, 12, YTemps);
	 Yting[1]=YS2_H_soil_mean( Yi, 12, YTemps);
	 Yting[2]=YS1_hummin( 0);
	 Yting[3]=YS1_hummax( 0);
	 Yting[4]=YS1_eaumin( 0);
	 Yting[5]=YS1_eaumax( 0);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_watercontent(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_H_watercontent, YNBI_H_watercontent, YMAX_JAC_NBI, &YG1Y_H_watercontent, Yjac[0], Ytbeta);
	 YG1_H_soil_mean( Yi, 12, YTemps) += Ytbeta[0];
	 YG2_H_soil_mean( Yi, 12, YTemps) += Ytbeta[1];
	 YG1_hummin( 0) += Ytbeta[2];
	 YG1_hummax( 0) += Ytbeta[3];
	 YG1_eaumin( 0) += Ytbeta[4];
	 YG1_eaumax( 0) += Ytbeta[5];

}
for(Yi=YA1_SkjindexH1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_H_soil_hdry( Yi, YTemps);
	 Yting[1]=YS1_S_veget( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsg( Yi, YTemps);
	 Yting[3]=YS1_rsol_cste( Yi);
	 Yting[4]=YS1_dpu_cste1( Yi);
	 memset(Yjac, 0, 44*sizeof(double));
	 YH_soil_rsol(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4] );
	 Yvsmatt (YNBS_H_soil_rsol, YNBI_H_soil_rsol, YMAX_JAC_NBI, &YG1Y_H_soil_rsol, Yjac[0], Ytbeta);
	 YG1_H_soil_hdry( Yi, YTemps) += Ytbeta[0];
	 YG1_S_veget( Yi, 0, YTemps) += Ytbeta[1];
	 YG1_H_soil_dsg( Yi, YTemps) += Ytbeta[2];
	 YG1_rsol_cste( Yi) += Ytbeta[3];
	 YG1_dpu_cste1( Yi) += Ytbeta[4];

}
for(Yi=YA1_SkjindexH1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS6_H_soil_verif( Yi, 0, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_dryfrac(Yi)->backward( Yting[0] );
	 Yvsmatt (YNBS_H_soil_dryfrac, YNBI_H_soil_dryfrac, YMAX_JAC_NBI, &YG1Y_H_soil_dryfrac, Yjac[0], Ytbeta);
	 YG6_H_soil_verif( Yi, 0, YTemps) += Ytbeta[0];

}
for(Yi=YA1_SkjindexH1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS3_H_soil_stress( Yi, 0, YTemps);
	 Yting[1]=YS6_H_soil_verif( Yi, 0, YTemps);
	 Yting[2]=YS1_H_soil_dsp2( Yi, 0, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YH_soil_hdry(Yi)->backward( Yting[0], Yting[1], Yting[2] );
	 Yvsmatt (YNBS_H_soil_hdry, YNBI_H_soil_hdry, YMAX_JAC_NBI, &YG1Y_H_soil_hdry, Yjac[0], Ytbeta);
	 YG3_H_soil_stress( Yi, 0, YTemps) += Ytbeta[0];
	 YG6_H_soil_verif( Yi, 0, YTemps) += Ytbeta[1];
	 YG1_H_soil_dsp2( Yi, 0, YTemps) += Ytbeta[2];

}

	 return(0);
}

 int Yforward_space_SngrndTi()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndTi; ++Yi)
for(Yj=0; Yj<YA2_SngrndTi; ++Yj)
{
	 Yting[0]=YS1_H_soil_shum( Yi, 0, YTemps);
	 Yting[1]=YS1_H_soil_shum( Yi, 1, YTemps);
	 Yting[2]=YS1_H_soil_shum( Yi, 2, YTemps);
	 Yting[3]=YS1_H_soil_shum( Yi, 3, YTemps);
	 Yting[4]=YS1_H_soil_shum( Yi, 4, YTemps);
	 Yting[5]=YS1_H_soil_shum( Yi, 5, YTemps);
	 Yting[6]=YS1_H_soil_shum( Yi, 6, YTemps);
	 Yting[7]=YS1_H_soil_shum( Yi, 7, YTemps);
	 Yting[8]=YS1_H_soil_shum( Yi, 8, YTemps);
	 Yting[9]=YS1_H_soil_shum( Yi, 9, YTemps);
	 Yting[10]=YS1_H_soil_shum( Yi, 10, YTemps);
	 Yting[11]=YS1_int_humlev( 0, Yj, YTemps);
	 Yting[12]=YS1_int_humlev( 1, Yj, YTemps);
	 Yting[13]=YS1_int_humlev( 2, Yj, YTemps);
	 Yting[14]=YS1_int_humlev( 3, Yj, YTemps);
	 Yting[15]=YS1_int_humlev( 4, Yj, YTemps);
	 Yting[16]=YS1_int_humlev( 5, Yj, YTemps);
	 Yting[17]=YS1_int_humlev( 6, Yj, YTemps);
	 Yting[18]=YS1_int_humlev( 7, Yj, YTemps);
	 Yting[19]=YS1_int_humlev( 8, Yj, YTemps);
	 Yting[20]=YS1_int_humlev( 9, Yj, YTemps);
	 Yting[21]=YS1_int_humlev( 10, Yj, YTemps);
	 YT_hum_wet(Yi, Yj)->forward();

}
for(Yi=0; Yi<YA1_SngrndTi; ++Yi)
for(Yj=0; Yj<YA2_SngrndTi; ++Yj)
{
	 if (1==0 || Yj-1<0)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS2_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj-1, YTemps);
	 Yting[4]=YS2_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[5]=YS1_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[6]=YS1_ptn( Yi, Yj);
	 Yting[7]=YS4_int_thermosoil( 0, YTemps-1);
	 YT_profile(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );

}

	 return(0);
}

 int Ylinward_space_SngrndTi()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndTi; ++Yi)
for(Yj=0; Yj<YA2_SngrndTi; ++Yj)
{
	 Yting[0]=YS1_H_soil_shum( Yi, 0, YTemps);
	 Yting[1]=YS1_H_soil_shum( Yi, 1, YTemps);
	 Yting[2]=YS1_H_soil_shum( Yi, 2, YTemps);
	 Yting[3]=YS1_H_soil_shum( Yi, 3, YTemps);
	 Yting[4]=YS1_H_soil_shum( Yi, 4, YTemps);
	 Yting[5]=YS1_H_soil_shum( Yi, 5, YTemps);
	 Yting[6]=YS1_H_soil_shum( Yi, 6, YTemps);
	 Yting[7]=YS1_H_soil_shum( Yi, 7, YTemps);
	 Yting[8]=YS1_H_soil_shum( Yi, 8, YTemps);
	 Yting[9]=YS1_H_soil_shum( Yi, 9, YTemps);
	 Yting[10]=YS1_H_soil_shum( Yi, 10, YTemps);
	 Yting[11]=YS1_int_humlev( 0, Yj, YTemps);
	 Yting[12]=YS1_int_humlev( 1, Yj, YTemps);
	 Yting[13]=YS1_int_humlev( 2, Yj, YTemps);
	 Yting[14]=YS1_int_humlev( 3, Yj, YTemps);
	 Yting[15]=YS1_int_humlev( 4, Yj, YTemps);
	 Yting[16]=YS1_int_humlev( 5, Yj, YTemps);
	 Yting[17]=YS1_int_humlev( 6, Yj, YTemps);
	 Yting[18]=YS1_int_humlev( 7, Yj, YTemps);
	 Yting[19]=YS1_int_humlev( 8, Yj, YTemps);
	 Yting[20]=YS1_int_humlev( 9, Yj, YTemps);
	 Yting[21]=YS1_int_humlev( 10, Yj, YTemps);
	 Ytbeta[0]=YG1_H_soil_shum( Yi, 0, YTemps);
	 Ytbeta[1]=YG1_H_soil_shum( Yi, 1, YTemps);
	 Ytbeta[2]=YG1_H_soil_shum( Yi, 2, YTemps);
	 Ytbeta[3]=YG1_H_soil_shum( Yi, 3, YTemps);
	 Ytbeta[4]=YG1_H_soil_shum( Yi, 4, YTemps);
	 Ytbeta[5]=YG1_H_soil_shum( Yi, 5, YTemps);
	 Ytbeta[6]=YG1_H_soil_shum( Yi, 6, YTemps);
	 Ytbeta[7]=YG1_H_soil_shum( Yi, 7, YTemps);
	 Ytbeta[8]=YG1_H_soil_shum( Yi, 8, YTemps);
	 Ytbeta[9]=YG1_H_soil_shum( Yi, 9, YTemps);
	 Ytbeta[10]=YG1_H_soil_shum( Yi, 10, YTemps);
	 Ytbeta[11]=YG1_int_humlev( 0, Yj, YTemps);
	 Ytbeta[12]=YG1_int_humlev( 1, Yj, YTemps);
	 Ytbeta[13]=YG1_int_humlev( 2, Yj, YTemps);
	 Ytbeta[14]=YG1_int_humlev( 3, Yj, YTemps);
	 Ytbeta[15]=YG1_int_humlev( 4, Yj, YTemps);
	 Ytbeta[16]=YG1_int_humlev( 5, Yj, YTemps);
	 Ytbeta[17]=YG1_int_humlev( 6, Yj, YTemps);
	 Ytbeta[18]=YG1_int_humlev( 7, Yj, YTemps);
	 Ytbeta[19]=YG1_int_humlev( 8, Yj, YTemps);
	 Ytbeta[20]=YG1_int_humlev( 9, Yj, YTemps);
	 Ytbeta[21]=YG1_int_humlev( 10, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_hum_wet(Yi, Yj)->backward();
	 Yvsmat (YNBS_T_hum_wet, YNBI_T_hum_wet, YMAX_JAC_NBI, &YG1Y_T_hum_wet, Yjac[0], Ytbeta);

}
for(Yi=0; Yi<YA1_SngrndTi; ++Yi)
for(Yj=0; Yj<YA2_SngrndTi; ++Yj)
{
	 if (1==0 || Yj-1<0)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS2_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj-1, YTemps);
	 Yting[4]=YS2_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[5]=YS1_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[6]=YS1_ptn( Yi, Yj);
	 Yting[7]=YS4_int_thermosoil( 0, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Ytbeta[0]=0; 
	 else 
	 Ytbeta[0]=YG2_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG1_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 Ytbeta[2]=YG1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_T_profile( Yi, Yj-1, YTemps);
	 Ytbeta[4]=YG2_T_coef_soil2( Yi, 0, YTemps-1);
	 Ytbeta[5]=YG1_T_coef_soil2( Yi, 0, YTemps-1);
	 Ytbeta[6]=YG1_ptn( Yi, Yj);
	 Ytbeta[7]=YG4_int_thermosoil( 0, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_profile(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmat (YNBS_T_profile, YNBI_T_profile, YMAX_JAC_NBI, &YG1Y_T_profile, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SngrndTi()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SngrndTi-1; Yi>=0; --Yi)
for(Yj=YA2_SngrndTi-1; Yj>=0; --Yj)
{
	 if (1==0 || Yj-1<0)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS2_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 if (1==0 || Yj-1<0)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS1_T_coef_soil2( Yi, Yj-1, YTemps-1);
	 Yting[2]=YS1_E_tempsol( Yi, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj-1, YTemps);
	 Yting[4]=YS2_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[5]=YS1_T_coef_soil2( Yi, 0, YTemps-1);
	 Yting[6]=YS1_ptn( Yi, Yj);
	 Yting[7]=YS4_int_thermosoil( 0, YTemps-1);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_profile(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7] );
	 Yvsmatt (YNBS_T_profile, YNBI_T_profile, YMAX_JAC_NBI, &YG1Y_T_profile, Yjac[0], Ytbeta);
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG2_T_coef_soil2( Yi, Yj-1, YTemps-1) += Ytbeta[0];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_T_coef_soil2( Yi, Yj-1, YTemps-1) += Ytbeta[1];
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[2];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG1_T_profile( Yi, Yj-1, YTemps) += Ytbeta[3];
	 YG2_T_coef_soil2( Yi, 0, YTemps-1) += Ytbeta[4];
	 YG1_T_coef_soil2( Yi, 0, YTemps-1) += Ytbeta[5];
	 YG1_ptn( Yi, Yj) += Ytbeta[6];
	 YG4_int_thermosoil( 0, YTemps-1) += Ytbeta[7];

}
for(Yi=YA1_SngrndTi-1; Yi>=0; --Yi)
for(Yj=YA2_SngrndTi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_H_soil_shum( Yi, 0, YTemps);
	 Yting[1]=YS1_H_soil_shum( Yi, 1, YTemps);
	 Yting[2]=YS1_H_soil_shum( Yi, 2, YTemps);
	 Yting[3]=YS1_H_soil_shum( Yi, 3, YTemps);
	 Yting[4]=YS1_H_soil_shum( Yi, 4, YTemps);
	 Yting[5]=YS1_H_soil_shum( Yi, 5, YTemps);
	 Yting[6]=YS1_H_soil_shum( Yi, 6, YTemps);
	 Yting[7]=YS1_H_soil_shum( Yi, 7, YTemps);
	 Yting[8]=YS1_H_soil_shum( Yi, 8, YTemps);
	 Yting[9]=YS1_H_soil_shum( Yi, 9, YTemps);
	 Yting[10]=YS1_H_soil_shum( Yi, 10, YTemps);
	 Yting[11]=YS1_int_humlev( 0, Yj, YTemps);
	 Yting[12]=YS1_int_humlev( 1, Yj, YTemps);
	 Yting[13]=YS1_int_humlev( 2, Yj, YTemps);
	 Yting[14]=YS1_int_humlev( 3, Yj, YTemps);
	 Yting[15]=YS1_int_humlev( 4, Yj, YTemps);
	 Yting[16]=YS1_int_humlev( 5, Yj, YTemps);
	 Yting[17]=YS1_int_humlev( 6, Yj, YTemps);
	 Yting[18]=YS1_int_humlev( 7, Yj, YTemps);
	 Yting[19]=YS1_int_humlev( 8, Yj, YTemps);
	 Yting[20]=YS1_int_humlev( 9, Yj, YTemps);
	 Yting[21]=YS1_int_humlev( 10, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_hum_wet(Yi, Yj)->backward();
	 Yvsmatt (YNBS_T_hum_wet, YNBI_T_hum_wet, YMAX_JAC_NBI, &YG1Y_T_hum_wet, Yjac[0], Ytbeta);
	 YG1_H_soil_shum( Yi, 0, YTemps) += Ytbeta[0];
	 YG1_H_soil_shum( Yi, 1, YTemps) += Ytbeta[1];
	 YG1_H_soil_shum( Yi, 2, YTemps) += Ytbeta[2];
	 YG1_H_soil_shum( Yi, 3, YTemps) += Ytbeta[3];
	 YG1_H_soil_shum( Yi, 4, YTemps) += Ytbeta[4];
	 YG1_H_soil_shum( Yi, 5, YTemps) += Ytbeta[5];
	 YG1_H_soil_shum( Yi, 6, YTemps) += Ytbeta[6];
	 YG1_H_soil_shum( Yi, 7, YTemps) += Ytbeta[7];
	 YG1_H_soil_shum( Yi, 8, YTemps) += Ytbeta[8];
	 YG1_H_soil_shum( Yi, 9, YTemps) += Ytbeta[9];
	 YG1_H_soil_shum( Yi, 10, YTemps) += Ytbeta[10];
	 YG1_int_humlev( 0, Yj, YTemps) += Ytbeta[11];
	 YG1_int_humlev( 1, Yj, YTemps) += Ytbeta[12];
	 YG1_int_humlev( 2, Yj, YTemps) += Ytbeta[13];
	 YG1_int_humlev( 3, Yj, YTemps) += Ytbeta[14];
	 YG1_int_humlev( 4, Yj, YTemps) += Ytbeta[15];
	 YG1_int_humlev( 5, Yj, YTemps) += Ytbeta[16];
	 YG1_int_humlev( 6, Yj, YTemps) += Ytbeta[17];
	 YG1_int_humlev( 7, Yj, YTemps) += Ytbeta[18];
	 YG1_int_humlev( 8, Yj, YTemps) += Ytbeta[19];
	 YG1_int_humlev( 9, Yj, YTemps) += Ytbeta[20];
	 YG1_int_humlev( 10, Yj, YTemps) += Ytbeta[21];

}

	 return(0);
}

 int Yforward_space_SnbdlTi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnbdlTi; ++Yi)
for(Yj=0; Yj<YA2_SnbdlTi; ++Yj)
{
	 Yting[0]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[1]=YS1_T_profile( Yi, 1, YTemps);
	 Yting[2]=YS1_T_profile( Yi, 2, YTemps);
	 Yting[3]=YS1_T_profile( Yi, 3, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 4, YTemps);
	 Yting[5]=YS1_T_profile( Yi, 5, YTemps);
	 Yting[6]=YS1_T_profile( Yi, 6, YTemps);
	 Yting[7]=YS1_int_diaglev( 0, Yj, YTemps);
	 Yting[8]=YS1_int_diaglev( 1, Yj, YTemps);
	 Yting[9]=YS1_int_diaglev( 2, Yj, YTemps);
	 Yting[10]=YS1_int_diaglev( 3, Yj, YTemps);
	 Yting[11]=YS1_int_diaglev( 4, Yj, YTemps);
	 Yting[12]=YS1_int_diaglev( 5, Yj, YTemps);
	 Yting[13]=YS1_int_diaglev( 6, Yj, YTemps);
	 YT_diag_stemp(Yi, Yj)->forward();

}

	 return(0);
}

 int Ylinward_space_SnbdlTi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SnbdlTi; ++Yi)
for(Yj=0; Yj<YA2_SnbdlTi; ++Yj)
{
	 Yting[0]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[1]=YS1_T_profile( Yi, 1, YTemps);
	 Yting[2]=YS1_T_profile( Yi, 2, YTemps);
	 Yting[3]=YS1_T_profile( Yi, 3, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 4, YTemps);
	 Yting[5]=YS1_T_profile( Yi, 5, YTemps);
	 Yting[6]=YS1_T_profile( Yi, 6, YTemps);
	 Yting[7]=YS1_int_diaglev( 0, Yj, YTemps);
	 Yting[8]=YS1_int_diaglev( 1, Yj, YTemps);
	 Yting[9]=YS1_int_diaglev( 2, Yj, YTemps);
	 Yting[10]=YS1_int_diaglev( 3, Yj, YTemps);
	 Yting[11]=YS1_int_diaglev( 4, Yj, YTemps);
	 Yting[12]=YS1_int_diaglev( 5, Yj, YTemps);
	 Yting[13]=YS1_int_diaglev( 6, Yj, YTemps);
	 Ytbeta[0]=YG1_T_profile( Yi, 0, YTemps);
	 Ytbeta[1]=YG1_T_profile( Yi, 1, YTemps);
	 Ytbeta[2]=YG1_T_profile( Yi, 2, YTemps);
	 Ytbeta[3]=YG1_T_profile( Yi, 3, YTemps);
	 Ytbeta[4]=YG1_T_profile( Yi, 4, YTemps);
	 Ytbeta[5]=YG1_T_profile( Yi, 5, YTemps);
	 Ytbeta[6]=YG1_T_profile( Yi, 6, YTemps);
	 Ytbeta[7]=YG1_int_diaglev( 0, Yj, YTemps);
	 Ytbeta[8]=YG1_int_diaglev( 1, Yj, YTemps);
	 Ytbeta[9]=YG1_int_diaglev( 2, Yj, YTemps);
	 Ytbeta[10]=YG1_int_diaglev( 3, Yj, YTemps);
	 Ytbeta[11]=YG1_int_diaglev( 4, Yj, YTemps);
	 Ytbeta[12]=YG1_int_diaglev( 5, Yj, YTemps);
	 Ytbeta[13]=YG1_int_diaglev( 6, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_diag_stemp(Yi, Yj)->backward();
	 Yvsmat (YNBS_T_diag_stemp, YNBI_T_diag_stemp, YMAX_JAC_NBI, &YG1Y_T_diag_stemp, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SnbdlTi()
{
	 YA1=1; YA2=11; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SnbdlTi-1; Yi>=0; --Yi)
for(Yj=YA2_SnbdlTi-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[1]=YS1_T_profile( Yi, 1, YTemps);
	 Yting[2]=YS1_T_profile( Yi, 2, YTemps);
	 Yting[3]=YS1_T_profile( Yi, 3, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 4, YTemps);
	 Yting[5]=YS1_T_profile( Yi, 5, YTemps);
	 Yting[6]=YS1_T_profile( Yi, 6, YTemps);
	 Yting[7]=YS1_int_diaglev( 0, Yj, YTemps);
	 Yting[8]=YS1_int_diaglev( 1, Yj, YTemps);
	 Yting[9]=YS1_int_diaglev( 2, Yj, YTemps);
	 Yting[10]=YS1_int_diaglev( 3, Yj, YTemps);
	 Yting[11]=YS1_int_diaglev( 4, Yj, YTemps);
	 Yting[12]=YS1_int_diaglev( 5, Yj, YTemps);
	 Yting[13]=YS1_int_diaglev( 6, Yj, YTemps);
	 memset(Yjac, 0, 22*sizeof(double));
	 YT_diag_stemp(Yi, Yj)->backward();
	 Yvsmatt (YNBS_T_diag_stemp, YNBI_T_diag_stemp, YMAX_JAC_NBI, &YG1Y_T_diag_stemp, Yjac[0], Ytbeta);
	 YG1_T_profile( Yi, 0, YTemps) += Ytbeta[0];
	 YG1_T_profile( Yi, 1, YTemps) += Ytbeta[1];
	 YG1_T_profile( Yi, 2, YTemps) += Ytbeta[2];
	 YG1_T_profile( Yi, 3, YTemps) += Ytbeta[3];
	 YG1_T_profile( Yi, 4, YTemps) += Ytbeta[4];
	 YG1_T_profile( Yi, 5, YTemps) += Ytbeta[5];
	 YG1_T_profile( Yi, 6, YTemps) += Ytbeta[6];
	 YG1_int_diaglev( 0, Yj, YTemps) += Ytbeta[7];
	 YG1_int_diaglev( 1, Yj, YTemps) += Ytbeta[8];
	 YG1_int_diaglev( 2, Yj, YTemps) += Ytbeta[9];
	 YG1_int_diaglev( 3, Yj, YTemps) += Ytbeta[10];
	 YG1_int_diaglev( 4, Yj, YTemps) += Ytbeta[11];
	 YG1_int_diaglev( 5, Yj, YTemps) += Ytbeta[12];
	 YG1_int_diaglev( 6, Yj, YTemps) += Ytbeta[13];

}

	 return(0);
}

 int Yforward_space_SkjindexTi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexTi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS3_T_coef_soil( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[3]=YS3_T_energy( Yi, YTemps-1);
	 YT_energy(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3] );

}

	 return(0);
}

 int Ylinward_space_SkjindexTi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexTi; ++Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS3_T_coef_soil( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[3]=YS3_T_energy( Yi, YTemps-1);
	 Ytbeta[0]=YG1_E_tempsol( Yi, YTemps);
	 Ytbeta[1]=YG3_T_coef_soil( Yi, 0, YTemps-1);
	 Ytbeta[2]=YG1_T_coef_diff( Yi, YTemps-1);
	 Ytbeta[3]=YG3_T_energy( Yi, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 YT_energy(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmat (YNBS_T_energy, YNBI_T_energy, YMAX_JAC_NBI, &YG1Y_T_energy, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexTi()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexTi-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_E_tempsol( Yi, YTemps);
	 Yting[1]=YS3_T_coef_soil( Yi, 0, YTemps-1);
	 Yting[2]=YS1_T_coef_diff( Yi, YTemps-1);
	 Yting[3]=YS3_T_energy( Yi, YTemps-1);
	 memset(Yjac, 0, 66*sizeof(double));
	 YT_energy(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3] );
	 Yvsmatt (YNBS_T_energy, YNBI_T_energy, YMAX_JAC_NBI, &YG1Y_T_energy, Yjac[0], Ytbeta);
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[0];
	 YG3_T_coef_soil( Yi, 0, YTemps-1) += Ytbeta[1];
	 YG1_T_coef_diff( Yi, YTemps-1) += Ytbeta[2];
	 YG3_T_energy( Yi, YTemps-1) += Ytbeta[3];

}

	 return(0);
}

 int Yforward_space_SngrndTTT()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndTTT; ++Yi)
for(Yj=0; Yj<YA2_SngrndTTT; ++Yj)
{
	 Yting[0]=YS1_T_hum_wet( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_so_capa_dry( Yi);
	 Yting[3]=YS1_so_capa_wet( Yi);
	 Yting[4]=YS1_int_dz2( Yi, Yj, YTemps);
	 Yting[5]=YS2_int_dz2( Yi, Yj, YTemps);
	 Yting[6]=YS3_int_dz2( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_int_dz2( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_so_capa( Yi);
	 Yting[9]=YS1_so_cond( Yi);
	 YT_coef_soil(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );

}

	 return(0);
}

 int Ylinward_space_SngrndTTT()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndTTT; ++Yi)
for(Yj=0; Yj<YA2_SngrndTTT; ++Yj)
{
	 Yting[0]=YS1_T_hum_wet( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_so_capa_dry( Yi);
	 Yting[3]=YS1_so_capa_wet( Yi);
	 Yting[4]=YS1_int_dz2( Yi, Yj, YTemps);
	 Yting[5]=YS2_int_dz2( Yi, Yj, YTemps);
	 Yting[6]=YS3_int_dz2( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_int_dz2( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_so_capa( Yi);
	 Yting[9]=YS1_so_cond( Yi);
	 Ytbeta[0]=YG1_T_hum_wet( Yi, Yj, YTemps);
	 Ytbeta[1]=YG1_H_snow_melt( Yi, YTemps);
	 Ytbeta[2]=YG1_so_capa_dry( Yi);
	 Ytbeta[3]=YG1_so_capa_wet( Yi);
	 Ytbeta[4]=YG1_int_dz2( Yi, Yj, YTemps);
	 Ytbeta[5]=YG2_int_dz2( Yi, Yj, YTemps);
	 Ytbeta[6]=YG3_int_dz2( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Ytbeta[7]=0; 
	 else 
	 Ytbeta[7]=YG3_int_dz2( Yi, Yj-1, YTemps);
	 Ytbeta[8]=YG1_so_capa( Yi);
	 Ytbeta[9]=YG1_so_cond( Yi);
	 memset(Yjac, 0, 66*sizeof(double));
	 YT_coef_soil(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmat (YNBS_T_coef_soil, YNBI_T_coef_soil, YMAX_JAC_NBI, &YG1Y_T_coef_soil, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SngrndTTT()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SngrndTTT-1; Yi>=0; --Yi)
for(Yj=YA2_SngrndTTT-1; Yj>=0; --Yj)
{
	 Yting[0]=YS1_T_hum_wet( Yi, Yj, YTemps);
	 Yting[1]=YS1_H_snow_melt( Yi, YTemps);
	 Yting[2]=YS1_so_capa_dry( Yi);
	 Yting[3]=YS1_so_capa_wet( Yi);
	 Yting[4]=YS1_int_dz2( Yi, Yj, YTemps);
	 Yting[5]=YS2_int_dz2( Yi, Yj, YTemps);
	 Yting[6]=YS3_int_dz2( Yi, Yj, YTemps);
	 if (1==0 || Yj-1<0)
	 Yting[7]=0; 
	 else 
	 Yting[7]=YS3_int_dz2( Yi, Yj-1, YTemps);
	 Yting[8]=YS1_so_capa( Yi);
	 Yting[9]=YS1_so_cond( Yi);
	 memset(Yjac, 0, 66*sizeof(double));
	 YT_coef_soil(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6], Yting[7], Yting[8], Yting[9] );
	 Yvsmatt (YNBS_T_coef_soil, YNBI_T_coef_soil, YMAX_JAC_NBI, &YG1Y_T_coef_soil, Yjac[0], Ytbeta);
	 YG1_T_hum_wet( Yi, Yj, YTemps) += Ytbeta[0];
	 YG1_H_snow_melt( Yi, YTemps) += Ytbeta[1];
	 YG1_so_capa_dry( Yi) += Ytbeta[2];
	 YG1_so_capa_wet( Yi) += Ytbeta[3];
	 YG1_int_dz2( Yi, Yj, YTemps) += Ytbeta[4];
	 YG2_int_dz2( Yi, Yj, YTemps) += Ytbeta[5];
	 YG3_int_dz2( Yi, Yj, YTemps) += Ytbeta[6];
	 if (1==0 || Yj-1<0){} 
	 else 
	 YG3_int_dz2( Yi, Yj-1, YTemps) += Ytbeta[7];
	 YG1_so_capa( Yi) += Ytbeta[8];
	 YG1_so_cond( Yi) += Ytbeta[9];

}

	 return(0);
}

 int Yforward_space_SngrndT2i()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndT2i; ++Yi)
for(Yj=YA2_SngrndT2i-1; Yj>=0; --Yj)
{
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS1_T_coef_soil( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_T_coef_soil( Yi, Yj+1, YTemps);
	 Yting[2]=YS1_T_coef_soil( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS1_T_coef_soil2( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS2_T_coef_soil2( Yi, Yj+1, YTemps);
	 YT_coef_soil2(Yi, Yj)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );

}

	 return(0);
}

 int Ylinward_space_SngrndT2i()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SngrndT2i; ++Yi)
for(Yj=YA2_SngrndT2i-1; Yj>=0; --Yj)
{
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS1_T_coef_soil( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_T_coef_soil( Yi, Yj+1, YTemps);
	 Yting[2]=YS1_T_coef_soil( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS1_T_coef_soil2( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS2_T_coef_soil2( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Ytbeta[0]=0; 
	 else 
	 Ytbeta[0]=YG1_T_coef_soil( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Ytbeta[1]=0; 
	 else 
	 Ytbeta[1]=YG2_T_coef_soil( Yi, Yj+1, YTemps);
	 Ytbeta[2]=YG1_T_coef_soil( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Ytbeta[3]=0; 
	 else 
	 Ytbeta[3]=YG1_T_profile( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Ytbeta[4]=0; 
	 else 
	 Ytbeta[4]=YG1_T_coef_soil2( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Ytbeta[5]=0; 
	 else 
	 Ytbeta[5]=YG2_T_coef_soil2( Yi, Yj+1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YT_coef_soil2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmat (YNBS_T_coef_soil2, YNBI_T_coef_soil2, YMAX_JAC_NBI, &YG1Y_T_coef_soil2, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SngrndT2i()
{
	 YA1=1; YA2=7; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SngrndT2i-1; Yi>=0; --Yi)
for(Yj=0; Yj<YA2_SngrndT2i; ++Yj)
{
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[0]=0; 
	 else 
	 Yting[0]=YS1_T_coef_soil( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[1]=0; 
	 else 
	 Yting[1]=YS2_T_coef_soil( Yi, Yj+1, YTemps);
	 Yting[2]=YS1_T_coef_soil( Yi, Yj, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[3]=0; 
	 else 
	 Yting[3]=YS1_T_profile( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[4]=0; 
	 else 
	 Yting[4]=YS1_T_coef_soil2( Yi, Yj+1, YTemps);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1)
	 Yting[5]=0; 
	 else 
	 Yting[5]=YS2_T_coef_soil2( Yi, Yj+1, YTemps);
	 memset(Yjac, 0, 44*sizeof(double));
	 YT_coef_soil2(Yi, Yj)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5] );
	 Yvsmatt (YNBS_T_coef_soil2, YNBI_T_coef_soil2, YMAX_JAC_NBI, &YG1Y_T_coef_soil2, Yjac[0], Ytbeta);
	 if (1==0 || Yj+1>YA2_SngrndT2i-1){} 
	 else 
	 YG1_T_coef_soil( Yi, Yj+1, YTemps) += Ytbeta[0];
	 if (1==0 || Yj+1>YA2_SngrndT2i-1){} 
	 else 
	 YG2_T_coef_soil( Yi, Yj+1, YTemps) += Ytbeta[1];
	 YG1_T_coef_soil( Yi, Yj, YTemps) += Ytbeta[2];
	 if (1==0 || Yj+1>YA2_SngrndT2i-1){} 
	 else 
	 YG1_T_profile( Yi, Yj+1, YTemps) += Ytbeta[3];
	 if (1==0 || Yj+1>YA2_SngrndT2i-1){} 
	 else 
	 YG1_T_coef_soil2( Yi, Yj+1, YTemps) += Ytbeta[4];
	 if (1==0 || Yj+1>YA2_SngrndT2i-1){} 
	 else 
	 YG2_T_coef_soil2( Yi, Yj+1, YTemps) += Ytbeta[5];

}

	 return(0);
}

 int Yforward_space_SkjindexT1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexT1i; ++Yi)
{
	 Yting[0]=YS1_T_coef_soil( Yi, 0, YTemps);
	 Yting[1]=YS2_T_coef_soil( Yi, 0, YTemps);
	 Yting[2]=YS1_T_coef_soil2( Yi, 0, YTemps);
	 Yting[3]=YS2_T_coef_soil2( Yi, 0, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 Yting[6]=YS4_int_thermosoil( 0, YTemps-1);
	 YT_coef_diff(Yi)->forward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );

}

	 return(0);
}

 int Ylinward_space_SkjindexT1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_SkjindexT1i; ++Yi)
{
	 Yting[0]=YS1_T_coef_soil( Yi, 0, YTemps);
	 Yting[1]=YS2_T_coef_soil( Yi, 0, YTemps);
	 Yting[2]=YS1_T_coef_soil2( Yi, 0, YTemps);
	 Yting[3]=YS2_T_coef_soil2( Yi, 0, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 Yting[6]=YS4_int_thermosoil( 0, YTemps-1);
	 Ytbeta[0]=YG1_T_coef_soil( Yi, 0, YTemps);
	 Ytbeta[1]=YG2_T_coef_soil( Yi, 0, YTemps);
	 Ytbeta[2]=YG1_T_coef_soil2( Yi, 0, YTemps);
	 Ytbeta[3]=YG2_T_coef_soil2( Yi, 0, YTemps);
	 Ytbeta[4]=YG1_T_profile( Yi, 0, YTemps);
	 Ytbeta[5]=YG1_E_tempsol( Yi, YTemps);
	 Ytbeta[6]=YG4_int_thermosoil( 0, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YT_coef_diff(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmat (YNBS_T_coef_diff, YNBI_T_coef_diff, YMAX_JAC_NBI, &YG1Y_T_coef_diff, Yjac[0], Ytbeta);

}

	 return(0);
}

 int Ybackward_space_SkjindexT1i()
{
	 YA1=1; YA2=0; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_SkjindexT1i-1; Yi>=0; --Yi)
{
	 Yting[0]=YS1_T_coef_soil( Yi, 0, YTemps);
	 Yting[1]=YS2_T_coef_soil( Yi, 0, YTemps);
	 Yting[2]=YS1_T_coef_soil2( Yi, 0, YTemps);
	 Yting[3]=YS2_T_coef_soil2( Yi, 0, YTemps);
	 Yting[4]=YS1_T_profile( Yi, 0, YTemps);
	 Yting[5]=YS1_E_tempsol( Yi, YTemps);
	 Yting[6]=YS4_int_thermosoil( 0, YTemps-1);
	 memset(Yjac, 0, 44*sizeof(double));
	 YT_coef_diff(Yi)->backward( Yting[0], Yting[1], Yting[2], Yting[3], Yting[4], Yting[5], Yting[6] );
	 Yvsmatt (YNBS_T_coef_diff, YNBI_T_coef_diff, YMAX_JAC_NBI, &YG1Y_T_coef_diff, Yjac[0], Ytbeta);
	 YG1_T_coef_soil( Yi, 0, YTemps) += Ytbeta[0];
	 YG2_T_coef_soil( Yi, 0, YTemps) += Ytbeta[1];
	 YG1_T_coef_soil2( Yi, 0, YTemps) += Ytbeta[2];
	 YG2_T_coef_soil2( Yi, 0, YTemps) += Ytbeta[3];
	 YG1_T_profile( Yi, 0, YTemps) += Ytbeta[4];
	 YG1_E_tempsol( Yi, YTemps) += Ytbeta[5];
	 YG4_int_thermosoil( 0, YTemps-1) += Ytbeta[6];

}

	 return(0);
}

 int Yforward_space_Skjindex2Cn()
{
	 YA1=1; YA2=2; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Skjindex2Cn; ++Yi)
for(Yj=0; Yj<YA2_Skjindex2Cn; ++Yj)
{
	 YC_albcalc3(Yi, Yj)->forward();

}

	 return(0);
}

 int Ylinward_space_Skjindex2Cn()
{
	 YA1=1; YA2=2; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=0; Yi<YA1_Skjindex2Cn; ++Yi)
for(Yj=0; Yj<YA2_Skjindex2Cn; ++Yj)
{
	 YC_albcalc3(Yi, Yj)->backward();

}

	 return(0);
}

 int Ybackward_space_Skjindex2Cn()
{
	 YA1=1; YA2=2; YA3=0;
Yi=-1; Yj=-1; Yk=-1; /* init des indices de maille: maj par la boucle si valide*/
for(Yi=YA1_Skjindex2Cn-1; Yi>=0; --Yi)
for(Yj=YA2_Skjindex2Cn-1; Yj>=0; --Yj)
{
	 YC_albcalc3(Yi, Yj)->backward();

}

	 return(0);
}

int Yforward_traj_Tmodul(int nbp)
{
	Ycurward=FORWARD;
	 Yforward_space_Skjindexn();
	 Yforward_space_Sngrnd_init();
	 Yforward_space_Snbdl_init();
	 Yforward_space_Snbdl_hum();
	 Yforward_space_Sngrnd_22();
	 Yforward_space_Sn2_init();
	 Yforward_space_Sn1_init();
	 Yforward_space_SkjindexW();
	 Yforward_space_SkjindexIi();
	 Yforward_space_SkjindexSEi();
	 Yforward_space_SnvmSi();
	 Yforward_space_SnvmCi();
	 Yforward_space_SnvmC2();
	 Yforward_space_Snvm_init();
	 Yforward_space_SnvmDpre();
	 Yforward_space_SkjindexDi();
	 Yforward_space_SnvmDi();
	 Yforward_space_SkjindexD1i();
	 Yforward_space_SnvmD1i();
	 Yforward_space_SkjindexEi();
	 Yforward_space_SnvmEi();
	 Yforward_space_SdouzeEi();
	 Yforward_space_SkjindexE2i();
	 Yforward_space_SkjindexHis();
	 Yforward_space_SnvmHi();
	 Yforward_space_SkjindexHi();
	 Yforward_space_SnvmH1i();
	 Yforward_space_SkjindexH2i();
	 Yforward_space_SnvmH2i();
	 Yforward_space_SnbdlHi();
	 Yforward_space_SkjindexH1i();
	 Yforward_space_SngrndTi();
	 Yforward_space_SnbdlTi();
	 Yforward_space_SkjindexTi();
	 Yforward_space_SngrndTTT();
	 Yforward_space_SngrndT2i();
	 Yforward_space_SkjindexT1i();
	 return(0);
}

int Ylinward_traj_Tmodul(int nbp)
{
	Ycurward=LINWARD;
	 Ylinward_space_Skjindexn();
	 Ylinward_space_Sngrnd_init();
	 Ylinward_space_Snbdl_init();
	 Ylinward_space_Snbdl_hum();
	 Ylinward_space_Sngrnd_22();
	 Ylinward_space_Sn2_init();
	 Ylinward_space_Sn1_init();
	 Ylinward_space_SkjindexW();
	 Ylinward_space_SkjindexIi();
	 Ylinward_space_SkjindexSEi();
	 Ylinward_space_SnvmSi();
	 Ylinward_space_SnvmCi();
	 Ylinward_space_SnvmC2();
	 Ylinward_space_Snvm_init();
	 Ylinward_space_SnvmDpre();
	 Ylinward_space_SkjindexDi();
	 Ylinward_space_SnvmDi();
	 Ylinward_space_SkjindexD1i();
	 Ylinward_space_SnvmD1i();
	 Ylinward_space_SkjindexEi();
	 Ylinward_space_SnvmEi();
	 Ylinward_space_SdouzeEi();
	 Ylinward_space_SkjindexE2i();
	 Ylinward_space_SkjindexHis();
	 Ylinward_space_SnvmHi();
	 Ylinward_space_SkjindexHi();
	 Ylinward_space_SnvmH1i();
	 Ylinward_space_SkjindexH2i();
	 Ylinward_space_SnvmH2i();
	 Ylinward_space_SnbdlHi();
	 Ylinward_space_SkjindexH1i();
	 Ylinward_space_SngrndTi();
	 Ylinward_space_SnbdlTi();
	 Ylinward_space_SkjindexTi();
	 Ylinward_space_SngrndTTT();
	 Ylinward_space_SngrndT2i();
	 Ylinward_space_SkjindexT1i();
	 return(0);
}

int Ybackward_traj_Tmodul(int nbp)
{
	Ycurward=BACKWARD;
	 Ybackward_space_SkjindexT1i();
	 Ybackward_space_SngrndT2i();
	 Ybackward_space_SngrndTTT();
	 Ybackward_space_SkjindexTi();
	 Ybackward_space_SnbdlTi();
	 Ybackward_space_SngrndTi();
	 Ybackward_space_SkjindexH1i();
	 Ybackward_space_SnbdlHi();
	 Ybackward_space_SnvmH2i();
	 Ybackward_space_SkjindexH2i();
	 Ybackward_space_SnvmH1i();
	 Ybackward_space_SkjindexHi();
	 Ybackward_space_SnvmHi();
	 Ybackward_space_SkjindexHis();
	 Ybackward_space_SkjindexE2i();
	 Ybackward_space_SdouzeEi();
	 Ybackward_space_SnvmEi();
	 Ybackward_space_SkjindexEi();
	 Ybackward_space_SnvmD1i();
	 Ybackward_space_SkjindexD1i();
	 Ybackward_space_SnvmDi();
	 Ybackward_space_SkjindexDi();
	 Ybackward_space_SnvmDpre();
	 Ybackward_space_Snvm_init();
	 Ybackward_space_SnvmC2();
	 Ybackward_space_SnvmCi();
	 Ybackward_space_SnvmSi();
	 Ybackward_space_SkjindexSEi();
	 Ybackward_space_SkjindexIi();
	 Ybackward_space_SkjindexW();
	 Ybackward_space_Sn1_init();
	 Ybackward_space_Sn2_init();
	 Ybackward_space_Sngrnd_22();
	 Ybackward_space_Snbdl_hum();
	 Ybackward_space_Snbdl_init();
	 Ybackward_space_Sngrnd_init();
	 Ybackward_space_Skjindexn();
	 return(0);
}

int Yforward_traj_Tcontr(int nbp)
{
	Ycurward=FORWARD;
	 Yforward_space_SParam();
	 Yforward_space_Skjindex2Cn();
	 Yforward_space_SkjindexIn();
	 Yforward_space_SkjindexSEn();
	 Yforward_space_SnvmSn();
	 return(0);
}

int Ylinward_traj_Tcontr(int nbp)
{
	Ycurward=LINWARD;
	 Ylinward_space_SParam();
	 Ylinward_space_Skjindex2Cn();
	 Ylinward_space_SkjindexIn();
	 Ylinward_space_SkjindexSEn();
	 Ylinward_space_SnvmSn();
	 return(0);
}

int Ybackward_traj_Tcontr(int nbp)
{
	Ycurward=BACKWARD;
	 Ybackward_space_SnvmSn();
	 Ybackward_space_SkjindexSEn();
	 Ybackward_space_SkjindexIn();
	 Ybackward_space_Skjindex2Cn();
	 Ybackward_space_SParam();
	 return(0);
}

int Yforward_order()
{
	 Yforward_traj_Tcontr(0);
	 Yforward_traj_Tmodul(0);
	 return(0);
}

int Ylinward_order()
{
	 Ylinward_traj_Tcontr(0);
	 Ylinward_traj_Tmodul(0);
	 return(0);
}

int Ybackward_order()
{
	 Ybackward_traj_Tmodul(0);
	 Ybackward_traj_Tcontr(0);
	 return(0);
}

void Yforward_operator (char type) 
{	
}
void Ylinward_operator (char type) 
{	
}
void Ybackward_operator (char type) 
{	
}

// ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ LES FONCTIONS UTILISATEUR ... : 
int Yuser_call (int argc, char *argv[]) 
{
	 int codret=1;
	 if (strcmp(argv[0], "xdisplay") == 0)
		 xdisplay();
	 else if (strcmp(argv[0], "xinit_forcing") == 0)
		 xinit_forcing(argc, argv);
	 else if (strcmp(argv[0], "xinit_forcing_SMOSREX") == 0)
		 xinit_forcing_SMOSREX(argc, argv);
	 else if (strcmp(argv[0], "xforcing_lai") == 0)
		 xforcing_lai(argc, argv);
	 else if (strcmp(argv[0], "xsaison") == 0)
		 xsaison(argc, argv);
	 else if (strcmp(argv[0], "xparam_init") == 0)
		 xparam_init(argc, argv);
	 else if (strcmp(argv[0], "xparam_humrel") == 0)
		 xparam_humrel(argc, argv);
	 else if (strcmp(argv[0], "xsensib") == 0)
		 xsensib(argc, argv);
	 else if (strcmp(argv[0], "xPFT") == 0)
		 xPFT(argc, argv);
	 else if (strcmp(argv[0], "xbypass_jour") == 0)
		 xbypass_jour(argc, argv);
	 else if (strcmp(argv[0], "xbypass_lai") == 0)
		 xbypass_lai(argc, argv);
	 else if (strcmp(argv[0], "xgrad_fichier") == 0)
		 xgrad_fichier(argc, argv);
	 else if (strcmp(argv[0], "xobs_pdt") == 0)
		 xobs_pdt(argc, argv);
	 else if (strcmp(argv[0], "xset_control") == 0)
		 xset_control(argc, argv);
	 else codret=0;
	 return(codret);
}

//-------------- end Yao generation -----------------

  
/***************************************************************************
                 module classe C_zol_init.h  -  description

si impaze es true, se impone el mismo tipo de vegetacion en todas partes, por lo que las salidas
son constantes

outputs:
	YS3 = z0--->Roughness;
	YS4 = roughheight--->Effective height for roughness;


                             -------------------
 ***************************************************************************/

  //===========================================================================
  //                          methodes forward
  forward ()
  {
 
	YS1 = z0_scal;
	YS2 = roughheight_scal;


  }
	

  //===========================================================================
  //                         methodes  backward
  backward ()
  {
	YJ1I1 = 0;
	YJ2I1 = 0;
	
  }

  //===========================================================================

//************************** FIN DU MODULE C_zol_init.h ********************************









/*
  forward (YREAL veget1,YREAL  sumveg1,YREAL  ave_height1,YREAL  z01 ,YREAL  zlev,YREAL  veget_max,YREAL  veget,YREAL  height)
  {

	

	double ztmp, d_veg;
	//sorties
	double ave_height= 0, z0, sumveg =0 ;

	if(impaze==1) 
	{
		z0 = z0_scal;
		roughheight = roughheight_scal;
	}
	else
	{

		ztmp = MAX(10, zlev);

		z0 = veget1 * pow(ct_karman/log(ztmp/z0_bare),2);
		sumveg = veget1;
		ave_height = 0;

	    
		if( is_tree[Yj] == 1)
			//tree trunks influence the atmosphere even when there are no leaves
			d_veg = veget_max;
		else
			//grasses only have an influence if they are really there!
			d_veg = veget;
		
		z0 = z01 + d_veg * pow(ct_karman/log(ztmp/MAX(height*z0_over_height,z0_bare)),2);
		sumveg = sumveg1 + d_veg;

		ave_height = ave_height1 + veget_max*height;

		if( sumveg >0 )
			z0 = z0 / sumveg;
	 
		z0 = (1 - totfrac_nobio) * z0;

		roughheight = ave_height - ave_height * height_displacement;
	
	}

	YS1 = ave_height;
	YS2 = sumveg;
	YS3 = z0;
	YS4 = roughheight;

  }


*/





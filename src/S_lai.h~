  
/***************************************************************************
                 module classe S_lai.h  -  description

leaf area index
I only do the interpolation between laimax and laimin

I use a temperature compute by stemdiag to do the interpolation
The initial temperature 280, it can be found in the run.def file "SLOWPROC_LAI_TEMPDIAG = 280"

-lcanop: soil level used for LAI


utiliza una funcion definida en sechiba.h (tempfunc) para interpolar valores de la temperatura

                             -------------------
 ***************************************************************************/

  //===========================================================================
  //                          methodes forward
  forward (YREAL lai1, YREAL d1, YREAL d2,YREAL d3,YREAL d4,YREAL d5,YREAL d6,YREAL d7,YREAL d8,YREAL d9,YREAL d10,YREAL d11, YREAL lcan,YREAL temp_init)
  {
		
	double temp = 0;

	if((bypass_lai_active == 1) && (sechiba_vegmax[Yi][Yj] != 0))
	{
		if(Yj ==0)
			YS1 = 0;
		else
		YS1 = bypass_lai;
	}
	else
	{
		if(Yt ==1)
		{
			/*if(sechiba_vegmax[0][Yj] !=0)
				YS1 = 2.8;
			else
				YS1 = 0;*/
			temp =tempfunc(temp_init);

			if(Yj ==0)
				YS1 = 0;
			else
			{
				if((lai_imp == 1) && (Yj!= PFT_c))	
				{		
					YS1 = llaimin[Yj] + temp * (llaimax[Yj] - llaimin[Yj]);	
					//printf("Yt %d Yj %d \n",Yt,Yj);
				}
				
				
				if(lai_imp == 0)
					YS1 = llaimin[Yj] + temp * (llaimax[Yj] - llaimin[Yj]);	
			}


		}
		else if (((Yt)% (int) (one_day_pdt))==0) 
		{
			//temp =tempfunc(YS_T_diag_stemp(0,Yi,lcanop,Yt-1));

			switch((int)lcan)
			{
				case 0: { temp =tempfunc(d1);
					 // printf("d1 %e  ",d1);
					  break;}	
				case 1: { temp =tempfunc(d2);
					 // printf("d2 %e  ",d2);
					  break;}
				case 2: { temp =tempfunc(d3);
					 // printf("d3 %e  ",d3);
					  break;}	
				case 3: { temp =tempfunc(d4);
					 // printf("d4 %e  ",d4);
					  break;}
				case 4: { temp =tempfunc(d5);
					 // printf("d5 %e  ",d5);
					  break;}	
				case 5: { temp =tempfunc(d6);
					 // printf("d6 %e  ",d6);
					  break;}
				case 6: { temp =tempfunc(d7);
					 // printf("d7 %e  ",d7);
					  break;}	
				case 7: { temp =tempfunc(d8);
					 // printf("d8 %e  ",d8);
					  break;}
				case 8: { temp =tempfunc(d9);
					//printf("d9 %e  ",d9);
					  break;}	
				case 9: { temp =tempfunc(d10);
					 // printf("d10 %e  ",d10);
					  break;}
				case 10: { temp =tempfunc(d11);
					 // printf("d11 %e  ",d11);
					  break;}	
			}			

			
			if(Yj ==0)
				YS1 = 0;
			else
			{
				if((lai_imp == 1) && (Yj!= PFT_c))	
				{		
					YS1 = llaimin[Yj] + temp * (llaimax[Yj] - llaimin[Yj]);	

					//printf("Yt %d Yj %d \n",Yt,Yj);
				}		
				
				
				if(lai_imp == 0)
					YS1 = llaimin[Yj] + temp * (llaimax[Yj] - llaimin[Yj]);	
			}
		}
		else
		{
			if((lai_imp == 1) && (Yj!= PFT_c))
			{			
				YS1 = lai1;
				//printf("Yt %d Yj %d \n",Yt,Yj);
			}
			
				
			if(lai_imp == 0)
				YS1 = lai1;
		}

	}

	//printf("%d,%d lai1 %e  d1 %e  d2 %e, d3 %e d4 %e d5 %e d6 %e d7 %e d8 %e d9 %e d10 %e d11 %e lcan %e temp_init %e\n",Yt,Yj,lai1,  d1,  d2, d3, d4, d5, d6, d7, d8, d9, d10, d11,  lcan, temp_init );

	//printf(" (%d,%d)   lai: %e    temp %e   lcan %e   d8 %e   bypass_lai_active %d \n",Yt,Yj, YS1,temp,lcan, d8,bypass_lai_active);

	
	//if(Yt < 6)
	// printf("%d(%d,%d)   temp: %e  lai1: %e  lai: %e    d9 %e  \n" ,Yt, Yi,Yj,temp,lai1,YS1,d8);

	//YS1 = lai;

	//printf("(%d,%d)   lai: %e\n",Yt,Yj,YS1);
  }
	

  //===========================================================================
  //                         methodes  backward
  backward (YREAL lai1, YREAL d1, YREAL d2,YREAL d3,YREAL d4,YREAL d5,YREAL d6,YREAL d7,YREAL d8,YREAL d9,YREAL d10,YREAL d11, YREAL lcan,YREAL temp_init)
  {
	YJ1I1 = 1;
	//derivadas
	/*double dtemp_d1=0, dtemp_d2=0, dtemp_d3=0, dtemp_d4=0, dtemp_d5=0, dtemp_d6=0, dtemp_d7=0, dtemp_d8=0, dtemp_d9=0, dtemp_d10=0,dtemp_d11=0;
	double d_tempinit = 0;
	double dYS1_temp = 0;
	//printf("lcanop %d \n",lcanop);	
	if((bypass_lai_active == 1) && (sechiba_vegmax[Yi][Yj] != 0))
	{
		YJ1I1 = YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = 0;
	}
	else
	{	
		if(Yt ==1)
		{
			//YJ1I1 = YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = 0;

			
			//if(sechiba_vegmax[0][Yj] !=0)
			//	YS1 = 2.0;
			//else
			//	YS1 = 0;

			//temp =tempfunc(temp_init);

			d_tempinit = d_tempfunc(temp_init);

			if(Yj ==0)
				YJ1I1 = YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = YJ1I13 = YJ1I14 = 0;
			else
			{
				//YS1 = llaimin[Yj] + temp * (llaimax[Yj] - llaimin[Yj]);	

				dYS1_temp = (llaimax[Yj] - llaimin[Yj]);	

				YJ1I14 = dYS1_temp * d_tempinit;
				YJ1I1 = YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = YJ1I13 = 0;
			}

		}
		else if(((Yt)% (int) (one_day_pdt))==0)
		{
			//temp =tempfunc(YS_T_diag_stemp(0,Yi,lcanop,Yt-1));

			switch((int)lcan)
			{
				case 0: { dtemp_d1 =d_tempfunc(d1);
					  break;}	
				case 1: { dtemp_d2 =d_tempfunc(d2);
					  break;}
				case 2: { dtemp_d3 =d_tempfunc(d3);
					  break;}	
				case 3: { dtemp_d4 =d_tempfunc(d4);
					  break;}
				case 4: { dtemp_d5 =d_tempfunc(d5);
					  break;}	
				case 5: { dtemp_d6 =d_tempfunc(d6);
					  break;}
				case 6: { dtemp_d7 =d_tempfunc(d7);
					  break;}	
				case 7: { dtemp_d8 =d_tempfunc(d8);
					  break;}
				case 8: { dtemp_d9 =d_tempfunc(d9);
					  break;}	
				case 9: { dtemp_d10 =d_tempfunc(d10);
					  break;}
				case 10: { dtemp_d11 =d_tempfunc(d11);
					  break;}
			}	
			

			if(Yj ==0)
			{
				YJ1I1 = YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = 0;
			}
			else
			{
				dYS1_temp = (llaimax[Yj] - llaimin[Yj]);

				YJ1I1 = 0;
				YJ1I2 = dYS1_temp * dtemp_d1;
				YJ1I3 = dYS1_temp * dtemp_d2;
				YJ1I4 = dYS1_temp * dtemp_d3;
				YJ1I5 = dYS1_temp * dtemp_d4;
				YJ1I6 = dYS1_temp * dtemp_d5;
				YJ1I7 = dYS1_temp * dtemp_d6;
				YJ1I8 = dYS1_temp * dtemp_d7;
				YJ1I9 = dYS1_temp * dtemp_d8;
				YJ1I10 = dYS1_temp * dtemp_d9;
				YJ1I11 = dYS1_temp * dtemp_d10;
				YJ1I12 = dYS1_temp * dtemp_d11;	
			}
		}
		else
		{
			YJ1I1 = 1;
			YJ1I2 = YJ1I3 = YJ1I4 = YJ1I5 = YJ1I6 = YJ1I7 = YJ1I8 = YJ1I9 = YJ1I10 = YJ1I11 = YJ1I12 = 0;
		}
	}

	*/
	
  }

  //===========================================================================

//************************** FIN DU MODULE S_lai.h  **********************


